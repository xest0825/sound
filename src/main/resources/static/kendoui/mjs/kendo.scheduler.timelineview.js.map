{"version":3,"file":"kendo.scheduler.timelineview.js","names":["__meta__","id","name","category","description","depends","hidden","$","undefined$1","kendo","window","ui","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","getMilliseconds","MS_PER_DAY","MS_PER_MINUTE","INVERSE_COLOR_CLASS","BORDER_SIZE_COEFF","NS","EVENT_TEMPLATE","template","DATA_HEADER_TEMPLATE","toInvariantTime","staticDate","Date","setColspan","columnLevel","count","columns","i","length","colspan","TimelineGroupedView","Class","init","view","this","_view","_getTimeSlotByPosition","x","y","groupIndex","groups","timeSlotByPosition","_hideHeaders","timesHeader","find","last","hide","datesHeader","_setColspan","timeColumn","_createRowsLayout","resources","rows","groupHeaderTemplate","_createVerticalColumnsLayout","_createColumnsLayout","_getRowCount","_groupCount","_getGroupsCount","_addContent","dates","columnCount","groupsCount","rowCount","start","end","slotTemplate","isVerticalGrouped","html","options","appendRow","tmplDate","content","classes","isToday","idx","workDayStart","workDayEnd","_isWorkDay","rowIdx","groupIdx","_resourceBySlot","_forTimeRange","_addTimeSlotsCollections","groupCount","datesCount","tableRows","interval","isVerticallyGrouped","Math","floor","time","rowMultiplier","group","cellMultiplier","cells","children","cellsPerGroup","cellsPerDay","dateIndex","cellOffset","startTime","cellIndex","_addTimeSlotToCollection","_getVerticalGroupCount","_getVerticalRowCount","eventGroups","maxRowCount","_isVerticallyGrouped","_renderEvent","eventGroup","event","adjustedEvent","range","container","element","_createEventElement","occurrence","head","tail","appendTo","css","top","height","eventHeight","eventObject","_startTime","_endTime","uid","slotRange","rowIndex","offsetTop","events","_inverseEventColor","addContinuousEvent","isAllDay","_arrangeRows","_verticalCountForLevel","level","_rowCountForLevel","_horizontalCountForLevel","_columnCountForLevel","_updateCurrentVerticalTimeMarker","ranges","currentTime","elementHtml","headerWrap","left","round","innerRect","getTime","timesTableMarker","prependTo","addClass","CURRENT_TIME_MARKER_ARROW_CLASS","_adjustLeftPosition","prev","position","width","scrollHeight","_changeGroup","_prevGroupSlot","slot","isDay","_collection","_nextGroupSlot","first","_verticalSlots","selection","reverse","_verticalMethod","_normalizeVerticalSelection","_horizontalSlots","method","startSlot","endSlot","multiple","result","_isHorizontallyGrouped","_changeVerticalViewPeriod","_changeHorizontalViewPeriod","slots","shift","_changeViewPeriod","_updateDirection","_createMoveHint","hint","rect","snap","right","offsetHeight","inverseColor","_appendMoveHint","_isRtl","scrollWidth","clientWidth","TimelineGroupedByDateView","times","eq","_createDateLayout","subColumns","isMajorTickColumn","isMiddleColumn","isLastSlotColumn","minorTickColumns","workDateIndex","tempStart","minorTickCount","msInterval","majorTick","_dates","startIndex","endIndex","eventObjects","index","currentSlot","_timeSlotCollections","_slots","dateRange","timeSlotRanges","push","firstTimesCell","lastTimesCell","markerTopPosition","timesTableMarkerCss","previous","_changeDate","collections","_getCollections","tempSlot","startEnd","slotIdx","collection","offsetLeft","offsetWidth","scheduler","TimelineView","that","fn","call","_groupedView","_getGroupedView","title","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_isVirtualized","_isGroupedByDate","_getNextEventIndexBySlot","sortedEvents","tempIndex","startDate","_getSelectedSlot","pad","_getSortedEvents","uniqueAllEvents","sort","second","isDaySlot","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","_scrollTo","elementOffset","elementOffsetDir","containerScroll","scrollLeft","containerOffsetDir","rightDistance","remove","_isInDateSlot","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","orientation","currentGroup","utcCurrentTime","toUtcTime","slotByStartDate","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","editable","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","attr","preventDefault","create","_slotByPosition","pageX","pageY","resourceInfo","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","location","_editUserEvents","eventElement","target","touch","initialTouch","hasClass","mozilla","webkit","version","msie","scrollTop","ceil","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","today","endTime","showWorkHours","eventMinWidth","columnWidth","majorTimeHeaderTemplate","eventTemplate","dateHeaderTemplate","footer","command","messages","defaultRowText","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_render","_startDate","_endDate","_calculateSlotRanges","createLayout","_layout","_content","_footer","_setContentWidth","refreshLayout","th","currentTarget","contentWidth","contentTable","minWidth","calculatedWidth","add","slotStartTime","slotEndTime","slotRanges","rangeStart","rangeEnd","_slotRanges","min","max","action","verticalByDate","msMin","msMax","msMajorInterval","majorTickDivider","timeColumns","text","groupedView","minorTickSlots","minorTickIndex","className","minorTicks","middleColumn","lastSlotColumn","minorSlotsCount","slice","groupedResources","_groupOrientation","toggleFullDay","currentDate","isWorkDay","columnLevels","rowLevel","rowLevels","day","getDay","append","_addResourceView","addTimeSlotCollection","addDays","_timeSlotGroups","_timeSlotInterval","cell","getTimeSlotCollection","UTC","getFullYear","getMonth","addTimeSlot","visibleEndDate","nextDate","nextDay","previousDate","previousDay","render","_headerColumnCount","data","Query","field","dir","toArray","eventsByResource","_eventsByResource","_renderEvents","_setRowsHeight","_positionEvents","eventsForGroup","eventUid","Array","isArray","eventIndex","_positionEvent","eventBottomOffset","_getBottomRowOffset","verticalGroupCount","rowsCount","rowHeight","timesRow","row","_refreshSlots","minOffset","maxOffset","slotsCollection","lastSlot","offsetRight","refresh","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","value","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","_isInTimeSlot","slotIndex","_adjustEvent","eventStartTime","_time","eventEndTime","adjustedStartDate","adjustedEndDate","clone","isMultiDayEvent","duration","_continuousEvents","isMobile","showDelete","destroy","resizable","resize","eventStartDate","eventEndDate","eventResources","apply","ns","singleDay","ariaLabel","_formatEventAriaLabel","angular","elements","dataItem","rectRight","startPosition","endPosition","rectLeft","eventsForSlot","collidingEvents","addEvent","createRows","rowEvents","j","eventLength","_updateEventForSelection","_eventOptionsForMove","_updateEventForResize","set","_updateMoveHint","distance","clonedEvent","eventDuraton","_removeMoveHint","rangeIndex","_moveHint","_updateResizeHint","_removeResizeHint","startRect","_createResizeHint","_resizeHint","toString","toLocalDate","selectionByElement","vertical","collectionIndex","backward","prevGroupSlot","nextGroupSlot","newStart","newEnd","_isInRange","move","key","handled","keys","DOWN","UP","LEFT","RIGHT","off","clearInterval","groupOptions","passedChildren","numberOfChildren","resourceIndex","levels","groupLevel","groupLevelMember","_setResourceValue","TimelineWeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","TimelineWorkWeekView","weekStart","map","indexOf","TimelineMonthView","firstDayOfMonth","lastDayOfMonth","jQuery"],"sources":["kendo.scheduler.timelineview.js"],"mappings":"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","sourcesContent":["import './kendo.scheduler.view.js';\n\nvar __meta__ = {\n    id: \"scheduler.timelineview\",\n    name: \"Scheduler Timeline View\",\n    category: \"web\",\n    description: \"The Scheduler Timeline View\",\n    depends: [ \"scheduler.view\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        setTime = kendo.date.setTime,\n        SchedulerView = ui.SchedulerView,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        getDate = kendo.date.getDate,\n        getMilliseconds = kendo.date.getMilliseconds,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n        CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n        CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n        SCHEDULER_HEADER_WRAP_CLASS = \"k-scheduler-header-wrap\",\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        BORDER_SIZE_COEFF = 0.8666,\n        NS = \".kendoTimelineView\";\n\n    var EVENT_TEMPLATE = kendo.template('<div>' +\n        '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' +\n        '<div class=\"k-event-template\">${title}</div></div>'),\n        DATA_HEADER_TEMPLATE = kendo.template(\"<span class='k-link k-nav-day'>#=kendo.format('{0:m}', date)#</span>\"),\n        EVENT_WRAPPER_STRING = '<div role=\"button\" ' +\n                'aria-label=\"#: ariaLabel #\" ' +\n                'data-#=ns#uid=\"#=uid#\"' +\n                '#if (resources[0]) { #' +\n                    'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' +\n                    'class=\"k-event\" ' +\n                '#} else {#' +\n                    'class=\"k-event\"' +\n                '#}#' +\n                '>' +\n                '<span class=\"k-event-actions\">' +\n                    '# if(data.tail) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-left\"></span>' +\n                    '#}#' +\n                    '# if(data.isException()) {#' +\n                        '<span class=\"k-icon k-i-non-recurrence\"></span>' +\n                    '# } else if(data.isRecurring()) {#' +\n                        '<span class=\"k-icon k-i-reload\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '{0}' +\n                '<span class=\"k-event-actions\">' +\n                    '#if (showDelete) {#' +\n                        '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' +\n                    '#}#' +\n                    '# if(data.head) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-right\"></span>' +\n                    '#}#' +\n                '</span>' +\n                '#if(resizable && !data.tail){#' +\n                '<span class=\"k-resize-handle k-resize-w\"></span>' +\n                '#}#' +\n                '#if(resizable && !data.head){#' +\n                '<span class=\"k-resize-handle k-resize-e\"></span>' +\n                '#}#' +\n                '</div>';\n\n    function toInvariantTime(date) {\n        var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n        setTime(staticDate, getMilliseconds(date));\n        return staticDate;\n    }\n\n    function getWorkDays(options) {\n        if (options.workDays && options.workDays.length) {\n            return options.workDays;\n        }\n\n        var workDays = [];\n        var dayIndex = options.workWeekStart % 7;\n        var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n        workDays.push(dayIndex);\n\n        while (workWeekEnd != dayIndex) {\n            if (dayIndex > 6 ) {\n                dayIndex -= 7;\n            } else {\n                dayIndex++;\n            }\n            workDays.push(dayIndex);\n        }\n        return workDays;\n    }\n\n    function setColspan(columnLevel) {\n        var count = 0;\n        if (columnLevel.columns) {\n            for (var i = 0; i < columnLevel.columns.length; i++) {\n                count += setColspan(columnLevel.columns[i]);\n            }\n            columnLevel.colspan = count;\n            return count;\n        } else {\n            columnLevel.colspan = 1;\n            return 1;\n        }\n    }\n\n    function collidingEvents(elements, left, right) {\n        var idx,\n            startPosition,\n            overlaps,\n            endPosition;\n\n        for (idx = elements.length - 1; idx >= 0; idx--) {\n            startPosition = elements[idx].rectLeft;\n            endPosition = elements[idx].rectRight;\n\n            overlaps = startPosition <= left && endPosition >= left;\n\n            if (overlaps || (startPosition >= left && endPosition <= right) || (left <= startPosition && right >= startPosition)) {\n                if (startPosition < left) {\n                    left = startPosition;\n                }\n\n                if (endPosition > right) {\n                    right = endPosition;\n                }\n            }\n        }\n\n        return eventsForSlot(elements, left, right);\n    }\n\n    function eventsForSlot(elements, left, right) {\n        var events = [];\n\n        for (var idx = 0; idx < elements.length; idx++) {\n            var event = {\n                rectLeft: elements[idx].rectLeft,\n                rectRight: elements[idx].rectRight\n            };\n\n            if ((event.rectLeft < left && event.rectRight > left) || (event.rectLeft >= left && event.rectRight <= right)) {\n                events.push(elements[idx]);\n            }\n        }\n\n        return events;\n    }\n\n    var TimelineGroupedView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.timeSlotByPosition(x, y);\n        },\n\n        _hideHeaders: function() {\n            var view = this._view;\n\n            view.timesHeader.find(\"table tr\").last().hide(); /*Chrome fix, use CSS selector*/\n            view.datesHeader.find(\"table tr\").last().hide();\n        },\n\n        _setColspan: function(timeColumn) {\n            setColspan(timeColumn);\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n\n            return columns;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n        },\n\n        _getRowCount: function() {\n            var view = this._view;\n\n            return view._groupCount();\n        },\n\n        _getGroupsCount: function() {\n            return 1;\n        },\n\n        _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n            var view = this._view;\n            var html = '';\n            var options = view.options;\n\n            var appendRow = function(date) {\n                var content = \"\";\n                var classes = \"\";\n                var tmplDate;\n\n                var resources = function(groupIndex) {\n                    return function() {\n                        return view._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                    !view._isWorkDay(dates[idx])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGrouped ? rowIdx : groupIdx) });\n                content += \"</td>\";\n\n                return content;\n            };\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += '<tr>';\n                for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                    for (var idx = 0, length = columnCount; idx < length; idx++) {\n                        html += view._forTimeRange(start, end, appendRow);\n                    }\n                }\n                html += \"</tr>\";\n            }\n            return html;\n        },\n\n        _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n            var view = this._view;\n            var rowCount = tableRows.length;\n\n            if (isVerticallyGrouped) {\n                rowCount = Math.floor(rowCount / groupCount);\n            }\n\n            for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                var rowMultiplier = 0;\n                var group = view.groups[groupIndex];\n                var time;\n\n                if (isVerticallyGrouped) {\n                    rowMultiplier = groupIndex;\n                }\n\n                var rowIndex = rowMultiplier * rowCount;\n                var cellMultiplier = 0;\n\n                if (!isVerticallyGrouped) {\n                    cellMultiplier = groupIndex;\n                }\n\n                var cells = tableRows[rowIndex].children;\n                var cellsPerGroup = cells.length / (!isVerticallyGrouped ? groupCount : 1);\n                var cellsPerDay = cellsPerGroup / datesCount;\n\n                for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                    var cellOffset = dateIndex * cellsPerDay + (cellsPerGroup * cellMultiplier);\n                    time = getMilliseconds(new Date(+view.startTime()));\n\n                    for (var cellIndex = 0; cellIndex < cellsPerDay; cellIndex++) {\n\n                        view._addTimeSlotToCollection(group, cells, cellIndex, cellOffset, dateIndex, time, interval);\n                        time += interval;\n                    }\n                }\n            }\n        },\n\n        _getVerticalGroupCount: function(groupsCount) {\n\n            return groupsCount;\n        },\n\n        _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n            var view = this._view;\n\n            return view._isVerticallyGrouped() ? eventGroups[groupIndex].maxRowCount : maxRowCount;\n        },\n\n        _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container) {\n            var view = this._view;\n            var element;\n\n            element = view._createEventElement(adjustedEvent.occurrence, event, range.head || adjustedEvent.head, range.tail || adjustedEvent.tail);\n            element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n\n            var eventObject = {\n                start: adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start,\n                end: adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end,\n                element: element,\n                uid: event.uid,\n                slotRange: range,\n                rowIndex: 0,\n                offsetTop: 0\n            };\n\n            eventGroup.events[event.uid] = eventObject;\n\n            view._inverseEventColor(element);\n            view.addContinuousEvent(group, range, element, event.isAllDay);\n            view._arrangeRows(eventObject, range, eventGroup);\n        },\n\n        _verticalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _updateCurrentVerticalTimeMarker: function(ranges, currentTime) {\n            var view = this._view;\n            var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n            var headerWrap = view.datesHeader.find(\".\" + SCHEDULER_HEADER_WRAP_CLASS);\n            var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n            var timesTableMarker = $(elementHtml)\n                    .prependTo(headerWrap)\n                    .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n            timesTableMarker.css({\n                left: view._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                top: headerWrap.find(\"tr\").last().prev().position().top\n            });\n\n            $(elementHtml).prependTo(view.content).css({\n                left: view._adjustLeftPosition(left),\n                width: \"1px\",\n                height: view.content[0].scrollHeight - 1,\n                top: 0\n            });\n        },\n\n        _changeGroup: function() {\n            return undefined$1;\n        },\n\n        _prevGroupSlot: function(slot, group, isDay) {\n            var view = this._view;\n\n            if (view._isVerticallyGrouped()) {\n                return slot;\n            } else {\n                var collection = group._collection(0, isDay);\n                return collection.last();\n            }\n        },\n\n        _nextGroupSlot: function(slot, group, isDay) {\n            var view = this._view;\n\n            if (view._isVerticallyGrouped()) {\n                return slot;\n            } else {\n                var collection = group._collection(0, isDay);\n                return collection.first();\n            }\n        },\n\n        _verticalSlots: function(selection, reverse) {\n             var view = this._view;\n\n             return view._changeGroup(selection, reverse);\n        },\n\n         _verticalMethod: function(reverse) {\n\n              return reverse ? \"leftSlot\" : \"rightSlot\";\n         },\n\n         _normalizeVerticalSelection: function() {\n             return undefined$1;\n         },\n\n         _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n            var view = this._view;\n            var result = {};\n\n            result.startSlot = group[method](startSlot);\n            result.endSlot = group[method](endSlot);\n\n            if (!multiple && view._isHorizontallyGrouped() && (!result.startSlot || !result.endSlot)) {\n                result.startSlot = result.endSlot = view._changeGroup(selection, reverse);\n            }\n\n            return result;\n        },\n\n        _changeVerticalViewPeriod: function() {\n            return false;\n        },\n\n        _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n            var view = this._view;\n\n            if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                return true;\n            }\n            return false;\n        },\n\n        _updateDirection: function(selection, ranges, shift, reverse) {\n            var view = this._view;\n\n            view._updateDirection(selection, ranges, shift, reverse, true);\n        },\n\n         _createMoveHint: function(range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n\n                var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                hint.addClass(\"k-event-drag-hint\");\n\n                var rect = range.innerRect(adjustedEvent.occurrence.start, adjustedEvent.occurrence.end, view.options.snap);\n                var width = rect.right - rect.left;\n\n                if (width < 0) {\n                    width = 0;\n                }\n\n                var left = view._adjustLeftPosition(rect.left);\n\n                var css = {\n                    left: left,\n                    top: startSlot.offsetTop,\n                    height: startSlot.offsetHeight,\n                    width: width\n                };\n\n                hint.css(css);\n\n                if (adjustedEvent.occurrence.inverseColor) {\n                    hint.addClass(INVERSE_COLOR_CLASS);\n                }\n\n                view._appendMoveHint(hint);\n         },\n\n         _adjustLeftPosition: function(left) {\n            var view = this._view;\n\n            if (view._isRtl) {\n                left -= (view.content[0].scrollWidth - view.content[0].clientWidth);\n            }\n\n            return left;\n         }\n    });\n\n    var TimelineGroupedByDateView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.timeSlotByPosition(x, y, true);\n        },\n\n        _hideHeaders: function() {\n            var view = this._view;\n\n            if (!view._isVerticallyGrouped()) {\n                view.timesHeader.find(\"table tr\").eq(2).hide();\n                view.datesHeader.find(\"table tr\").eq(2).hide();\n            } else {\n                        view.times.find(\".k-last\").hide();\n            }\n        },\n        _setColspan: function() {},\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n            var view = this._view;\n\n            return view._createDateLayout(columns, null, true);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, null, groupHeaderTemplate);\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate, subColumns) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n        },\n\n        _getRowCount: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _getGroupsCount: function() {\n            var view = this._view;\n\n            return view._groupCount();\n        },\n\n        _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n            var view = this._view;\n            var html = '';\n            var options = view.options;\n\n            var appendRow = function(date, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, groupIdx) {\n                var content = \"\";\n                var classes = \"\";\n                var tmplDate;\n                var workDateIndex = view._isVerticallyGrouped() ? dateIndex : idx;\n\n                var resources = function(groupIndex) {\n                    return function() {\n                        return view._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                    !view._isWorkDay(dates[workDateIndex])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(groupIdx) });\n                content += \"</td>\";\n\n                return content;\n            };\n\n            var tempStart = new Date(start),\n                minorTickCount = view.options.minorTickCount,\n                msMajorInterval = view.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                dateIndex;\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += '<tr>';\n\n                 if ((rowIdx % (rowCount / view._dates.length)) === 0) {\n                   dateIndex = (rowIdx / (rowCount / view._dates.length));\n                   tempStart = new Date(view._dates[dateIndex]);\n                   kendo.date.setTime(tempStart, kendo.date.getMilliseconds(start));\n                  }\n\n                for (var idx = 0, length = columnCount; idx < length; idx++) {\n\n                    html += view._forTimeRange(tempStart, end, appendRow, isVerticalGrouped, groupsCount);\n\n                    if (isVerticalGrouped) {\n                    setTime(tempStart, msInterval, false);\n                        break;\n                    }\n                }\n               html += \"</tr>\";\n            }\n\n            return html;\n        },\n\n        _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n            var view = this._view;\n            var rowCount = tableRows.length;\n\n             if (isVerticallyGrouped) {\n                rowCount = rowCount / datesCount;\n             }\n\n            for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                var rowMultiplier = 0;\n                var time;\n\n                if (isVerticallyGrouped) {\n                    rowMultiplier = dateIndex;\n                }\n\n                var rowIndex = rowMultiplier * rowCount;\n                var cellMultiplier = 0;\n                var cells = tableRows[rowIndex].children;\n                var cellsPerGroup = isVerticallyGrouped ? rowCount : cells.length / (datesCount * groupCount);\n                var cellsPerDay = cells.length / datesCount;\n                var cellOffset;\n\n                time = getMilliseconds(new Date(+view.startTime()));\n\n                for (var cellIndex = 0; cellIndex < cellsPerGroup; cellIndex++) {\n                    if (!isVerticallyGrouped) {\n                        cellOffset = (dateIndex * cellsPerDay) + (groupCount * cellIndex);\n                        cellMultiplier++;\n                    } else {\n                        cellOffset = 0;\n                        cells = tableRows[cellIndex + (cellsPerGroup * dateIndex)].children;\n                    }\n\n                    for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                        var group = view.groups[groupIndex];\n\n                        view._addTimeSlotToCollection(group, cells, groupIndex, cellOffset, dateIndex, time, interval);\n                    }\n                    time += interval;\n                }\n             }\n        },\n\n        _getVerticalGroupCount: function() {\n            var view = this._view;\n\n            return view.content.find(\"tr\").length;\n        },\n\n        _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n\n            return maxRowCount;\n        },\n\n        _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex) {\n            var view = this._view;\n            var element;\n            var eventObjects = [];\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                element = view._createEventElement(adjustedEvent.occurrence, event, i !== endIndex, i !== startIndex);\n                element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n                var currentSlot = group._timeSlotCollections[0]._slots[i];\n                var dateRange = group.timeSlotRanges(currentSlot.start, currentSlot.end, false)[0];\n\n                    var eventObject = {\n                    start: i === startIndex ? adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start : currentSlot.start,\n                    end: i === endIndex ? adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end : currentSlot.end,\n                    element: element,\n                    uid: event.uid,\n                    slotRange: dateRange,\n                    rowIndex: 0,\n                    offsetTop: 0\n                };\n\n                eventGroup.events[event.uid] = eventObject;\n                eventObjects.push(eventObject);\n\n                view.addContinuousEvent(group, dateRange, element, event.isAllDay);\n                view._arrangeRows(eventObject, dateRange, eventGroup);\n            }\n            eventGroup.events[event.uid] = eventObjects;\n        },\n\n        _verticalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _horizontalCountForLevel: function(level, columnLevel) {\n            var view = this._view;\n\n            return view._columnCountForLevel(columnLevel) / view._columnCountForLevel(2);\n        },\n\n        _updateCurrentVerticalTimeMarker: function(ranges,currentTime) {\n            var view = this._view;\n            var firstTimesCell = view.times.find(\"tr\").first().find(\"th\").first();\n            var lastTimesCell = view.times.find(\"tr\").first().find(\"th\").last();\n            var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n            var timesTableMarker = $(elementHtml).prependTo(view.times);\n            var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n            var timesTableMarkerCss = {};\n\n            if (this._isRtl) {\n                timesTableMarkerCss.right = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n            } else {\n                timesTableMarkerCss.left = lastTimesCell.position().left;\n                timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n            }\n\n            timesTableMarkerCss.top = markerTopPosition - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n\n            timesTableMarker.css(timesTableMarkerCss);\n\n            $(elementHtml).prependTo(view.content).css({\n                top: markerTopPosition,\n                height: \"1px\",\n                right: \"1px\",\n                width: view.content[0].scrollWidth,\n                left: 0\n            });\n        },\n\n        _changeGroup: function(selection, previous, slot) {\n             var view = this._view;\n\n             if (!slot) {\n                selection.groupIndex = previous ? view.groups.length - 1 : 0;\n             }\n        },\n\n         _prevGroupSlot: function(slot) {\n              return slot;\n        },\n\n        _nextGroupSlot: function(slot) {\n              return slot;\n        },\n\n        _changeDate: function(selection, reverse, slot) {\n            var view = this._view;\n            var group = view.groups[selection.groupIndex];\n            var collections, index;\n\n            if (reverse) {\n                  collections = group._getCollections(false);\n                  index = slot.index - 1;\n\n                  if (index >= 0) {\n                      return collections[0]._slots[index];\n                  }\n              } else {\n                  collections = group._getCollections(false);\n                  index = slot.index + 1;\n\n                  if (collections[0] && collections[0]._slots[index]) {\n                      return collections[0]._slots[index];\n                  }\n               }\n        },\n\n        _verticalSlots: function(selection, reverse, slot) {\n            return this._changeDate(selection, reverse, slot);\n        },\n\n        _verticalMethod: function(reverse, multiple) {\n            if (multiple) {\n               return reverse ? \"upSlot\" : \"downSlot\";\n            } else {\n               return reverse ? \"leftSlot\" : \"rightSlot\";\n            }\n        },\n\n        _normalizeVerticalSelection: function(selection, ranges, reverse, multiple) {\n            var view = this._view;\n\n            if (!multiple) {\n                return view._normalizeVerticalSelection(selection, ranges, reverse);\n            }\n\n            return undefined$1;\n        },\n\n        _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n             var view = this._view;\n             var tempSlot = view._changeGroup(selection, reverse);\n             var result = {};\n\n            if (!tempSlot) {\n                if (!view._isVerticallyGrouped()) {\n                    result.startSlot = group[method](startSlot);\n                    result.endSlot = group[method](endSlot);\n                }\n\n            } else {\n                result.startSlot = result.endSlot = tempSlot;\n            }\n\n            return result;\n        },\n\n        _changeVerticalViewPeriod: function(slots, shift, selection, reverse) {\n            var view = this._view;\n\n            if ((!slots.startSlot || !slots.endSlot) && !shift &&\n                view._changeViewPeriod(selection, reverse, view._isVerticallyGrouped())) {\n                return true;\n            }\n            return false;\n        },\n\n        _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n           var view = this._view;\n\n           if ( view._isVerticallyGrouped()) {\n               return false;\n           }\n\n           if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                return true;\n            }\n            return false;\n        },\n\n        _updateDirection: function(selection, ranges, shift, reverse) {\n            var view = this._view;\n\n            view._updateDirection(selection, ranges, shift, reverse, !view._isVerticallyGrouped());\n        },\n\n         _createMoveHint: function(range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n                var startEnd = range.end;\n\n                for (var slotIdx = startSlot.index; slotIdx <= startEnd.index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                    hint.addClass(\"k-event-drag-hint\");\n\n                    var css = {\n                        left: slot.offsetLeft + 2,\n                        top: slot.offsetTop,\n                        height: view.options.eventHeight,\n                        width: slot.offsetWidth\n                    };\n\n                    hint.css(css);\n\n                    if (adjustedEvent.occurrence.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    view._appendMoveHint(hint);\n                }\n         },\n\n         _adjustLeftPosition: function(left) {\n             var view = this._view;\n\n            if (view._isRtl && !view._isVerticallyGrouped()) {\n                left -= (view.content[0].scrollWidth - view.content[0].offsetWidth);\n            }\n\n            return left;\n         }\n });\n\n    kendo.ui.scheduler.TimelineGroupedView = TimelineGroupedView;\n    kendo.ui.scheduler.TimelineGroupedByDateView = TimelineGroupedByDateView;\n\n    var TimelineView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            SchedulerView.fn.init.call(that, element, options);\n\n            that._groupedView = that._getGroupedView();\n\n            that.title = that.options.title || that.options.name;\n\n            that._workDays = getWorkDays(that.options);\n\n            that._templates();\n\n            that._editable();\n\n            that.calculateDateRange();\n\n            that._groups();\n\n            that._currentTime(true);\n        },\n        name: \"timeline\",\n\n        _isVirtualized: function() {\n            return false;\n        },\n\n        _getGroupedView: function() {\n\n            if (this._isGroupedByDate()) {\n                   return new kendo.ui.scheduler.TimelineGroupedByDateView(this);\n            } else {\n                   return new kendo.ui.scheduler.TimelineGroupedView(this);\n            }\n        },\n\n        _getNextEventIndexBySlot: function(slot, sortedEvents, groupIndex) {\n           if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getNextEventIndexBySlot.call(this, slot, sortedEvents, groupIndex);\n           }\n\n            var tempIndex = 0;\n\n            for (var i = 0; i < sortedEvents.length; i++) {\n                if (slot.startDate() > sortedEvents[i].start.startDate()) {\n                    tempIndex++;\n                    continue;\n                }\n\n                if (slot.startDate().getTime() === sortedEvents[i].start.startDate().getTime() &&\n                 groupIndex > sortedEvents[i].start.groupIndex) {\n                      tempIndex++;\n                      continue;\n                }\n\n                 break;\n\n            }\n            return tempIndex;\n        },\n\n        _getSelectedSlot: function(slot, sortedEvents, event, idx, pad, prev) {\n            if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getSelectedSlot.call(this, slot, sortedEvents, event, idx, pad, prev);\n            }\n\n            return slot;\n        },\n\n        _getSortedEvents: function(uniqueAllEvents) {\n            if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getSortedEvents.call(this, uniqueAllEvents);\n            }\n\n            return uniqueAllEvents.sort(function(first, second) {\n                var result = first.start.startDate().getTime() - second.start.startDate().getTime();\n\n                if (result === 0) {\n                    if (first.start.isDaySlot && !second.start.isDaySlot) {\n                            result = -1;\n                    }\n\n                    if (!first.start.isDaySlot && second.start.isDaySlot) {\n                            result = 1;\n                    }\n                }\n\n                if (result === 0) {\n                    result = first.start.groupIndex - second.start.groupIndex;\n                }\n\n                if (result === 0) {\n                    result = $(first.element).index() - $(second.element).index();\n                }\n\n                return result;\n            });\n        },\n\n        _currentTimeMarkerUpdater: function() {\n            this._updateCurrentTimeMarker(new Date());\n        },\n\n        _scrollTo: function(element, container) {\n            SchedulerView.fn._scrollTo.call(this, element, container);\n\n            var elementOffset = element.offsetLeft,\n                elementOffsetDir = element.offsetWidth,\n                containerScroll = container.scrollLeft,\n                containerOffsetDir = container.clientWidth,\n                rightDistance = elementOffset + elementOffsetDir,\n                result = 0;\n\n                if (containerScroll > elementOffset) {\n                    result = elementOffset;\n                } else if (rightDistance > (containerScroll + containerOffsetDir)) {\n                    if (elementOffsetDir <= containerOffsetDir) {\n                        result = (rightDistance - containerOffsetDir);\n                    } else {\n                        result = elementOffset;\n                    }\n                } else {\n                    result = containerScroll;\n                }\n                container.scrollLeft = result;\n        },\n\n        _updateCurrentTimeMarker: function(currentTime) {\n            var options = this.options;\n\n            this.datesHeader.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n            this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n            this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n\n            if (!this._isInDateSlot({ start: currentTime, end: currentTime })) {\n                return;\n            }\n\n            if (options.currentTimeMarker.useLocalTimezone === false) {\n                var timezone = options.dataSource.options.schema.timezone;\n\n                if (options.dataSource && timezone) {\n                    var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                    currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                }\n            }\n\n            var groupsCount = !options.group || options.group.orientation == \"vertical\" ? 1 : this.groups.length;\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var currentGroup = this.groups[groupIndex];\n\n                if (!currentGroup) {\n                    return;\n                }\n\n                var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                if (ranges.length === 0) {\n                    return;\n                }\n\n                var collection = ranges[0].collection;\n                var slotElement = collection.slotByStartDate(currentTime);\n\n                if (slotElement) {\n\n                    if (this._isVerticallyGrouped()) {\n                        this._groupedView._updateCurrentVerticalTimeMarker(ranges,currentTime);\n                    } else {\n                        var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n                        var headerWrap = this.datesHeader.find(\".\" + SCHEDULER_HEADER_WRAP_CLASS);\n                        var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                        var timesTableMarker = $(elementHtml)\n                                .prependTo(headerWrap)\n                                .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n                        timesTableMarker.css({\n                            left: this._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                            top: headerWrap.find(\"tr\").last().prev().position().top\n                        });\n\n                        $(elementHtml).prependTo(this.content).css({\n                            left: this._adjustLeftPosition(left),\n                            width: \"1px\",\n                            height: this.content[0].scrollHeight - 1,\n                            top: 0\n                        });\n                    }\n                }\n            }\n        },\n\n        _adjustLeftPosition: function(left) {\n            return this._groupedView._adjustLeftPosition(left);\n        },\n\n        _currentTime: function(setUpdateTimer) {\n            var that = this;\n            var markerOptions = that.options.currentTimeMarker;\n\n            if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                that._currentTimeMarkerUpdater();\n\n                if (setUpdateTimer) {\n                    that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                }\n            }\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-event a:has(.k-i-close)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-content td\", function(e) {\n                    var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                    }\n\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-content td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                        var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                        var slot = that._slotByPosition(x, y);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that._editUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-event\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var eventElement = $(e.target).closest(\".k-event\");\n                        var touchElement = $(e.touch.initialTouch);\n\n                        if (touchElement.hasClass(\"k-i-close\")) {\n                            that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        } else if (!eventElement.hasClass(\"k-event-active\")) {\n                            that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        _slotByPosition: function(x, y) {\n            var slot;\n            var content = this.content;\n            var offset = content.offset();\n            var groupIndex;\n\n            x -= offset.left;\n            y -= offset.top;\n\n            if (this._isRtl) {\n                var browser = kendo.support.browser;\n\n                if (browser.mozilla || (browser.webkit && browser.version >= 85)) {\n                     x += (content[0].scrollWidth - content[0].offsetWidth);\n                     x += content[0].scrollLeft;\n                } else if (browser.msie) {\n                     x -= kendo.scrollLeft(content);\n                     x += content[0].scrollWidth - content[0].offsetWidth;\n                } else if (browser.webkit) {\n                     x += content[0].scrollLeft;\n                }\n            } else {\n                x += content[0].scrollLeft;\n            }\n\n            y += content[0].scrollTop;\n\n            x = Math.ceil(x);\n            y = Math.ceil(y);\n\n            for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n\n                 slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n\n                 if (slot) {\n                     return slot;\n                 }\n            }\n\n            return null;\n        },\n\n        options: {\n            name: \"TimelineView\",\n            title: \"Timeline\",\n            selectedDateFormat: \"{0:D}\",\n            selectedShortDateFormat: \"{0:d}\",\n            selectedMobileDateFormat: \"{0:MMM dd}\",\n            date: kendo.date.today(),\n            startTime: kendo.date.today(),\n            endTime: kendo.date.today(),\n            showWorkHours: false,\n            minorTickCount: 2,\n            editable: true,\n            workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n            workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n            workWeekStart: 1,\n            workWeekEnd: 5,\n            majorTick: 60,\n            eventHeight: 25,\n            eventMinWidth: 0,\n            columnWidth: 100,\n            groupHeaderTemplate: \"#=text#\",\n            majorTimeHeaderTemplate: \"#=kendo.toString(date, 't')#\",\n            slotTemplate: \"&nbsp;\",\n            eventTemplate: EVENT_TEMPLATE,\n            dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n            footer: {\n                command: \"workDay\"\n            },\n            currentTimeMarker: {\n                updateInterval: 10000,\n                useLocalTimezone: true\n            },\n            messages: {\n                defaultRowText: \"All events\",\n                showFullDay: \"Show full day\",\n                showWorkDay: \"Show business hours\"\n            }\n        },\n\n        events: [\"remove\", \"add\", \"edit\"],\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n            this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n            this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n            this.slotTemplate = kendo.template(options.slotTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        _render: function(dates) {\n            var that = this;\n\n            dates = dates || [];\n\n            that._dates = dates;\n\n            that._startDate = dates[0];\n\n            that._endDate = dates[(dates.length - 1) || 0];\n\n            that._calculateSlotRanges();\n\n            that.createLayout(that._layout(dates));\n\n            that._content(dates);\n\n            that._footer();\n\n            that._setContentWidth();\n\n            that.refreshLayout();\n\n            that.datesHeader.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                var th = $(e.currentTarget).closest(\"th\");\n\n                var slot = that._slotByPosition(th.offset().left, that.content.offset().top);\n\n                that.trigger(\"navigate\", { view: \"timeline\", date: slot.startDate() });\n            });\n\n            that._groupedView._hideHeaders();\n        },\n\n        _setContentWidth: function() {\n            var content = this.content;\n            var contentWidth = content.width();\n            var contentTable = this.content.find(\"table\");\n            var columnCount = contentTable.find(\"tr\").first().children().length;\n\n            var minWidth = 100;\n            var calculatedWidth = columnCount * this.options.columnWidth;\n\n            if (contentWidth < calculatedWidth) {\n                minWidth = Math.ceil((calculatedWidth / contentWidth) * 100);\n            }\n\n            contentTable.add(this.datesHeader.find(\"table\"))\n                .css(\"width\", minWidth + \"%\");\n        },\n\n        _calculateSlotRanges: function() {\n            var dates = this._dates;\n            var slotStartTime = this.startTime();\n            var slotEndTime = this.endTime();\n\n            slotEndTime = getMilliseconds(slotEndTime);\n            slotStartTime = getMilliseconds(slotStartTime);\n\n            if (slotEndTime === slotStartTime) {\n                slotEndTime += MS_PER_DAY - 1;\n            } else if (slotEndTime < slotStartTime) {\n                slotEndTime += MS_PER_DAY;\n            }\n\n            var slotRanges = [];\n            for (var i = 0; i < dates.length; i++) {\n                var rangeStart = getDate(dates[i]);\n                setTime(rangeStart, slotStartTime);\n\n                var rangeEnd = getDate(dates[i]);\n                setTime(rangeEnd, slotEndTime);\n\n                slotRanges.push({\n                    start: kendo.date.toUtcTime(rangeStart),\n                    end: kendo.date.toUtcTime(rangeEnd)\n                });\n            }\n\n            this._slotRanges = slotRanges;\n        },\n\n        _forTimeRange: function(min, max, action, verticalByDate, groupsCount) {\n            min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n            max = toInvariantTime(max);\n\n            var that = this,\n                msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                minorTickCount = that.options.minorTickCount,\n                msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                start = new Date(+min),\n                idx = 0, length,\n                html = \"\";\n\n            length = MS_PER_DAY / msInterval;\n\n            if (msMin != msMax) {\n                if (msMin > msMax) {\n                    msMax += MS_PER_DAY;\n                }\n\n                length = ((msMax - msMin) / msInterval);\n            }\n\n            length = verticalByDate ? 1 : Math.round(length);\n\n            if (groupsCount) {\n                length = length * groupsCount;\n            }\n\n            for (; idx < length; idx++) {\n                var majorTickDivider = idx % (msMajorInterval / msInterval);\n                var isMajorTickColumn = majorTickDivider === 0;\n                var isMiddleColumn = majorTickDivider < minorTickCount - 1;\n                var isLastSlotColumn = majorTickDivider === minorTickCount - 1;\n                var minorTickColumns = minorTickCount;\n\n                if (length % minorTickCount !== 0) {\n                    var isLastMajorSlot = (length - (idx + 1)) < minorTickCount;\n                    if (isMajorTickColumn && isLastMajorSlot) {\n                        minorTickColumns = length % minorTickCount;\n                    }\n                }\n\n                html += action(start, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, idx % groupsCount);\n\n                if (!verticalByDate) {\n                    if (groupsCount) {\n                        if ((idx % groupsCount) === groupsCount - 1) {\n                            setTime(start, msInterval, false);\n                        }\n                    } else {\n                        setTime(start, msInterval, false);\n                    }\n                }\n            }\n\n            return html;\n        },\n\n        _layout: function(dates) {\n            var timeColumns = [];\n            var columns = [];\n            var that = this;\n            var rows = [{ text: that.options.messages.defaultRowText }];\n            var groupedView = that._groupedView;\n\n            var minorTickSlots = [];\n            for (var minorTickIndex = 0; minorTickIndex < that.options.minorTickCount; minorTickIndex++) {\n                minorTickSlots.push({\n                    text: \"&#8203;\",\n                    className: \"k-last\",\n                    minorTicks: true\n                });\n            }\n\n            this._forTimeRange(that.startTime(), that.endTime(), function(date, majorTick, middleColumn, lastSlotColumn, minorSlotsCount) {\n                var template = that.majorTimeHeaderTemplate;\n\n                if (majorTick) {\n                    var timeColumn = {\n                        text: template({ date: date }),\n                        className: lastSlotColumn ? \"k-slot-cell\" : \"\",\n                        columns: minorTickSlots.slice(0, minorSlotsCount)\n                    };\n\n                    groupedView._setColspan(timeColumn);\n\n                    timeColumns.push(timeColumn);\n                }\n            });\n\n            for (var idx = 0; idx < dates.length; idx++) {\n                columns.push({\n                    text: that.dateHeaderTemplate({ date: dates[idx] }),\n                    className: \"k-slot-cell\",\n                    columns: timeColumns.slice(0)\n                });\n            }\n\n            var resources = this.groupedResources;\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    rows = groupedView._createRowsLayout(resources, null, this.groupHeaderTemplate, columns);\n                    columns = groupedView._createVerticalColumnsLayout(resources, null, this.groupHeaderTemplate, columns);\n\n                } else {\n                    columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        _footer: function() {\n            var options = this.options;\n\n            if (options.footer !== false) {\n                var html = '<div class=\"k-scheduler-footer k-toolbar\" role=\"toolbar\">';\n\n                var command = options.footer.command;\n\n                if (this._isMobile()) {\n                    html += '<span class=\"k-scheduler-today\"><a tabindex=\"-1\" href=\"#\" class=\"k-link\">';\n                    html += options.messages.today + '</a></span>';\n                }\n\n                if (command && command === \"workDay\") {\n                    if (this._isMobile()) {\n                        html += '<span class=\"k-scheduler-fullday\"><a tabindex=\"-1\" href=\"#\" class=\"k-link\">';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></span>';\n                    } else {\n                        html += '<button tabindex=\"-1\" type=\"button\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-scheduler-fullday\">';\n                            html += '<span class=\"k-button-icon k-icon k-i-clock\"></span>';\n                            html += '<span class=\"k-button-text\">';\n                                html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay);\n                            html += '</span>';\n                        html += '</button>';\n                    }\n                }\n\n                html += \"</div>\";\n\n                this.footer = $(html).appendTo(this.element);\n\n                var that = this;\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-fullday\", function(e) {\n                    e.preventDefault();\n                    that.toggleFullDay();\n                });\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-today\", function(e) {\n                    e.preventDefault();\n                    var timezone = that.options.timezone;\n                    var action = \"today\";\n                    var currentDate = new Date();\n                    var date;\n\n                    if (timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                        date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                    } else {\n                        date = currentDate;\n                    }\n\n                    that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n                });\n            }\n        },\n\n        toggleFullDay: function() {\n            var options = this.options;\n\n            this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level) {\n            var rowLevel = this.rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        _isWorkDay: function(date) {\n            var day = date.getDay();\n            var workDays = this._workDays;\n\n            for (var i = 0; i < workDays.length; i++) {\n                if (workDays[i] === day) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _content: function(dates) {\n            var that = this;\n            var start = that.startTime();\n            var end = this.endTime();\n            var groupsCount = 1;\n            var rowCount = 1;\n            var columnCount = dates.length;\n            var html = '';\n            var resources = this.groupedResources;\n            var slotTemplate = this.slotTemplate;\n            var isVerticalGrouped = false;\n\n            if (resources.length) {\n                isVerticalGrouped = that._groupOrientation() === \"vertical\";\n\n                if (isVerticalGrouped) {\n                    rowCount = that._groupedView._getRowCount(this.rowLevels.length - 1);\n                    groupsCount = that._groupedView._getGroupsCount();\n                } else {\n                    groupsCount = that._groupCount();\n                }\n            }\n\n            html += '<tbody>';\n            html += that._groupedView._addContent(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped);\n            html += '</tbody>';\n\n            this.content.find(\"table\").append(html);\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var dates = this._dates;\n            var columnCount = dates.length;\n\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                var view = this._addResourceView(idx);\n\n                var start = dates[0];\n                var end = dates[(dates.length - 1) || 0];\n\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n\n                if (startTime !== 0 && endTime <= startTime) {\n                    start = getDate(start);\n                    setTime(start, startTime);\n\n                    end = getDate(end);\n                    setTime(end, endTime);\n                }\n\n                view.addTimeSlotCollection(start, kendo.date.addDays(end, 1));\n            }\n\n            this._timeSlotGroups(groupCount, columnCount);\n        },\n\n        _isHorizontallyGrouped: function() {\n            return this.groupedResources.length && this._groupOrientation() === \"horizontal\";\n        },\n\n        _timeSlotGroups: function(groupCount, datesCount) {\n            var interval = this._timeSlotInterval();\n            var isVerticallyGrouped = this._isVerticallyGrouped();\n            var tableRows = this.content.find(\"tr\");\n\n            this._groupedView._addTimeSlotsCollections(groupCount, datesCount, tableRows, interval, isVerticallyGrouped);\n\n        },\n\n        _addTimeSlotToCollection: function(group, cells, cellIndex, cellOffset, dateIndex, time, interval) {\n              var cell = cells[cellIndex + cellOffset];\n              var collection = group.getTimeSlotCollection(0);\n              var currentDate = this._dates[dateIndex];\n              var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n              var start = currentTime + time;\n              var end = start + interval;\n\n              collection.addTimeSlot(cell, start, end, true);\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        visibleEndDate: function() {\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var endDate = this.endDate();\n\n            if (startTime !== 0 && endTime <= startTime) {\n                endDate = kendo.date.addDays(endDate, 1);\n            }\n\n            return endDate;\n        },\n\n        startTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayStart : options.startTime;\n        },\n\n        endTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayEnd : options.endTime;\n        },\n\n        _timeSlotInterval: function() {\n            var options = this.options;\n            return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this.endDate());\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this.startDate());\n        },\n\n        calculateDateRange: function() {\n            this._render([this.options.date]);\n        },\n\n        render: function(events) {\n            this._headerColumnCount = 0;\n\n            this._groups();\n\n            this.element.find(\".k-event\").remove();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray();\n\n            var eventsByResource = [];\n\n            this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n            var eventGroups = [];\n            var maxRowCount = 0;\n\n            for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                var eventGroup = {\n                    groupIndex: groupIndex,\n                    maxRowCount: 0,\n                    events: {}\n                };\n\n                eventGroups.push(eventGroup);\n\n                this._renderEvents(eventsByResource[groupIndex], groupIndex, eventGroup);\n\n                if (maxRowCount < eventGroup.maxRowCount) {\n                    maxRowCount = eventGroup.maxRowCount;\n                }\n            }\n\n            this._setRowsHeight(eventGroups, eventsByResource.length, maxRowCount);\n\n            this._positionEvents(eventGroups, eventsByResource.length);\n\n            this._currentTime(false);\n\n            this.trigger(\"activate\");\n        },\n\n        _positionEvents: function(eventGroups, groupsCount) {\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var eventsForGroup = eventGroups[groupIndex].events;\n                for (var eventUid in eventsForGroup) {\n                    var eventObject = eventsForGroup[eventUid];\n                    if (Array.isArray(eventObject)) {\n                        for (var eventIndex = 0; eventIndex < eventObject.length; eventIndex++) {\n                            this._positionEvent(eventObject[eventIndex]);\n                        }\n                    } else {\n                        this._positionEvent(eventObject);\n                    }\n                }\n            }\n        },\n\n        _setRowsHeight: function(eventGroups, groupsCount, maxRowCount) {\n            var eventHeight = this.options.eventHeight;\n            var eventBottomOffset = this._getBottomRowOffset();\n            var groupedView = this._groupedView;\n            var verticalGroupCount = groupedView._getVerticalGroupCount(groupsCount);\n\n            groupsCount = this._isVerticallyGrouped() ? verticalGroupCount : 1;\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var rowsCount = groupedView._getVerticalRowCount(eventGroups, groupIndex, maxRowCount);\n\n                rowsCount = rowsCount ? rowsCount : 1;\n\n                var rowHeight = ((eventHeight + 2) * rowsCount) + eventBottomOffset;\n                var timesRow = $(this.times.find(\"tr\")[groupIndex]);\n                var row = $(this.content.find(\"tr\")[groupIndex]);\n\n                timesRow.height(rowHeight);\n                row.height(rowHeight);\n            }\n\n            this._setContentWidth();\n            this.refreshLayout();\n            this._refreshSlots();\n        },\n\n        _getBottomRowOffset: function() {\n            var eventBottomOffset = this.options.eventHeight * 0.50;\n            var isMobile = this._isMobile();\n            var minOffset;\n            var maxOffset;\n\n            if (isMobile) {\n                minOffset = 30;\n                maxOffset = 60;\n            } else {\n                minOffset = 15;\n                maxOffset = 30;\n            }\n\n            if (eventBottomOffset > maxOffset) {\n                eventBottomOffset = maxOffset;\n            } else if (eventBottomOffset < minOffset) {\n                eventBottomOffset = minOffset;\n            }\n\n            return eventBottomOffset;\n        },\n\n        _positionEvent: function(eventObject) {\n            var eventHeight = this.options.eventHeight;\n            var eventOffset = 2;\n            var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n            var left = this._adjustLeftPosition(rect.left);\n            var width = rect.right - rect.left;\n\n            if (width < 0) {\n                width = 0;\n            }\n\n            if (width < this.options.eventMinWidth) {\n                var slotsCollection = eventObject.slotRange.collection;\n                var lastSlot = slotsCollection._slots[slotsCollection._slots.length - 1];\n                var offsetRight = lastSlot.offsetLeft + lastSlot.offsetWidth;\n\n                width = this.options.eventMinWidth;\n\n                if (offsetRight < left + width) {\n                    width = offsetRight - rect.left;\n                }\n            }\n\n            eventObject.element.css({\n                top: eventObject.slotRange.start.offsetTop + eventObject.rowIndex * (eventHeight + eventOffset) + \"px\",\n                left: left,\n                width: width\n            });\n        },\n\n        _refreshSlots: function() {\n            for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                this.groups[groupIndex].refresh();\n            }\n        },\n\n        _eventsByResource: function(events, resources, result, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                    } else {\n                        result.push(eventsFilteredByResource);\n                    }\n                }\n            } else {\n                result.push(events);\n            }\n        },\n\n        _isInDateSlot: function(event) {\n            var startTime = event.start;\n            var endTime = event.end;\n            var rangeStart = getDate(this._startDate);\n            var rangeEnd = kendo.date.addDays(getDate(this.visibleEndDate()), 1);\n\n            if (startTime < rangeEnd && rangeStart <= endTime) {\n                return true;\n            }\n            return false;\n        },\n\n        _isInTimeSlot: function(event) {\n            var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n            var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n\n            var slotRanges = this._slotRanges;\n\n            if (startTime === endTime) {\n                endTime = endTime + 1;\n            }\n\n            for (var slotIndex = 0; slotIndex < slotRanges.length; slotIndex++) {\n                if (startTime < slotRanges[slotIndex].end && slotRanges[slotIndex].start < endTime) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _adjustEvent: function(event) {\n            var start = event.start;\n            var end = event.end;\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var adjustedStartDate = null;\n            var adjustedEndDate = null;\n            var occurrence;\n            var head = false;\n            var tail = false;\n\n            if (event.isAllDay) {\n                start = getDate(start);\n                eventStartTime = 0;\n\n                end = getDate(end);\n                eventEndTime = MS_PER_DAY;\n                adjustedEndDate = kendo.date.addDays(end, 1);\n            }\n\n            if (endTime === 0) {\n                endTime = MS_PER_DAY;\n            }\n\n            if (endTime <= startTime) {\n                if (eventStartTime < startTime && eventStartTime >= endTime) {\n                    adjustedStartDate = getDate(start);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                }\n\n                if (eventEndTime > endTime && eventEndTime <= startTime) {\n                    adjustedEndDate = getDate(end);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                }\n            } else {\n                if (startTime > eventStartTime) {\n                    adjustedStartDate = getDate(start);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                } else if (endTime <= eventStartTime) {\n                    adjustedStartDate = getDate(start);\n                    adjustedStartDate = kendo.date.addDays(adjustedStartDate, 1);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                }\n\n                if (endTime < eventEndTime) {\n                    adjustedEndDate = getDate(end);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                } else if (startTime > eventEndTime) {\n                    adjustedEndDate = getDate(end);\n                    adjustedEndDate = kendo.date.addDays(adjustedEndDate,-1);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                }\n            }\n\n            occurrence = event.clone({\n                start: adjustedStartDate ? adjustedStartDate : start,\n                end: adjustedEndDate ? adjustedEndDate : end,\n                _startTime: adjustedStartDate ? kendo.date.toUtcTime(adjustedStartDate) : event._startTime,\n                _endTime: adjustedEndDate ? kendo.date.toUtcTime(adjustedEndDate) : event._endTime,\n                isAllDay: false\n            });\n\n            return {\n                occurrence: occurrence,\n                head: head,\n                tail: tail\n            };\n        },\n\n        _renderEvents: function(events, groupIndex, eventGroup) {\n            var event;\n            var idx;\n            var length;\n\n            for (idx = 0, length = events.length; idx < length; idx++) {\n                event = events[idx];\n\n                if (this._isInDateSlot(event)) {\n                    var isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                    var container = this.content;\n\n                    if (isMultiDayEvent || this._isInTimeSlot(event)) {\n                        var adjustedEvent = this._adjustEvent(event);\n                        var group = this.groups[groupIndex];\n\n                        if (!group._continuousEvents) {\n                            group._continuousEvents = [];\n                        }\n\n                        if (this._isInTimeSlot(adjustedEvent.occurrence)) {\n                            var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                            var range = ranges[0];\n                            var startIndex = range.start.index;\n                            var endIndex = range.end.index;\n\n                            this._groupedView._renderEvent(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex);\n                        }\n                    }\n                }\n            }\n        },\n\n        addContinuousEvent: function(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n\n            events.push({\n                element: element,\n                isAllDay: isAllDay,\n                uid: element.attr(kendo.attr(\"uid\")),\n                start: range.start,\n                end: range.end\n            });\n        },\n\n        _createEventElement: function(occurrence, event, head, tail) {\n            var template = this.eventTemplate;\n            var editable = this.options.editable;\n            var isMobile = this._isMobile();\n            var showDelete = editable && editable.destroy !== false && !isMobile;\n            var resizable = editable && editable.resize !== false;\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var eventStartDate = event.start;\n            var eventEndDate = event.end;\n\n            var resources = this.eventResources(event);\n\n            if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                eventStartDate = new Date(eventStartTime);\n                eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n            }\n\n            if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                eventEndDate = new Date(eventEndTime);\n                eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n            }\n\n            var data = extend({}, {\n                ns: kendo.ns,\n                resizable: resizable,\n                showDelete: showDelete,\n                head: head,\n                tail: tail,\n                singleDay: this._dates.length == 1,\n                resources: resources,\n                inverseColor: false,\n                messages: this.options.messages,\n                ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay)\n            }, event, {\n                start: eventStartDate,\n                end: eventEndDate\n            });\n\n            var element = $(template(data));\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: data } ]\n                };\n            });\n\n            return element;\n        },\n\n        _arrangeRows: function(eventObject, slotRange, eventGroup) {\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n\n            var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n            var rectRight = rect.right + this.options.eventMinWidth;\n\n            var events = collidingEvents(slotRange.events(), rect.left, rectRight);\n\n            slotRange.addEvent({\n                slotIndex: startIndex,\n                start: startIndex,\n                end: endIndex,\n                rectLeft: rect.left,\n                rectRight: rectRight,\n                element: eventObject.element,\n                uid: eventObject.uid\n            });\n\n            events.push({\n                start: startIndex,\n                end: endIndex,\n                uid: eventObject.uid\n            });\n\n            var rows = SchedulerView.createRows(events);\n\n            if (eventGroup.maxRowCount < rows.length) {\n                eventGroup.maxRowCount = rows.length;\n            }\n\n            for (var idx = 0, length = rows.length; idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    eventGroup.events[rowEvents[j].uid].rowIndex = idx;\n                }\n            }\n        },\n\n        _groupCount: function() {\n            var resources = this.groupedResources;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    return groupedView._verticalCountForLevel(resources.length - 1);\n                } else {\n                    return groupedView._horizontalCountForLevel(resources.length - 1, this.columnLevels.length - 1);\n                }\n            }\n            return 1;\n        },\n\n        _updateEventForSelection: function(event) {\n            var adjustedEvent = this._adjustEvent(event.clone());\n            return adjustedEvent.occurrence;\n        },\n\n        _eventOptionsForMove: function(event) {\n            if (event.isAllDay) {\n                return { isAllDay: false };\n            }\n\n            return {};\n        },\n\n        _updateEventForResize: function(event) {\n            if (event.isAllDay) {\n                event.set(\"isAllDay\", false);\n            }\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var group = this.groups[groupIndex];\n\n            var clonedEvent = event.clone({ start: event.start, end: event.end });\n\n            var eventDuraton = clonedEvent.duration();\n            clonedEvent.start = new Date(clonedEvent.start.getTime() + distance);\n            clonedEvent.end = new Date(+clonedEvent.start + eventDuraton);\n\n            this._removeMoveHint(event.uid);\n\n            if (this._isInDateSlot(clonedEvent)) {\n                if (clonedEvent.isAllDay || clonedEvent.duration() >= MS_PER_DAY || this._isInTimeSlot(clonedEvent)) {\n                    var adjustedEvent = this._adjustEvent(clonedEvent);\n                    var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n\n                    for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                        this._groupedView._createMoveHint(ranges[rangeIndex], adjustedEvent);\n                    }\n                }\n            }\n        },\n\n       _appendMoveHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._moveHint = this._moveHint.add(hint);\n       },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            var group = this.groups[groupIndex];\n            var ranges = group.ranges(startTime, endTime, false, false);\n\n            this._removeResizeHint();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var start = range.startSlot();\n\n                var startRect = range.innerRect(startTime, endTime, false);\n                startRect.top = start.offsetTop;\n\n                var width = startRect.right - startRect.left;\n\n                if (width < 0) {\n                    for (var i = 0; i < range.events().length; i++) {\n                        if (range.events()[i].uid === event.uid) {\n                            width = range.events()[i].rectRight - startRect.left;\n                            break;\n                        }\n                    }\n                }\n\n                var height = range.endSlot().offsetTop + start.offsetHeight - startRect.top;\n\n                var left = this._adjustLeftPosition(startRect.left);\n\n                var hint = SchedulerView.fn._createResizeHint.call(this,\n                    left,\n                    startRect.top,\n                    width,\n                    height\n                );\n\n                this._resizeHint = this._resizeHint.add(hint);\n            }\n\n            var format = \"t\";\n            var container = this.content;\n\n            this._resizeHint.appendTo(container);\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n        },\n\n        selectionByElement: function(cell) {\n            var offset = cell.offset();\n            return this._slotByPosition(offset.left, offset.top);\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            if (multiple && !vertical) {\n                if (startSlot.index === endSlot.index &&\n                    startSlot.collectionIndex === endSlot.collectionIndex) {\n                    selection.backward = reverse;\n                }\n            }\n        },\n\n        _changeGroup: function(selection, previous) {\n            var method = previous ? \"prevGroupSlot\" : \"nextGroupSlot\";\n\n            var slot = this[method](selection.start, selection.groupIndex, false);\n\n            if (slot) {\n                selection.groupIndex += previous ? -1 : 1;\n            }\n\n            this._groupedView._changeGroup(selection, previous, slot);\n            return slot;\n        },\n\n        prevGroupSlot: function(date, groupIndex, isDay) {\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n\n            if (groupIndex <= 0) {\n                return;\n            }\n\n            return this._groupedView._prevGroupSlot(slot, group, isDay);\n        },\n\n        nextGroupSlot: function(date, groupIndex, isDay) {\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n\n            if (groupIndex >= this.groups.length - 1) {\n                return;\n            }\n\n            return this._groupedView._nextGroupSlot(slot, group, isDay);\n        },\n\n        _verticalSlots: function(selection, ranges, multiple, reverse) {\n            var groupedView = this._groupedView;\n            var method = groupedView._verticalMethod(reverse, multiple);\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            var group = this.groups[selection.groupIndex];\n            var slot = groupedView._normalizeVerticalSelection(selection, ranges, reverse, multiple);\n\n            if (slot) {\n                startSlot = endSlot = slot;\n            }\n\n            startSlot = group[method](startSlot);\n            endSlot = group[method](endSlot);\n\n            if (!multiple && this._isVerticallyGrouped() && (!startSlot || !endSlot)) {\n                startSlot = endSlot = groupedView._verticalSlots(selection, reverse, slot);\n            }\n\n            return {\n                startSlot: startSlot,\n                endSlot: endSlot\n            };\n        },\n\n        _horizontalSlots: function(selection, ranges, multiple, reverse) {\n            var method = reverse ? \"upSlot\" : \"downSlot\";\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            var group = this.groups[selection.groupIndex];\n            var result = {};\n\n            if (!multiple) {\n                result = this._groupedView._horizontalSlots(selection, group, method, startSlot, endSlot, multiple, reverse);\n            } else {\n                result.startSlot = group[method](startSlot);\n                result.endSlot = group[method](endSlot);\n\n                if (!multiple && this._isHorizontallyGrouped() && (!startSlot || !endSlot)) {\n                    result.startSlot = result.endSlot = this._changeGroup(selection, reverse);\n                }\n            }\n\n            return result;\n        },\n\n        _changeViewPeriod: function(selection, reverse) {\n            var date = reverse ? this.previousDate() : this.nextDate();\n            var start = selection.start;\n            var end = selection.end;\n            var newStart, newEnd;\n\n            newStart = new Date(date);\n            newEnd = new Date(date);\n\n            if (this._isInRange(newStart, newEnd)) {\n                return false;\n            }\n            selection.start = newStart;\n            selection.end = newEnd;\n\n            if (this._isHorizontallyGrouped()) {\n               selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n            }\n\n            var duration = end - start;\n\n            if (reverse) {\n                end = getMilliseconds(this.endTime());\n                end = end === 0 ? MS_PER_DAY : end;\n\n                setTime(selection.start, end - duration);\n                setTime(selection.end, end);\n            } else {\n                start = getMilliseconds(this.startTime());\n\n                setTime(selection.start, start);\n                setTime(selection.end, start + duration);\n            }\n\n            selection.events = [];\n\n            return true;\n        },\n\n        move: function(selection, key, shift) {\n            var handled = false;\n            var group = this.groups[selection.groupIndex];\n            var keys = kendo.keys;\n            var groupedView = this._groupedView;\n            var ranges = group.ranges(selection.start, selection.end, false, false);\n            var startSlot, endSlot, reverse, slots;\n\n            if (key === keys.DOWN || key === keys.UP) {\n                handled = true;\n                reverse = key === keys.UP;\n\n                groupedView._updateDirection(selection, ranges, shift, reverse);\n\n                slots = this._verticalSlots(selection, ranges, shift, reverse);\n\n                if (groupedView._changeVerticalViewPeriod(slots, shift, selection, reverse)) {\n                    return handled;\n                }\n            } else if (key === keys.LEFT || key === keys.RIGHT) {\n                handled = true;\n                reverse = key === keys.LEFT;\n\n                this._updateDirection(selection, ranges, shift, reverse, false);\n\n                slots = this._horizontalSlots(selection, ranges, shift, reverse);\n\n                if (groupedView._changeHorizontalViewPeriod(slots, shift, selection, reverse)) {\n                     return handled;\n                }\n            }\n\n           if (handled) {\n               startSlot = slots.startSlot;\n               endSlot = slots.endSlot;\n\n               if (shift) {\n                   var backward = selection.backward;\n\n                   if (backward && startSlot) {\n                       selection.start = startSlot.startDate();\n                   } else if (!backward && endSlot) {\n                       selection.end = endSlot.endDate();\n                   }\n               } else if (startSlot && endSlot) {\n                   selection.start = startSlot.startDate();\n                   selection.end = endSlot.endDate();\n               }\n\n               selection.events = [];\n           }\n\n            return handled;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.element) {\n                that.element.off(NS);\n            }\n\n            if (that.footer) {\n                that.footer.remove();\n            }\n\n            if (that._currentTimeUpdateTimer) {\n                clearInterval(that._currentTimeUpdateTimer);\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && that.options.editable) {\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents.destroy();\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents.destroy();\n                }\n            }\n        },\n\n        _resourceBySlot: function(slot) {\n            var resources = this.groupedResources;\n            var result = {},\n            groupOptions = this.options.group;\n\n            if (resources.length && groupOptions.orientation === \"horizontal\" && groupOptions.date) {\n                var resourceIndex = slot.groupIndex,\n                    levels = this.columnLevels,\n                    groupLevel = levels[levels.length - 1],\n                    resource = resources[resources.length - 1],\n                    groupLevelMember = groupLevel[resourceIndex],\n                    passedChildren, numberOfChildren, j, i;\n\n                this._setResourceValue(groupLevelMember, resource, result);\n\n                for (j = levels.length - 2; j >= 3; j--) {\n                    groupLevel = levels[j];\n                    resource = resources[j - 3];\n                    passedChildren = 0;\n\n                    for (i = 0; i < groupLevel.length; i++) {\n                        groupLevelMember = groupLevel[i];\n                        numberOfChildren = groupLevelMember.columns.length;\n\n                        if (numberOfChildren > resourceIndex - passedChildren) {\n                            this._setResourceValue(groupLevelMember, resource, result);\n\n                            i = groupLevel.length;\n                        } else {\n                            passedChildren += numberOfChildren;\n                        }\n                    }\n                }\n\n                return result;\n            } else {\n                return SchedulerView.fn._resourceBySlot.call(this, slot);\n            }\n        }\n    });\n\n    extend(true, ui, {\n        TimelineView: TimelineView,\n        TimelineWeekView: TimelineView.extend({\n            options: {\n                name: \"TimelineWeekView\",\n                title: \"Timeline Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                majorTick: 120\n            },\n            name: \"timelineWeek\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = 7; idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        }),\n        TimelineWorkWeekView: TimelineView.extend({\n            options: {\n                name: \"TimelineWorkWeekView\",\n                title: \"Timeline Work Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                majorTick: 120\n            },\n            name: \"timelineWorkWeek\",\n            nextDate: function() {\n                var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.endDate()), this.calendarInfo().firstDay, 1);\n\n                return kendo.date.addDays(weekStart, this._workDays[0]);\n            },\n            previousDate: function() {\n                var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                var workDays = this._workDays;\n\n                return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n            },\n            calculateDateRange: function() {\n                var options = this.options,\n                    selectedDate = options.date,\n                    dayOfWeek = kendo.date.dayOfWeek,\n                    weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                    end = dayOfWeek(start, options.workWeekEnd, 1),\n                    dates = [],\n                    workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                        return dayOfWeek(weekStart, day, 1).getTime();\n                    }) : null;\n\n                if (workDays) {\n                    start = weekStart;\n                    end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                }\n\n                while (start <= end) {\n                    if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                        dates.push(start);\n                    } else if (!workDays) {\n                        dates.push(start);\n                    }\n\n                    start = kendo.date.nextDay(start);\n                }\n\n                this._render(dates);\n            }\n        }),\n        TimelineMonthView: TimelineView.extend({\n            options: {\n                name: \"TimelineMonthView\",\n                title: \"Timeline Month\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                workDayStart: new Date(1980, 1, 1, 0, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 23, 59, 59),\n                footer: false,\n                majorTick: 1440,\n                minorTickCount: 1\n            },\n            name: \"timelineMonth\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.firstDayOfMonth(selectedDate),\n                    end = kendo.date.lastDayOfMonth(selectedDate),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = end.getDate(); idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        })\n    });\n\n})(window.kendo.jQuery);\n"]}