{"version":3,"file":"kendo.scheduler.timelineview.js","names":["__meta__","id","name","category","description","depends","hidden","$","undefined$1","kendo","window","ui","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","encode","htmlEncode","getDate","getMilliseconds","MS_PER_DAY","MS_PER_MINUTE","INVERSE_COLOR_CLASS","BORDER_SIZE_COEFF","NS","EVENT_TEMPLATE","template","title","start","end","format","DATA_HEADER_TEMPLATE","EVENT_WRAPPER_TEMPLATE","task","ariaLabel","ns","uid","resources","color","tail","isException","isRecurring","showDelete","messages","destroy","head","resizable","toInvariantTime","staticDate","Date","setColspan","columnLevel","count","columns","i","length","colspan","TimelineGroupedView","Class","init","view","this","_view","_getTimeSlotByPosition","x","y","groupIndex","groups","timeSlotByPosition","_hideHeaders","timesHeader","find","last","hide","datesHeader","_setColspan","timeColumn","_createRowsLayout","rows","groupHeaderTemplate","_createVerticalColumnsLayout","_createColumnsLayout","_getRowCount","_groupCount","_getGroupsCount","_addContent","dates","columnCount","groupsCount","rowCount","slotTemplate","isVerticalGrouped","html","options","appendRow","tmplDate","content","classes","isToday","idx","workDayStart","workDayEnd","_isWorkDay","rowIdx","groupIdx","_resourceBySlot","_forTimeRange","_addTimeSlotsCollections","groupCount","datesCount","tableRows","interval","isVerticallyGrouped","Math","floor","time","rowMultiplier","group","cellMultiplier","cells","children","cellsPerGroup","cellsPerDay","dateIndex","cellOffset","startTime","cellIndex","_addTimeSlotToCollection","_getVerticalGroupCount","_getVerticalRowCount","eventGroups","maxRowCount","_isVerticallyGrouped","_renderEvent","eventGroup","event","adjustedEvent","range","container","element","_createEventElement","occurrence","appendTo","css","top","height","eventHeight","eventObject","_startTime","_endTime","slotRange","rowIndex","offsetTop","events","_inverseEventColor","addContinuousEvent","isAllDay","_arrangeRows","_verticalCountForLevel","level","_rowCountForLevel","_horizontalCountForLevel","_columnCountForLevel","_updateCurrentVerticalTimeMarker","ranges","currentTime","elementHtml","headerWrap","left","round","innerRect","getTime","timesTableMarker","prependTo","addClass","CURRENT_TIME_MARKER_ARROW_CLASS","_adjustLeftPosition","prev","position","width","scrollHeight","_changeGroup","_prevGroupSlot","slot","isDay","_collection","_nextGroupSlot","first","_verticalSlots","selection","reverse","_verticalMethod","_normalizeVerticalSelection","_horizontalSlots","method","startSlot","endSlot","multiple","result","_isHorizontallyGrouped","_changeVerticalViewPeriod","_changeHorizontalViewPeriod","slots","shift","_changeViewPeriod","_updateDirection","_createMoveHint","hint","rect","snap","right","offsetHeight","inverseColor","_appendMoveHint","_isRtl","scrollWidth","clientWidth","TimelineGroupedByDateView","times","eq","_createDateLayout","subColumns","isMajorTickColumn","isMiddleColumn","isLastSlotColumn","minorTickColumns","workDateIndex","tempStart","minorTickCount","msInterval","majorTick","_dates","startIndex","endIndex","eventObjects","index","currentSlot","_timeSlotCollections","_slots","dateRange","timeSlotRanges","push","firstTimesCell","lastTimesCell","markerTopPosition","timesTableMarkerCss","previous","_changeDate","collections","_getCollections","tempSlot","startEnd","slotIdx","collection","offsetLeft","offsetWidth","scheduler","TimelineView","that","fn","call","_groupedView","_getGroupedView","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_isVirtualized","_isGroupedByDate","_getNextEventIndexBySlot","sortedEvents","tempIndex","startDate","_getSelectedSlot","pad","_getSortedEvents","uniqueAllEvents","sort","second","isDaySlot","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","_scrollTo","elementOffset","elementOffsetDir","containerScroll","scrollLeft","containerOffsetDir","rightDistance","remove","_isInDateSlot","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","orientation","currentGroup","utcCurrentTime","toUtcTime","slotByStartDate","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","editable","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","attr","preventDefault","create","_slotByPosition","pageX","pageY","resourceInfo","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","location","_editUserEvents","eventElement","target","touch","initialTouch","hasClass","mozilla","webkit","version","msie","scrollTop","ceil","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","today","endTime","showWorkHours","eventMinWidth","columnWidth","text","majorTimeHeaderTemplate","toString","eventTemplate","dateHeaderTemplate","footer","command","defaultRowText","showFullDay","showWorkDay","settings","Template","templateSettings","_render","_startDate","_endDate","_calculateSlotRanges","createLayout","_layout","_content","_footer","_setContentWidth","refreshLayout","th","currentTarget","contentWidth","contentTable","minWidth","calculatedWidth","add","slotStartTime","slotEndTime","slotRanges","rangeStart","rangeEnd","_slotRanges","min","max","action","verticalByDate","msMin","msMax","msMajorInterval","majorTickDivider","timeColumns","groupedView","minorTickSlots","minorTickIndex","className","minorTicks","middleColumn","lastSlotColumn","minorSlotsCount","slice","groupedResources","_groupOrientation","toggleFullDay","currentDate","isWorkDay","columnLevels","rowLevel","rowLevels","day","getDay","append","_addResourceView","addTimeSlotCollection","addDays","_timeSlotGroups","_timeSlotInterval","cell","getTimeSlotCollection","UTC","getFullYear","getMonth","addTimeSlot","visibleEndDate","nextDate","nextDay","previousDate","previousDay","render","_headerColumnCount","data","Query","field","dir","toArray","eventsByResource","_eventsByResource","_renderEvents","_setRowsHeight","_positionEvents","eventsForGroup","eventUid","Array","isArray","eventIndex","_positionEvent","eventBottomOffset","_getBottomRowOffset","verticalGroupCount","rowsCount","rowHeight","timesRow","row","_refreshSlots","minOffset","maxOffset","slotsCollection","lastSlot","offsetRight","refresh","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","value","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","_isInTimeSlot","slotIndex","_adjustEvent","eventStartTime","_time","eventEndTime","adjustedStartDate","adjustedEndDate","clone","isMultiDayEvent","duration","_continuousEvents","isMobile","resize","eventStartDate","eventEndDate","eventResources","apply","singleDay","_formatEventAriaLabel","angular","elements","dataItem","rectRight","startPosition","endPosition","rectLeft","eventsForSlot","collidingEvents","addEvent","createRows","rowEvents","j","eventLength","_updateEventForSelection","_eventOptionsForMove","_updateEventForResize","set","_updateMoveHint","distance","clonedEvent","eventDuraton","_removeMoveHint","rangeIndex","_moveHint","_updateResizeHint","_removeResizeHint","startRect","_createResizeHint","_resizeHint","toLocalDate","selectionByElement","vertical","collectionIndex","backward","prevGroupSlot","nextGroupSlot","newStart","newEnd","_isInRange","move","key","handled","keys","DOWN","UP","LEFT","RIGHT","off","clearInterval","groupOptions","passedChildren","numberOfChildren","resourceIndex","levels","groupLevel","groupLevelMember","_setResourceValue","TimelineWeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","TimelineWorkWeekView","weekStart","map","indexOf","TimelineMonthView","firstDayOfMonth","lastDayOfMonth","jQuery"],"sources":["kendo.scheduler.timelineview.js"],"mappings":"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","sourcesContent":["import './kendo.scheduler.view.js';\n\nvar __meta__ = {\n    id: \"scheduler.timelineview\",\n    name: \"Scheduler Timeline View\",\n    category: \"web\",\n    description: \"The Scheduler Timeline View\",\n    depends: [ \"scheduler.view\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        setTime = kendo.date.setTime,\n        SchedulerView = ui.SchedulerView,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        getDate = kendo.date.getDate,\n        getMilliseconds = kendo.date.getMilliseconds,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n        CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n        CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n        SCHEDULER_HEADER_WRAP_CLASS = \"k-scheduler-header-wrap\",\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        BORDER_SIZE_COEFF = 0.8666,\n        NS = \".kendoTimelineView\";\n\n    var EVENT_TEMPLATE = kendo.template(({ title, start, end }) =>'<div>' +\n        `<div class=\"k-event-template k-event-time\">${encode(kendo.format(\"{0:t} - {1:t}\", start, end))}</div>` +\n        `<div class=\"k-event-template\">${title}</div></div>`),\n        DATA_HEADER_TEMPLATE = kendo.template(({ date }) => `<span class='k-link k-nav-day'>${kendo.format('{0:m}', date)}</span>`),\n        EVENT_WRAPPER_TEMPLATE = (task) =>\n            `<div role=\"button\" aria-label=\"${encode(task.ariaLabel)}\" data-${task.ns}uid=\"${task.uid}\" ` +\n            `${task.resources[0] ? `style=\"background-color:${task.resources[0].color}; border-color: ${task.resources[0].color}\" class=\"k-event\">` : 'class=\"k-event\">'}` +\n                '<span class=\"k-event-actions\">' +\n                    `${task.tail ? '<span class=\"k-icon k-i-arrow-60-left\"></span>' : ''}` +\n                    `${task.isException() ? '<span class=\"k-icon k-i-non-recurrence\"></span>' :\n                        (task.isRecurring() ? '<span class=\"k-icon k-i-reload\"></span>' : '')}` +\n                '</span>' +\n                `${kendo.template(task.template)(task)}` +\n                '<span class=\"k-event-actions\">' +\n                    `${task.showDelete ? `<a href=\"#\" class=\"k-link k-event-delete\" title=\"${task.messages.destroy}\" aria-label=\"${task.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>` : ''}` +\n                    `${task.head ? '<span class=\"k-icon k-i-arrow-60-right\"></span>' : ''}` +\n                '</span>' +\n                `${task.resizable && !task.tail ? '<span class=\"k-resize-handle k-resize-w\"></span>' : ''}` +\n                `${task.resizable && !task.head ? '<span class=\"k-resize-handle k-resize-e\"></span>' : ''}` +\n            '</div>';\n\n    function toInvariantTime(date) {\n        var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n        setTime(staticDate, getMilliseconds(date));\n        return staticDate;\n    }\n\n    function getWorkDays(options) {\n        if (options.workDays && options.workDays.length) {\n            return options.workDays;\n        }\n\n        var workDays = [];\n        var dayIndex = options.workWeekStart % 7;\n        var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n        workDays.push(dayIndex);\n\n        while (workWeekEnd != dayIndex) {\n            if (dayIndex > 6 ) {\n                dayIndex -= 7;\n            } else {\n                dayIndex++;\n            }\n            workDays.push(dayIndex);\n        }\n        return workDays;\n    }\n\n    function setColspan(columnLevel) {\n        var count = 0;\n        if (columnLevel.columns) {\n            for (var i = 0; i < columnLevel.columns.length; i++) {\n                count += setColspan(columnLevel.columns[i]);\n            }\n            columnLevel.colspan = count;\n            return count;\n        } else {\n            columnLevel.colspan = 1;\n            return 1;\n        }\n    }\n\n    function collidingEvents(elements, left, right) {\n        var idx,\n            startPosition,\n            overlaps,\n            endPosition;\n\n        for (idx = elements.length - 1; idx >= 0; idx--) {\n            startPosition = elements[idx].rectLeft;\n            endPosition = elements[idx].rectRight;\n\n            overlaps = startPosition <= left && endPosition >= left;\n\n            if (overlaps || (startPosition >= left && endPosition <= right) || (left <= startPosition && right >= startPosition)) {\n                if (startPosition < left) {\n                    left = startPosition;\n                }\n\n                if (endPosition > right) {\n                    right = endPosition;\n                }\n            }\n        }\n\n        return eventsForSlot(elements, left, right);\n    }\n\n    function eventsForSlot(elements, left, right) {\n        var events = [];\n\n        for (var idx = 0; idx < elements.length; idx++) {\n            var event = {\n                rectLeft: elements[idx].rectLeft,\n                rectRight: elements[idx].rectRight\n            };\n\n            if ((event.rectLeft < left && event.rectRight > left) || (event.rectLeft >= left && event.rectRight <= right)) {\n                events.push(elements[idx]);\n            }\n        }\n\n        return events;\n    }\n\n    var TimelineGroupedView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.timeSlotByPosition(x, y);\n        },\n\n        _hideHeaders: function() {\n            var view = this._view;\n\n            view.timesHeader.find(\"table tr\").last().hide(); /*Chrome fix, use CSS selector*/\n            view.datesHeader.find(\"table tr\").last().hide();\n        },\n\n        _setColspan: function(timeColumn) {\n            setColspan(timeColumn);\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n\n            return columns;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n        },\n\n        _getRowCount: function() {\n            var view = this._view;\n\n            return view._groupCount();\n        },\n\n        _getGroupsCount: function() {\n            return 1;\n        },\n\n        _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n            var view = this._view;\n            var html = '';\n            var options = view.options;\n\n            var appendRow = function(date) {\n                var content = \"\";\n                var classes = \"\";\n                var tmplDate;\n\n                var resources = function(groupIndex) {\n                    return function() {\n                        return view._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                    !view._isWorkDay(dates[idx])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGrouped ? rowIdx : groupIdx) });\n                content += \"</td>\";\n\n                return content;\n            };\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += '<tr>';\n                for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                    for (var idx = 0, length = columnCount; idx < length; idx++) {\n                        html += view._forTimeRange(start, end, appendRow);\n                    }\n                }\n                html += \"</tr>\";\n            }\n            return html;\n        },\n\n        _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n            var view = this._view;\n            var rowCount = tableRows.length;\n\n            if (isVerticallyGrouped) {\n                rowCount = Math.floor(rowCount / groupCount);\n            }\n\n            for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                var rowMultiplier = 0;\n                var group = view.groups[groupIndex];\n                var time;\n\n                if (isVerticallyGrouped) {\n                    rowMultiplier = groupIndex;\n                }\n\n                var rowIndex = rowMultiplier * rowCount;\n                var cellMultiplier = 0;\n\n                if (!isVerticallyGrouped) {\n                    cellMultiplier = groupIndex;\n                }\n\n                var cells = tableRows[rowIndex].children;\n                var cellsPerGroup = cells.length / (!isVerticallyGrouped ? groupCount : 1);\n                var cellsPerDay = cellsPerGroup / datesCount;\n\n                for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                    var cellOffset = dateIndex * cellsPerDay + (cellsPerGroup * cellMultiplier);\n                    time = getMilliseconds(new Date(+view.startTime()));\n\n                    for (var cellIndex = 0; cellIndex < cellsPerDay; cellIndex++) {\n\n                        view._addTimeSlotToCollection(group, cells, cellIndex, cellOffset, dateIndex, time, interval);\n                        time += interval;\n                    }\n                }\n            }\n        },\n\n        _getVerticalGroupCount: function(groupsCount) {\n\n            return groupsCount;\n        },\n\n        _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n            var view = this._view;\n\n            return view._isVerticallyGrouped() ? eventGroups[groupIndex].maxRowCount : maxRowCount;\n        },\n\n        _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container) {\n            var view = this._view;\n            var element;\n\n            element = view._createEventElement(adjustedEvent.occurrence, event, range.head || adjustedEvent.head, range.tail || adjustedEvent.tail);\n            element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n\n            var eventObject = {\n                start: adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start,\n                end: adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end,\n                element: element,\n                uid: event.uid,\n                slotRange: range,\n                rowIndex: 0,\n                offsetTop: 0\n            };\n\n            eventGroup.events[event.uid] = eventObject;\n\n            view._inverseEventColor(element);\n            view.addContinuousEvent(group, range, element, event.isAllDay);\n            view._arrangeRows(eventObject, range, eventGroup);\n        },\n\n        _verticalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _updateCurrentVerticalTimeMarker: function(ranges, currentTime) {\n            var view = this._view;\n            var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n            var headerWrap = view.datesHeader.find(\".\" + SCHEDULER_HEADER_WRAP_CLASS);\n            var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n            var timesTableMarker = $(elementHtml)\n                    .prependTo(headerWrap)\n                    .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n            timesTableMarker.css({\n                left: view._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                top: headerWrap.find(\"tr\").last().prev().position().top\n            });\n\n            $(elementHtml).prependTo(view.content).css({\n                left: view._adjustLeftPosition(left),\n                width: \"1px\",\n                height: view.content[0].scrollHeight - 1,\n                top: 0\n            });\n        },\n\n        _changeGroup: function() {\n            return undefined$1;\n        },\n\n        _prevGroupSlot: function(slot, group, isDay) {\n            var view = this._view;\n\n            if (view._isVerticallyGrouped()) {\n                return slot;\n            } else {\n                var collection = group._collection(0, isDay);\n                return collection.last();\n            }\n        },\n\n        _nextGroupSlot: function(slot, group, isDay) {\n            var view = this._view;\n\n            if (view._isVerticallyGrouped()) {\n                return slot;\n            } else {\n                var collection = group._collection(0, isDay);\n                return collection.first();\n            }\n        },\n\n        _verticalSlots: function(selection, reverse) {\n             var view = this._view;\n\n             return view._changeGroup(selection, reverse);\n        },\n\n         _verticalMethod: function(reverse) {\n\n              return reverse ? \"leftSlot\" : \"rightSlot\";\n         },\n\n         _normalizeVerticalSelection: function() {\n             return undefined$1;\n         },\n\n         _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n            var view = this._view;\n            var result = {};\n\n            result.startSlot = group[method](startSlot);\n            result.endSlot = group[method](endSlot);\n\n            if (!multiple && view._isHorizontallyGrouped() && (!result.startSlot || !result.endSlot)) {\n                result.startSlot = result.endSlot = view._changeGroup(selection, reverse);\n            }\n\n            return result;\n        },\n\n        _changeVerticalViewPeriod: function() {\n            return false;\n        },\n\n        _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n            var view = this._view;\n\n            if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                return true;\n            }\n            return false;\n        },\n\n        _updateDirection: function(selection, ranges, shift, reverse) {\n            var view = this._view;\n\n            view._updateDirection(selection, ranges, shift, reverse, true);\n        },\n\n         _createMoveHint: function(range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n\n                var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                hint.addClass(\"k-event-drag-hint\");\n\n                var rect = range.innerRect(adjustedEvent.occurrence.start, adjustedEvent.occurrence.end, view.options.snap);\n                var width = rect.right - rect.left;\n\n                if (width < 0) {\n                    width = 0;\n                }\n\n                var left = view._adjustLeftPosition(rect.left);\n\n                var css = {\n                    left: left,\n                    top: startSlot.offsetTop,\n                    height: startSlot.offsetHeight,\n                    width: width\n                };\n\n                hint.css(css);\n\n                if (adjustedEvent.occurrence.inverseColor) {\n                    hint.addClass(INVERSE_COLOR_CLASS);\n                }\n\n                view._appendMoveHint(hint);\n         },\n\n         _adjustLeftPosition: function(left) {\n            var view = this._view;\n\n            if (view._isRtl) {\n                left -= (view.content[0].scrollWidth - view.content[0].clientWidth);\n            }\n\n            return left;\n         }\n    });\n\n    var TimelineGroupedByDateView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.timeSlotByPosition(x, y, true);\n        },\n\n        _hideHeaders: function() {\n            var view = this._view;\n\n            if (!view._isVerticallyGrouped()) {\n                view.timesHeader.find(\"table tr\").eq(2).hide();\n                view.datesHeader.find(\"table tr\").eq(2).hide();\n            } else {\n                        view.times.find(\".k-last\").hide();\n            }\n        },\n        _setColspan: function() {},\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n            var view = this._view;\n\n            return view._createDateLayout(columns, null, true);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, null, groupHeaderTemplate);\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate, subColumns) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n        },\n\n        _getRowCount: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _getGroupsCount: function() {\n            var view = this._view;\n\n            return view._groupCount();\n        },\n\n        _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n            var view = this._view;\n            var html = '';\n            var options = view.options;\n\n            var appendRow = function(date, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, groupIdx) {\n                var content = \"\";\n                var classes = \"\";\n                var tmplDate;\n                var workDateIndex = view._isVerticallyGrouped() ? dateIndex : idx;\n\n                var resources = function(groupIndex) {\n                    return function() {\n                        return view._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                    !view._isWorkDay(dates[workDateIndex])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(groupIdx) });\n                content += \"</td>\";\n\n                return content;\n            };\n\n            var tempStart = new Date(start),\n                minorTickCount = view.options.minorTickCount,\n                msMajorInterval = view.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                dateIndex;\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += '<tr>';\n\n                 if ((rowIdx % (rowCount / view._dates.length)) === 0) {\n                   dateIndex = (rowIdx / (rowCount / view._dates.length));\n                   tempStart = new Date(view._dates[dateIndex]);\n                   kendo.date.setTime(tempStart, kendo.date.getMilliseconds(start));\n                  }\n\n                for (var idx = 0, length = columnCount; idx < length; idx++) {\n\n                    html += view._forTimeRange(tempStart, end, appendRow, isVerticalGrouped, groupsCount);\n\n                    if (isVerticalGrouped) {\n                    setTime(tempStart, msInterval, false);\n                        break;\n                    }\n                }\n               html += \"</tr>\";\n            }\n\n            return html;\n        },\n\n        _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n            var view = this._view;\n            var rowCount = tableRows.length;\n\n             if (isVerticallyGrouped) {\n                rowCount = rowCount / datesCount;\n             }\n\n            for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                var rowMultiplier = 0;\n                var time;\n\n                if (isVerticallyGrouped) {\n                    rowMultiplier = dateIndex;\n                }\n\n                var rowIndex = rowMultiplier * rowCount;\n                var cellMultiplier = 0;\n                var cells = tableRows[rowIndex].children;\n                var cellsPerGroup = isVerticallyGrouped ? rowCount : cells.length / (datesCount * groupCount);\n                var cellsPerDay = cells.length / datesCount;\n                var cellOffset;\n\n                time = getMilliseconds(new Date(+view.startTime()));\n\n                for (var cellIndex = 0; cellIndex < cellsPerGroup; cellIndex++) {\n                    if (!isVerticallyGrouped) {\n                        cellOffset = (dateIndex * cellsPerDay) + (groupCount * cellIndex);\n                        cellMultiplier++;\n                    } else {\n                        cellOffset = 0;\n                        cells = tableRows[cellIndex + (cellsPerGroup * dateIndex)].children;\n                    }\n\n                    for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                        var group = view.groups[groupIndex];\n\n                        view._addTimeSlotToCollection(group, cells, groupIndex, cellOffset, dateIndex, time, interval);\n                    }\n                    time += interval;\n                }\n             }\n        },\n\n        _getVerticalGroupCount: function() {\n            var view = this._view;\n\n            return view.content.find(\"tr\").length;\n        },\n\n        _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n\n            return maxRowCount;\n        },\n\n        _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex) {\n            var view = this._view;\n            var element;\n            var eventObjects = [];\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                element = view._createEventElement(adjustedEvent.occurrence, event, i !== endIndex, i !== startIndex);\n                element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n                var currentSlot = group._timeSlotCollections[0]._slots[i];\n                var dateRange = group.timeSlotRanges(currentSlot.start, currentSlot.end, false)[0];\n\n                    var eventObject = {\n                    start: i === startIndex ? adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start : currentSlot.start,\n                    end: i === endIndex ? adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end : currentSlot.end,\n                    element: element,\n                    uid: event.uid,\n                    slotRange: dateRange,\n                    rowIndex: 0,\n                    offsetTop: 0\n                };\n\n                eventGroup.events[event.uid] = eventObject;\n                eventObjects.push(eventObject);\n\n                view.addContinuousEvent(group, dateRange, element, event.isAllDay);\n                view._arrangeRows(eventObject, dateRange, eventGroup);\n            }\n            eventGroup.events[event.uid] = eventObjects;\n        },\n\n        _verticalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _horizontalCountForLevel: function(level, columnLevel) {\n            var view = this._view;\n\n            return view._columnCountForLevel(columnLevel) / view._columnCountForLevel(2);\n        },\n\n        _updateCurrentVerticalTimeMarker: function(ranges,currentTime) {\n            var view = this._view;\n            var firstTimesCell = view.times.find(\"tr\").first().find(\"th\").first();\n            var lastTimesCell = view.times.find(\"tr\").first().find(\"th\").last();\n            var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n            var timesTableMarker = $(elementHtml).prependTo(view.times);\n            var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n            var timesTableMarkerCss = {};\n\n            if (this._isRtl) {\n                timesTableMarkerCss.right = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n            } else {\n                timesTableMarkerCss.left = lastTimesCell.position().left;\n                timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n            }\n\n            timesTableMarkerCss.top = markerTopPosition - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n\n            timesTableMarker.css(timesTableMarkerCss);\n\n            $(elementHtml).prependTo(view.content).css({\n                top: markerTopPosition,\n                height: \"1px\",\n                right: \"1px\",\n                width: view.content[0].scrollWidth,\n                left: 0\n            });\n        },\n\n        _changeGroup: function(selection, previous, slot) {\n             var view = this._view;\n\n             if (!slot) {\n                selection.groupIndex = previous ? view.groups.length - 1 : 0;\n             }\n        },\n\n         _prevGroupSlot: function(slot) {\n              return slot;\n        },\n\n        _nextGroupSlot: function(slot) {\n              return slot;\n        },\n\n        _changeDate: function(selection, reverse, slot) {\n            var view = this._view;\n            var group = view.groups[selection.groupIndex];\n            var collections, index;\n\n            if (reverse) {\n                  collections = group._getCollections(false);\n                  index = slot.index - 1;\n\n                  if (index >= 0) {\n                      return collections[0]._slots[index];\n                  }\n              } else {\n                  collections = group._getCollections(false);\n                  index = slot.index + 1;\n\n                  if (collections[0] && collections[0]._slots[index]) {\n                      return collections[0]._slots[index];\n                  }\n               }\n        },\n\n        _verticalSlots: function(selection, reverse, slot) {\n            return this._changeDate(selection, reverse, slot);\n        },\n\n        _verticalMethod: function(reverse, multiple) {\n            if (multiple) {\n               return reverse ? \"upSlot\" : \"downSlot\";\n            } else {\n               return reverse ? \"leftSlot\" : \"rightSlot\";\n            }\n        },\n\n        _normalizeVerticalSelection: function(selection, ranges, reverse, multiple) {\n            var view = this._view;\n\n            if (!multiple) {\n                return view._normalizeVerticalSelection(selection, ranges, reverse);\n            }\n\n            return undefined$1;\n        },\n\n        _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n             var view = this._view;\n             var tempSlot = view._changeGroup(selection, reverse);\n             var result = {};\n\n            if (!tempSlot) {\n                if (!view._isVerticallyGrouped()) {\n                    result.startSlot = group[method](startSlot);\n                    result.endSlot = group[method](endSlot);\n                }\n\n            } else {\n                result.startSlot = result.endSlot = tempSlot;\n            }\n\n            return result;\n        },\n\n        _changeVerticalViewPeriod: function(slots, shift, selection, reverse) {\n            var view = this._view;\n\n            if ((!slots.startSlot || !slots.endSlot) && !shift &&\n                view._changeViewPeriod(selection, reverse, view._isVerticallyGrouped())) {\n                return true;\n            }\n            return false;\n        },\n\n        _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n           var view = this._view;\n\n           if ( view._isVerticallyGrouped()) {\n               return false;\n           }\n\n           if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                return true;\n            }\n            return false;\n        },\n\n        _updateDirection: function(selection, ranges, shift, reverse) {\n            var view = this._view;\n\n            view._updateDirection(selection, ranges, shift, reverse, !view._isVerticallyGrouped());\n        },\n\n         _createMoveHint: function(range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n                var startEnd = range.end;\n\n                for (var slotIdx = startSlot.index; slotIdx <= startEnd.index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                    hint.addClass(\"k-event-drag-hint\");\n\n                    var css = {\n                        left: slot.offsetLeft + 2,\n                        top: slot.offsetTop,\n                        height: view.options.eventHeight,\n                        width: slot.offsetWidth\n                    };\n\n                    hint.css(css);\n\n                    if (adjustedEvent.occurrence.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    view._appendMoveHint(hint);\n                }\n         },\n\n         _adjustLeftPosition: function(left) {\n             var view = this._view;\n\n            if (view._isRtl && !view._isVerticallyGrouped()) {\n                left -= (view.content[0].scrollWidth - view.content[0].offsetWidth);\n            }\n\n            return left;\n         }\n });\n\n    kendo.ui.scheduler.TimelineGroupedView = TimelineGroupedView;\n    kendo.ui.scheduler.TimelineGroupedByDateView = TimelineGroupedByDateView;\n\n    var TimelineView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            SchedulerView.fn.init.call(that, element, options);\n\n            that._groupedView = that._getGroupedView();\n\n            that.title = that.options.title || that.options.name;\n\n            that._workDays = getWorkDays(that.options);\n\n            that._templates();\n\n            that._editable();\n\n            that.calculateDateRange();\n\n            that._groups();\n\n            that._currentTime(true);\n        },\n        name: \"timeline\",\n\n        _isVirtualized: function() {\n            return false;\n        },\n\n        _getGroupedView: function() {\n\n            if (this._isGroupedByDate()) {\n                   return new kendo.ui.scheduler.TimelineGroupedByDateView(this);\n            } else {\n                   return new kendo.ui.scheduler.TimelineGroupedView(this);\n            }\n        },\n\n        _getNextEventIndexBySlot: function(slot, sortedEvents, groupIndex) {\n           if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getNextEventIndexBySlot.call(this, slot, sortedEvents, groupIndex);\n           }\n\n            var tempIndex = 0;\n\n            for (var i = 0; i < sortedEvents.length; i++) {\n                if (slot.startDate() > sortedEvents[i].start.startDate()) {\n                    tempIndex++;\n                    continue;\n                }\n\n                if (slot.startDate().getTime() === sortedEvents[i].start.startDate().getTime() &&\n                 groupIndex > sortedEvents[i].start.groupIndex) {\n                      tempIndex++;\n                      continue;\n                }\n\n                 break;\n\n            }\n            return tempIndex;\n        },\n\n        _getSelectedSlot: function(slot, sortedEvents, event, idx, pad, prev) {\n            if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getSelectedSlot.call(this, slot, sortedEvents, event, idx, pad, prev);\n            }\n\n            return slot;\n        },\n\n        _getSortedEvents: function(uniqueAllEvents) {\n            if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getSortedEvents.call(this, uniqueAllEvents);\n            }\n\n            return uniqueAllEvents.sort(function(first, second) {\n                var result = first.start.startDate().getTime() - second.start.startDate().getTime();\n\n                if (result === 0) {\n                    if (first.start.isDaySlot && !second.start.isDaySlot) {\n                            result = -1;\n                    }\n\n                    if (!first.start.isDaySlot && second.start.isDaySlot) {\n                            result = 1;\n                    }\n                }\n\n                if (result === 0) {\n                    result = first.start.groupIndex - second.start.groupIndex;\n                }\n\n                if (result === 0) {\n                    result = $(first.element).index() - $(second.element).index();\n                }\n\n                return result;\n            });\n        },\n\n        _currentTimeMarkerUpdater: function() {\n            this._updateCurrentTimeMarker(new Date());\n        },\n\n        _scrollTo: function(element, container) {\n            SchedulerView.fn._scrollTo.call(this, element, container);\n\n            var elementOffset = element.offsetLeft,\n                elementOffsetDir = element.offsetWidth,\n                containerScroll = container.scrollLeft,\n                containerOffsetDir = container.clientWidth,\n                rightDistance = elementOffset + elementOffsetDir,\n                result = 0;\n\n                if (containerScroll > elementOffset) {\n                    result = elementOffset;\n                } else if (rightDistance > (containerScroll + containerOffsetDir)) {\n                    if (elementOffsetDir <= containerOffsetDir) {\n                        result = (rightDistance - containerOffsetDir);\n                    } else {\n                        result = elementOffset;\n                    }\n                } else {\n                    result = containerScroll;\n                }\n                container.scrollLeft = result;\n        },\n\n        _updateCurrentTimeMarker: function(currentTime) {\n            var options = this.options;\n\n            this.datesHeader.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n            this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n            this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n\n            if (!this._isInDateSlot({ start: currentTime, end: currentTime })) {\n                return;\n            }\n\n            if (options.currentTimeMarker.useLocalTimezone === false) {\n                var timezone = options.dataSource.options.schema.timezone;\n\n                if (options.dataSource && timezone) {\n                    var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                    currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                }\n            }\n\n            var groupsCount = !options.group || options.group.orientation == \"vertical\" ? 1 : this.groups.length;\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var currentGroup = this.groups[groupIndex];\n\n                if (!currentGroup) {\n                    return;\n                }\n\n                var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                if (ranges.length === 0) {\n                    return;\n                }\n\n                var collection = ranges[0].collection;\n                var slotElement = collection.slotByStartDate(currentTime);\n\n                if (slotElement) {\n\n                    if (this._isVerticallyGrouped()) {\n                        this._groupedView._updateCurrentVerticalTimeMarker(ranges,currentTime);\n                    } else {\n                        var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n                        var headerWrap = this.datesHeader.find(\".\" + SCHEDULER_HEADER_WRAP_CLASS);\n                        var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                        var timesTableMarker = $(elementHtml)\n                                .prependTo(headerWrap)\n                                .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n                        timesTableMarker.css({\n                            left: this._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                            top: headerWrap.find(\"tr\").last().prev().position().top\n                        });\n\n                        $(elementHtml).prependTo(this.content).css({\n                            left: this._adjustLeftPosition(left),\n                            width: \"1px\",\n                            height: this.content[0].scrollHeight - 1,\n                            top: 0\n                        });\n                    }\n                }\n            }\n        },\n\n        _adjustLeftPosition: function(left) {\n            return this._groupedView._adjustLeftPosition(left);\n        },\n\n        _currentTime: function(setUpdateTimer) {\n            var that = this;\n            var markerOptions = that.options.currentTimeMarker;\n\n            if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                that._currentTimeMarkerUpdater();\n\n                if (setUpdateTimer) {\n                    that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                }\n            }\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-event a:has(.k-i-close)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-content td\", function(e) {\n                    var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                    }\n\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-content td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                        var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                        var slot = that._slotByPosition(x, y);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that._editUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-event\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var eventElement = $(e.target).closest(\".k-event\");\n                        var touchElement = $(e.touch.initialTouch);\n\n                        if (touchElement.hasClass(\"k-i-close\")) {\n                            that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        } else if (!eventElement.hasClass(\"k-event-active\")) {\n                            that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        _slotByPosition: function(x, y) {\n            var slot;\n            var content = this.content;\n            var offset = content.offset();\n            var groupIndex;\n\n            x -= offset.left;\n            y -= offset.top;\n\n            if (this._isRtl) {\n                var browser = kendo.support.browser;\n\n                if (browser.mozilla || (browser.webkit && browser.version >= 85)) {\n                     x += (content[0].scrollWidth - content[0].offsetWidth);\n                     x += content[0].scrollLeft;\n                } else if (browser.msie) {\n                     x -= kendo.scrollLeft(content);\n                     x += content[0].scrollWidth - content[0].offsetWidth;\n                } else if (browser.webkit) {\n                     x += content[0].scrollLeft;\n                }\n            } else {\n                x += content[0].scrollLeft;\n            }\n\n            y += content[0].scrollTop;\n\n            x = Math.ceil(x);\n            y = Math.ceil(y);\n\n            for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n\n                 slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n\n                 if (slot) {\n                     return slot;\n                 }\n            }\n\n            return null;\n        },\n\n        options: {\n            name: \"TimelineView\",\n            title: \"Timeline\",\n            selectedDateFormat: \"{0:D}\",\n            selectedShortDateFormat: \"{0:d}\",\n            selectedMobileDateFormat: \"{0:MMM dd}\",\n            date: kendo.date.today(),\n            startTime: kendo.date.today(),\n            endTime: kendo.date.today(),\n            showWorkHours: false,\n            minorTickCount: 2,\n            editable: true,\n            workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n            workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n            workWeekStart: 1,\n            workWeekEnd: 5,\n            majorTick: 60,\n            eventHeight: 25,\n            eventMinWidth: 0,\n            columnWidth: 100,\n            groupHeaderTemplate: ({ text }) => text,\n            majorTimeHeaderTemplate: ({ date }) => kendo.toString(date, 't'),\n            slotTemplate: () => \"&nbsp;\",\n            eventTemplate: EVENT_TEMPLATE,\n            dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n            footer: {\n                command: \"workDay\"\n            },\n            currentTimeMarker: {\n                updateInterval: 10000,\n                useLocalTimezone: true\n            },\n            messages: {\n                defaultRowText: \"All events\",\n                showFullDay: \"Show full day\",\n                showWorkDay: \"Show business hours\"\n            }\n        },\n\n        events: [\"remove\", \"add\", \"edit\"],\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n            this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n            this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n            this.slotTemplate = kendo.template(options.slotTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        _render: function(dates) {\n            var that = this;\n\n            dates = dates || [];\n\n            that._dates = dates;\n\n            that._startDate = dates[0];\n\n            that._endDate = dates[(dates.length - 1) || 0];\n\n            that._calculateSlotRanges();\n\n            that.createLayout(that._layout(dates));\n\n            that._content(dates);\n\n            that._footer();\n\n            that._setContentWidth();\n\n            that.refreshLayout();\n\n            that.datesHeader.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                var th = $(e.currentTarget).closest(\"th\");\n\n                var slot = that._slotByPosition(th.offset().left, that.content.offset().top);\n\n                that.trigger(\"navigate\", { view: \"timeline\", date: slot.startDate() });\n            });\n\n            that._groupedView._hideHeaders();\n        },\n\n        _setContentWidth: function() {\n            var content = this.content;\n            var contentWidth = content.width();\n            var contentTable = this.content.find(\"table\");\n            var columnCount = contentTable.find(\"tr\").first().children().length;\n\n            var minWidth = 100;\n            var calculatedWidth = columnCount * this.options.columnWidth;\n\n            if (contentWidth < calculatedWidth) {\n                minWidth = Math.ceil((calculatedWidth / contentWidth) * 100);\n            }\n\n            contentTable.add(this.datesHeader.find(\"table\"))\n                .css(\"width\", minWidth + \"%\");\n        },\n\n        _calculateSlotRanges: function() {\n            var dates = this._dates;\n            var slotStartTime = this.startTime();\n            var slotEndTime = this.endTime();\n\n            slotEndTime = getMilliseconds(slotEndTime);\n            slotStartTime = getMilliseconds(slotStartTime);\n\n            if (slotEndTime === slotStartTime) {\n                slotEndTime += MS_PER_DAY - 1;\n            } else if (slotEndTime < slotStartTime) {\n                slotEndTime += MS_PER_DAY;\n            }\n\n            var slotRanges = [];\n            for (var i = 0; i < dates.length; i++) {\n                var rangeStart = getDate(dates[i]);\n                setTime(rangeStart, slotStartTime);\n\n                var rangeEnd = getDate(dates[i]);\n                setTime(rangeEnd, slotEndTime);\n\n                slotRanges.push({\n                    start: kendo.date.toUtcTime(rangeStart),\n                    end: kendo.date.toUtcTime(rangeEnd)\n                });\n            }\n\n            this._slotRanges = slotRanges;\n        },\n\n        _forTimeRange: function(min, max, action, verticalByDate, groupsCount) {\n            min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n            max = toInvariantTime(max);\n\n            var that = this,\n                msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                minorTickCount = that.options.minorTickCount,\n                msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                start = new Date(+min),\n                idx = 0, length,\n                html = \"\";\n\n            length = MS_PER_DAY / msInterval;\n\n            if (msMin != msMax) {\n                if (msMin > msMax) {\n                    msMax += MS_PER_DAY;\n                }\n\n                length = ((msMax - msMin) / msInterval);\n            }\n\n            length = verticalByDate ? 1 : Math.round(length);\n\n            if (groupsCount) {\n                length = length * groupsCount;\n            }\n\n            for (; idx < length; idx++) {\n                var majorTickDivider = idx % (msMajorInterval / msInterval);\n                var isMajorTickColumn = majorTickDivider === 0;\n                var isMiddleColumn = majorTickDivider < minorTickCount - 1;\n                var isLastSlotColumn = majorTickDivider === minorTickCount - 1;\n                var minorTickColumns = minorTickCount;\n\n                if (length % minorTickCount !== 0) {\n                    var isLastMajorSlot = (length - (idx + 1)) < minorTickCount;\n                    if (isMajorTickColumn && isLastMajorSlot) {\n                        minorTickColumns = length % minorTickCount;\n                    }\n                }\n\n                html += action(start, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, idx % groupsCount);\n\n                if (!verticalByDate) {\n                    if (groupsCount) {\n                        if ((idx % groupsCount) === groupsCount - 1) {\n                            setTime(start, msInterval, false);\n                        }\n                    } else {\n                        setTime(start, msInterval, false);\n                    }\n                }\n            }\n\n            return html;\n        },\n\n        _layout: function(dates) {\n            var timeColumns = [];\n            var columns = [];\n            var that = this;\n            var rows = [{ text: that.options.messages.defaultRowText }];\n            var groupedView = that._groupedView;\n\n            var minorTickSlots = [];\n            for (var minorTickIndex = 0; minorTickIndex < that.options.minorTickCount; minorTickIndex++) {\n                minorTickSlots.push({\n                    text: \"&#8203;\",\n                    className: \"k-last\",\n                    minorTicks: true\n                });\n            }\n\n            this._forTimeRange(that.startTime(), that.endTime(), function(date, majorTick, middleColumn, lastSlotColumn, minorSlotsCount) {\n                var template = that.majorTimeHeaderTemplate;\n\n                if (majorTick) {\n                    var timeColumn = {\n                        text: template({ date: date }),\n                        className: lastSlotColumn ? \"k-slot-cell\" : \"\",\n                        columns: minorTickSlots.slice(0, minorSlotsCount)\n                    };\n\n                    groupedView._setColspan(timeColumn);\n\n                    timeColumns.push(timeColumn);\n                }\n            });\n\n            for (var idx = 0; idx < dates.length; idx++) {\n                columns.push({\n                    text: that.dateHeaderTemplate({ date: dates[idx] }),\n                    className: \"k-slot-cell\",\n                    columns: timeColumns.slice(0)\n                });\n            }\n\n            var resources = this.groupedResources;\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    rows = groupedView._createRowsLayout(resources, null, this.groupHeaderTemplate, columns);\n                    columns = groupedView._createVerticalColumnsLayout(resources, null, this.groupHeaderTemplate, columns);\n\n                } else {\n                    columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        _footer: function() {\n            var options = this.options;\n\n            if (options.footer !== false) {\n                var html = '<div class=\"k-scheduler-footer k-toolbar\" role=\"toolbar\">';\n\n                var command = options.footer.command;\n\n                if (this._isMobile()) {\n                    html += '<span class=\"k-scheduler-today\"><a tabindex=\"-1\" href=\"#\" class=\"k-link\">';\n                    html += options.messages.today + '</a></span>';\n                }\n\n                if (command && command === \"workDay\") {\n                    if (this._isMobile()) {\n                        html += '<span class=\"k-scheduler-fullday\"><a tabindex=\"-1\" href=\"#\" class=\"k-link\">';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></span>';\n                    } else {\n                        html += '<button tabindex=\"-1\" type=\"button\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-scheduler-fullday\">';\n                            html += '<span class=\"k-button-icon k-icon k-i-clock\"></span>';\n                            html += '<span class=\"k-button-text\">';\n                                html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay);\n                            html += '</span>';\n                        html += '</button>';\n                    }\n                }\n\n                html += \"</div>\";\n\n                this.footer = $(html).appendTo(this.element);\n\n                var that = this;\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-fullday\", function(e) {\n                    e.preventDefault();\n                    that.toggleFullDay();\n                });\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-today\", function(e) {\n                    e.preventDefault();\n                    var timezone = that.options.timezone;\n                    var action = \"today\";\n                    var currentDate = new Date();\n                    var date;\n\n                    if (timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                        date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                    } else {\n                        date = currentDate;\n                    }\n\n                    that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n                });\n            }\n        },\n\n        toggleFullDay: function() {\n            var options = this.options;\n\n            this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level) {\n            var rowLevel = this.rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        _isWorkDay: function(date) {\n            var day = date.getDay();\n            var workDays = this._workDays;\n\n            for (var i = 0; i < workDays.length; i++) {\n                if (workDays[i] === day) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _content: function(dates) {\n            var that = this;\n            var start = that.startTime();\n            var end = this.endTime();\n            var groupsCount = 1;\n            var rowCount = 1;\n            var columnCount = dates.length;\n            var html = '';\n            var resources = this.groupedResources;\n            var slotTemplate = this.slotTemplate;\n            var isVerticalGrouped = false;\n\n            if (resources.length) {\n                isVerticalGrouped = that._groupOrientation() === \"vertical\";\n\n                if (isVerticalGrouped) {\n                    rowCount = that._groupedView._getRowCount(this.rowLevels.length - 1);\n                    groupsCount = that._groupedView._getGroupsCount();\n                } else {\n                    groupsCount = that._groupCount();\n                }\n            }\n\n            html += '<tbody>';\n            html += that._groupedView._addContent(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped);\n            html += '</tbody>';\n\n            this.content.find(\"table\").append(html);\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var dates = this._dates;\n            var columnCount = dates.length;\n\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                var view = this._addResourceView(idx);\n\n                var start = dates[0];\n                var end = dates[(dates.length - 1) || 0];\n\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n\n                if (startTime !== 0 && endTime <= startTime) {\n                    start = getDate(start);\n                    setTime(start, startTime);\n\n                    end = getDate(end);\n                    setTime(end, endTime);\n                }\n\n                view.addTimeSlotCollection(start, kendo.date.addDays(end, 1));\n            }\n\n            this._timeSlotGroups(groupCount, columnCount);\n        },\n\n        _isHorizontallyGrouped: function() {\n            return this.groupedResources.length && this._groupOrientation() === \"horizontal\";\n        },\n\n        _timeSlotGroups: function(groupCount, datesCount) {\n            var interval = this._timeSlotInterval();\n            var isVerticallyGrouped = this._isVerticallyGrouped();\n            var tableRows = this.content.find(\"tr\");\n\n            this._groupedView._addTimeSlotsCollections(groupCount, datesCount, tableRows, interval, isVerticallyGrouped);\n\n        },\n\n        _addTimeSlotToCollection: function(group, cells, cellIndex, cellOffset, dateIndex, time, interval) {\n              var cell = cells[cellIndex + cellOffset];\n              var collection = group.getTimeSlotCollection(0);\n              var currentDate = this._dates[dateIndex];\n              var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n              var start = currentTime + time;\n              var end = start + interval;\n\n              collection.addTimeSlot(cell, start, end, true);\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        visibleEndDate: function() {\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var endDate = this.endDate();\n\n            if (startTime !== 0 && endTime <= startTime) {\n                endDate = kendo.date.addDays(endDate, 1);\n            }\n\n            return endDate;\n        },\n\n        startTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayStart : options.startTime;\n        },\n\n        endTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayEnd : options.endTime;\n        },\n\n        _timeSlotInterval: function() {\n            var options = this.options;\n            return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this.endDate());\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this.startDate());\n        },\n\n        calculateDateRange: function() {\n            this._render([this.options.date]);\n        },\n\n        render: function(events) {\n            this._headerColumnCount = 0;\n\n            this._groups();\n\n            this.element.find(\".k-event\").remove();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray();\n\n            var eventsByResource = [];\n\n            this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n            var eventGroups = [];\n            var maxRowCount = 0;\n\n            for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                var eventGroup = {\n                    groupIndex: groupIndex,\n                    maxRowCount: 0,\n                    events: {}\n                };\n\n                eventGroups.push(eventGroup);\n\n                this._renderEvents(eventsByResource[groupIndex], groupIndex, eventGroup);\n\n                if (maxRowCount < eventGroup.maxRowCount) {\n                    maxRowCount = eventGroup.maxRowCount;\n                }\n            }\n\n            this._setRowsHeight(eventGroups, eventsByResource.length, maxRowCount);\n\n            this._positionEvents(eventGroups, eventsByResource.length);\n\n            this._currentTime(false);\n\n            this.trigger(\"activate\");\n        },\n\n        _positionEvents: function(eventGroups, groupsCount) {\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var eventsForGroup = eventGroups[groupIndex].events;\n                for (var eventUid in eventsForGroup) {\n                    var eventObject = eventsForGroup[eventUid];\n                    if (Array.isArray(eventObject)) {\n                        for (var eventIndex = 0; eventIndex < eventObject.length; eventIndex++) {\n                            this._positionEvent(eventObject[eventIndex]);\n                        }\n                    } else {\n                        this._positionEvent(eventObject);\n                    }\n                }\n            }\n        },\n\n        _setRowsHeight: function(eventGroups, groupsCount, maxRowCount) {\n            var eventHeight = this.options.eventHeight;\n            var eventBottomOffset = this._getBottomRowOffset();\n            var groupedView = this._groupedView;\n            var verticalGroupCount = groupedView._getVerticalGroupCount(groupsCount);\n\n            groupsCount = this._isVerticallyGrouped() ? verticalGroupCount : 1;\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var rowsCount = groupedView._getVerticalRowCount(eventGroups, groupIndex, maxRowCount);\n\n                rowsCount = rowsCount ? rowsCount : 1;\n\n                var rowHeight = ((eventHeight + 2) * rowsCount) + eventBottomOffset;\n                var timesRow = $(this.times.find(\"tr\")[groupIndex]);\n                var row = $(this.content.find(\"tr\")[groupIndex]);\n\n                timesRow.height(rowHeight);\n                row.height(rowHeight);\n            }\n\n            this._setContentWidth();\n            this.refreshLayout();\n            this._refreshSlots();\n        },\n\n        _getBottomRowOffset: function() {\n            var eventBottomOffset = this.options.eventHeight * 0.50;\n            var isMobile = this._isMobile();\n            var minOffset;\n            var maxOffset;\n\n            if (isMobile) {\n                minOffset = 30;\n                maxOffset = 60;\n            } else {\n                minOffset = 15;\n                maxOffset = 30;\n            }\n\n            if (eventBottomOffset > maxOffset) {\n                eventBottomOffset = maxOffset;\n            } else if (eventBottomOffset < minOffset) {\n                eventBottomOffset = minOffset;\n            }\n\n            return eventBottomOffset;\n        },\n\n        _positionEvent: function(eventObject) {\n            var eventHeight = this.options.eventHeight;\n            var eventOffset = 2;\n            var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n            var left = this._adjustLeftPosition(rect.left);\n            var width = rect.right - rect.left;\n\n            if (width < 0) {\n                width = 0;\n            }\n\n            if (width < this.options.eventMinWidth) {\n                var slotsCollection = eventObject.slotRange.collection;\n                var lastSlot = slotsCollection._slots[slotsCollection._slots.length - 1];\n                var offsetRight = lastSlot.offsetLeft + lastSlot.offsetWidth;\n\n                width = this.options.eventMinWidth;\n\n                if (offsetRight < left + width) {\n                    width = offsetRight - rect.left;\n                }\n            }\n\n            eventObject.element.css({\n                top: eventObject.slotRange.start.offsetTop + eventObject.rowIndex * (eventHeight + eventOffset) + \"px\",\n                left: left,\n                width: width\n            });\n        },\n\n        _refreshSlots: function() {\n            for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                this.groups[groupIndex].refresh();\n            }\n        },\n\n        _eventsByResource: function(events, resources, result, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                    } else {\n                        result.push(eventsFilteredByResource);\n                    }\n                }\n            } else {\n                result.push(events);\n            }\n        },\n\n        _isInDateSlot: function(event) {\n            var startTime = event.start;\n            var endTime = event.end;\n            var rangeStart = getDate(this._startDate);\n            var rangeEnd = kendo.date.addDays(getDate(this.visibleEndDate()), 1);\n\n            if (startTime < rangeEnd && rangeStart <= endTime) {\n                return true;\n            }\n            return false;\n        },\n\n        _isInTimeSlot: function(event) {\n            var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n            var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n\n            var slotRanges = this._slotRanges;\n\n            if (startTime === endTime) {\n                endTime = endTime + 1;\n            }\n\n            for (var slotIndex = 0; slotIndex < slotRanges.length; slotIndex++) {\n                if (startTime < slotRanges[slotIndex].end && slotRanges[slotIndex].start < endTime) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _adjustEvent: function(event) {\n            var start = event.start;\n            var end = event.end;\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var adjustedStartDate = null;\n            var adjustedEndDate = null;\n            var occurrence;\n            var head = false;\n            var tail = false;\n\n            if (event.isAllDay) {\n                start = getDate(start);\n                eventStartTime = 0;\n\n                end = getDate(end);\n                eventEndTime = MS_PER_DAY;\n                adjustedEndDate = kendo.date.addDays(end, 1);\n            }\n\n            if (endTime === 0) {\n                endTime = MS_PER_DAY;\n            }\n\n            if (endTime <= startTime) {\n                if (eventStartTime < startTime && eventStartTime >= endTime) {\n                    adjustedStartDate = getDate(start);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                }\n\n                if (eventEndTime > endTime && eventEndTime <= startTime) {\n                    adjustedEndDate = getDate(end);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                }\n            } else {\n                if (startTime > eventStartTime) {\n                    adjustedStartDate = getDate(start);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                } else if (endTime <= eventStartTime) {\n                    adjustedStartDate = getDate(start);\n                    adjustedStartDate = kendo.date.addDays(adjustedStartDate, 1);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                }\n\n                if (endTime < eventEndTime) {\n                    adjustedEndDate = getDate(end);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                } else if (startTime > eventEndTime) {\n                    adjustedEndDate = getDate(end);\n                    adjustedEndDate = kendo.date.addDays(adjustedEndDate,-1);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                }\n            }\n\n            occurrence = event.clone({\n                start: adjustedStartDate ? adjustedStartDate : start,\n                end: adjustedEndDate ? adjustedEndDate : end,\n                _startTime: adjustedStartDate ? kendo.date.toUtcTime(adjustedStartDate) : event._startTime,\n                _endTime: adjustedEndDate ? kendo.date.toUtcTime(adjustedEndDate) : event._endTime,\n                isAllDay: false\n            });\n\n            return {\n                occurrence: occurrence,\n                head: head,\n                tail: tail\n            };\n        },\n\n        _renderEvents: function(events, groupIndex, eventGroup) {\n            var event;\n            var idx;\n            var length;\n\n            for (idx = 0, length = events.length; idx < length; idx++) {\n                event = events[idx];\n\n                if (this._isInDateSlot(event)) {\n                    var isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                    var container = this.content;\n\n                    if (isMultiDayEvent || this._isInTimeSlot(event)) {\n                        var adjustedEvent = this._adjustEvent(event);\n                        var group = this.groups[groupIndex];\n\n                        if (!group._continuousEvents) {\n                            group._continuousEvents = [];\n                        }\n\n                        if (this._isInTimeSlot(adjustedEvent.occurrence)) {\n                            var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                            var range = ranges[0];\n                            var startIndex = range.start.index;\n                            var endIndex = range.end.index;\n\n                            this._groupedView._renderEvent(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex);\n                        }\n                    }\n                }\n            }\n        },\n\n        addContinuousEvent: function(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n\n            events.push({\n                element: element,\n                isAllDay: isAllDay,\n                uid: element.attr(kendo.attr(\"uid\")),\n                start: range.start,\n                end: range.end\n            });\n        },\n\n        _createEventElement: function(occurrence, event, head, tail) {\n            var template = this.eventTemplate;\n            var editable = this.options.editable;\n            var isMobile = this._isMobile();\n            var showDelete = editable && editable.destroy !== false && !isMobile;\n            var resizable = editable && editable.resize !== false;\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var eventStartDate = event.start;\n            var eventEndDate = event.end;\n\n            var resources = this.eventResources(event);\n\n            if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                eventStartDate = new Date(eventStartTime);\n                eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n            }\n\n            if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                eventEndDate = new Date(eventEndTime);\n                eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n            }\n\n            var data = extend({}, {\n                ns: kendo.ns,\n                resizable: resizable,\n                showDelete: showDelete,\n                head: head,\n                tail: tail,\n                singleDay: this._dates.length == 1,\n                resources: resources,\n                inverseColor: false,\n                messages: this.options.messages,\n                ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay),\n                template: this.options.eventTemplate\n            }, event, {\n                start: eventStartDate,\n                end: eventEndDate\n            });\n\n            var element = $(template(data));\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: data } ]\n                };\n            });\n\n            return element;\n        },\n\n        _arrangeRows: function(eventObject, slotRange, eventGroup) {\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n\n            var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n            var rectRight = rect.right + this.options.eventMinWidth;\n\n            var events = collidingEvents(slotRange.events(), rect.left, rectRight);\n\n            slotRange.addEvent({\n                slotIndex: startIndex,\n                start: startIndex,\n                end: endIndex,\n                rectLeft: rect.left,\n                rectRight: rectRight,\n                element: eventObject.element,\n                uid: eventObject.uid\n            });\n\n            events.push({\n                start: startIndex,\n                end: endIndex,\n                uid: eventObject.uid\n            });\n\n            var rows = SchedulerView.createRows(events);\n\n            if (eventGroup.maxRowCount < rows.length) {\n                eventGroup.maxRowCount = rows.length;\n            }\n\n            for (var idx = 0, length = rows.length; idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    eventGroup.events[rowEvents[j].uid].rowIndex = idx;\n                }\n            }\n        },\n\n        _groupCount: function() {\n            var resources = this.groupedResources;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    return groupedView._verticalCountForLevel(resources.length - 1);\n                } else {\n                    return groupedView._horizontalCountForLevel(resources.length - 1, this.columnLevels.length - 1);\n                }\n            }\n            return 1;\n        },\n\n        _updateEventForSelection: function(event) {\n            var adjustedEvent = this._adjustEvent(event.clone());\n            return adjustedEvent.occurrence;\n        },\n\n        _eventOptionsForMove: function(event) {\n            if (event.isAllDay) {\n                return { isAllDay: false };\n            }\n\n            return {};\n        },\n\n        _updateEventForResize: function(event) {\n            if (event.isAllDay) {\n                event.set(\"isAllDay\", false);\n            }\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var group = this.groups[groupIndex];\n\n            var clonedEvent = event.clone({ start: event.start, end: event.end });\n\n            var eventDuraton = clonedEvent.duration();\n            clonedEvent.start = new Date(clonedEvent.start.getTime() + distance);\n            clonedEvent.end = new Date(+clonedEvent.start + eventDuraton);\n\n            this._removeMoveHint(event.uid);\n\n            if (this._isInDateSlot(clonedEvent)) {\n                if (clonedEvent.isAllDay || clonedEvent.duration() >= MS_PER_DAY || this._isInTimeSlot(clonedEvent)) {\n                    var adjustedEvent = this._adjustEvent(clonedEvent);\n                    var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n\n                    for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                        this._groupedView._createMoveHint(ranges[rangeIndex], adjustedEvent);\n                    }\n                }\n            }\n        },\n\n       _appendMoveHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._moveHint = this._moveHint.add(hint);\n       },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            var group = this.groups[groupIndex];\n            var ranges = group.ranges(startTime, endTime, false, false);\n\n            this._removeResizeHint();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var start = range.startSlot();\n\n                var startRect = range.innerRect(startTime, endTime, false);\n                startRect.top = start.offsetTop;\n\n                var width = startRect.right - startRect.left;\n\n                if (width < 0) {\n                    for (var i = 0; i < range.events().length; i++) {\n                        if (range.events()[i].uid === event.uid) {\n                            width = range.events()[i].rectRight - startRect.left;\n                            break;\n                        }\n                    }\n                }\n\n                var height = range.endSlot().offsetTop + start.offsetHeight - startRect.top;\n\n                var left = this._adjustLeftPosition(startRect.left);\n\n                var hint = SchedulerView.fn._createResizeHint.call(this,\n                    left,\n                    startRect.top,\n                    width,\n                    height\n                );\n\n                this._resizeHint = this._resizeHint.add(hint);\n            }\n\n            var format = \"t\";\n            var container = this.content;\n\n            this._resizeHint.appendTo(container);\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n        },\n\n        selectionByElement: function(cell) {\n            var offset = cell.offset();\n            return this._slotByPosition(offset.left, offset.top);\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            if (multiple && !vertical) {\n                if (startSlot.index === endSlot.index &&\n                    startSlot.collectionIndex === endSlot.collectionIndex) {\n                    selection.backward = reverse;\n                }\n            }\n        },\n\n        _changeGroup: function(selection, previous) {\n            var method = previous ? \"prevGroupSlot\" : \"nextGroupSlot\";\n\n            var slot = this[method](selection.start, selection.groupIndex, false);\n\n            if (slot) {\n                selection.groupIndex += previous ? -1 : 1;\n            }\n\n            this._groupedView._changeGroup(selection, previous, slot);\n            return slot;\n        },\n\n        prevGroupSlot: function(date, groupIndex, isDay) {\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n\n            if (groupIndex <= 0) {\n                return;\n            }\n\n            return this._groupedView._prevGroupSlot(slot, group, isDay);\n        },\n\n        nextGroupSlot: function(date, groupIndex, isDay) {\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n\n            if (groupIndex >= this.groups.length - 1) {\n                return;\n            }\n\n            return this._groupedView._nextGroupSlot(slot, group, isDay);\n        },\n\n        _verticalSlots: function(selection, ranges, multiple, reverse) {\n            var groupedView = this._groupedView;\n            var method = groupedView._verticalMethod(reverse, multiple);\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            var group = this.groups[selection.groupIndex];\n            var slot = groupedView._normalizeVerticalSelection(selection, ranges, reverse, multiple);\n\n            if (slot) {\n                startSlot = endSlot = slot;\n            }\n\n            startSlot = group[method](startSlot);\n            endSlot = group[method](endSlot);\n\n            if (!multiple && this._isVerticallyGrouped() && (!startSlot || !endSlot)) {\n                startSlot = endSlot = groupedView._verticalSlots(selection, reverse, slot);\n            }\n\n            return {\n                startSlot: startSlot,\n                endSlot: endSlot\n            };\n        },\n\n        _horizontalSlots: function(selection, ranges, multiple, reverse) {\n            var method = reverse ? \"upSlot\" : \"downSlot\";\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            var group = this.groups[selection.groupIndex];\n            var result = {};\n\n            if (!multiple) {\n                result = this._groupedView._horizontalSlots(selection, group, method, startSlot, endSlot, multiple, reverse);\n            } else {\n                result.startSlot = group[method](startSlot);\n                result.endSlot = group[method](endSlot);\n\n                if (!multiple && this._isHorizontallyGrouped() && (!startSlot || !endSlot)) {\n                    result.startSlot = result.endSlot = this._changeGroup(selection, reverse);\n                }\n            }\n\n            return result;\n        },\n\n        _changeViewPeriod: function(selection, reverse) {\n            var date = reverse ? this.previousDate() : this.nextDate();\n            var start = selection.start;\n            var end = selection.end;\n            var newStart, newEnd;\n\n            newStart = new Date(date);\n            newEnd = new Date(date);\n\n            if (this._isInRange(newStart, newEnd)) {\n                return false;\n            }\n            selection.start = newStart;\n            selection.end = newEnd;\n\n            if (this._isHorizontallyGrouped()) {\n               selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n            }\n\n            var duration = end - start;\n\n            if (reverse) {\n                end = getMilliseconds(this.endTime());\n                end = end === 0 ? MS_PER_DAY : end;\n\n                setTime(selection.start, end - duration);\n                setTime(selection.end, end);\n            } else {\n                start = getMilliseconds(this.startTime());\n\n                setTime(selection.start, start);\n                setTime(selection.end, start + duration);\n            }\n\n            selection.events = [];\n\n            return true;\n        },\n\n        move: function(selection, key, shift) {\n            var handled = false;\n            var group = this.groups[selection.groupIndex];\n            var keys = kendo.keys;\n            var groupedView = this._groupedView;\n            var ranges = group.ranges(selection.start, selection.end, false, false);\n            var startSlot, endSlot, reverse, slots;\n\n            if (key === keys.DOWN || key === keys.UP) {\n                handled = true;\n                reverse = key === keys.UP;\n\n                groupedView._updateDirection(selection, ranges, shift, reverse);\n\n                slots = this._verticalSlots(selection, ranges, shift, reverse);\n\n                if (groupedView._changeVerticalViewPeriod(slots, shift, selection, reverse)) {\n                    return handled;\n                }\n            } else if (key === keys.LEFT || key === keys.RIGHT) {\n                handled = true;\n                reverse = key === keys.LEFT;\n\n                this._updateDirection(selection, ranges, shift, reverse, false);\n\n                slots = this._horizontalSlots(selection, ranges, shift, reverse);\n\n                if (groupedView._changeHorizontalViewPeriod(slots, shift, selection, reverse)) {\n                     return handled;\n                }\n            }\n\n           if (handled) {\n               startSlot = slots.startSlot;\n               endSlot = slots.endSlot;\n\n               if (shift) {\n                   var backward = selection.backward;\n\n                   if (backward && startSlot) {\n                       selection.start = startSlot.startDate();\n                   } else if (!backward && endSlot) {\n                       selection.end = endSlot.endDate();\n                   }\n               } else if (startSlot && endSlot) {\n                   selection.start = startSlot.startDate();\n                   selection.end = endSlot.endDate();\n               }\n\n               selection.events = [];\n           }\n\n            return handled;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.element) {\n                that.element.off(NS);\n            }\n\n            if (that.footer) {\n                that.footer.remove();\n            }\n\n            if (that._currentTimeUpdateTimer) {\n                clearInterval(that._currentTimeUpdateTimer);\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && that.options.editable) {\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents.destroy();\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents.destroy();\n                }\n            }\n        },\n\n        _resourceBySlot: function(slot) {\n            var resources = this.groupedResources;\n            var result = {},\n            groupOptions = this.options.group;\n\n            if (resources.length && groupOptions.orientation === \"horizontal\" && groupOptions.date) {\n                var resourceIndex = slot.groupIndex,\n                    levels = this.columnLevels,\n                    groupLevel = levels[levels.length - 1],\n                    resource = resources[resources.length - 1],\n                    groupLevelMember = groupLevel[resourceIndex],\n                    passedChildren, numberOfChildren, j, i;\n\n                this._setResourceValue(groupLevelMember, resource, result);\n\n                for (j = levels.length - 2; j >= 3; j--) {\n                    groupLevel = levels[j];\n                    resource = resources[j - 3];\n                    passedChildren = 0;\n\n                    for (i = 0; i < groupLevel.length; i++) {\n                        groupLevelMember = groupLevel[i];\n                        numberOfChildren = groupLevelMember.columns.length;\n\n                        if (numberOfChildren > resourceIndex - passedChildren) {\n                            this._setResourceValue(groupLevelMember, resource, result);\n\n                            i = groupLevel.length;\n                        } else {\n                            passedChildren += numberOfChildren;\n                        }\n                    }\n                }\n\n                return result;\n            } else {\n                return SchedulerView.fn._resourceBySlot.call(this, slot);\n            }\n        }\n    });\n\n    extend(true, ui, {\n        TimelineView: TimelineView,\n        TimelineWeekView: TimelineView.extend({\n            options: {\n                name: \"TimelineWeekView\",\n                title: \"Timeline Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                majorTick: 120\n            },\n            name: \"timelineWeek\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = 7; idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        }),\n        TimelineWorkWeekView: TimelineView.extend({\n            options: {\n                name: \"TimelineWorkWeekView\",\n                title: \"Timeline Work Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                majorTick: 120\n            },\n            name: \"timelineWorkWeek\",\n            nextDate: function() {\n                var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.endDate()), this.calendarInfo().firstDay, 1);\n\n                return kendo.date.addDays(weekStart, this._workDays[0]);\n            },\n            previousDate: function() {\n                var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                var workDays = this._workDays;\n\n                return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n            },\n            calculateDateRange: function() {\n                var options = this.options,\n                    selectedDate = options.date,\n                    dayOfWeek = kendo.date.dayOfWeek,\n                    weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                    end = dayOfWeek(start, options.workWeekEnd, 1),\n                    dates = [],\n                    workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                        return dayOfWeek(weekStart, day, 1).getTime();\n                    }) : null;\n\n                if (workDays) {\n                    start = weekStart;\n                    end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                }\n\n                while (start <= end) {\n                    if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                        dates.push(start);\n                    } else if (!workDays) {\n                        dates.push(start);\n                    }\n\n                    start = kendo.date.nextDay(start);\n                }\n\n                this._render(dates);\n            }\n        }),\n        TimelineMonthView: TimelineView.extend({\n            options: {\n                name: \"TimelineMonthView\",\n                title: \"Timeline Month\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                workDayStart: new Date(1980, 1, 1, 0, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 23, 59, 59),\n                footer: false,\n                majorTick: 1440,\n                minorTickCount: 1\n            },\n            name: \"timelineMonth\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.firstDayOfMonth(selectedDate),\n                    end = kendo.date.lastDayOfMonth(selectedDate),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = end.getDate(); idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        })\n    });\n\n})(window.kendo.jQuery);\n"]}