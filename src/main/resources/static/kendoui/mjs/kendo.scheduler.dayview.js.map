{"version":3,"file":"kendo.scheduler.dayview.js","names":["__meta__","id","name","category","description","depends","hidden","$","undefined$1","kendo","window","ui","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","MS_PER_MINUTE","MS_PER_DAY","INVERSE_COLOR_CLASS","getMilliseconds","NS","DAY_VIEW_EVENT_TEMPLATE","template","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","toInvariantTime","staticDate","Date","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","events","_continuousEvents","lastEvent","length","startDate","start","getTime","idx","splice","uid","attr","end","push","MultiDayView","init","options","that","this","fn","call","title","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","currentTimeMarkers","currentContentMarkers","timesTableMarkerWidth","position","elementHtml","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","times","find","content","groupsCount","orientation","groups","firstTimesCell","first","lastTimesCell","last","_isRtl","left","groupIndex","currentGroup","utcCurrentTime","toUtcTime","ranges","timeSlotRanges","collection","slotByStartDate","timesTableMarker","eq","prependTo","markerTopPosition","round","innerRect","top","timesTableMarkerCss","right","addClass","CURRENT_TIME_MARKER_ARROW_CLASS","css","height","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","_updateResizeHint","event","startTime","endTime","multiday","enforceAllDaySlot","isMultiDay","width","hint","_removeResizeHint","rangeIndex","startSlot","_isGroupedByDate","slotIdx","index","slot","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","rect","outerRect","snap","bottom","format","container","appendTo","text","toString","toLocalDate","_updateMoveHint","distance","duration","_removeMoveHint","_end","pop","eventHint","clientWidth","offsetHeight","_createEventElement","clone","inverseColor","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","resources","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","interval","_timeSlotInterval","verticalViews","tableRows","rowCount","floor","rowMultiplier","cellMultiplier","cells","children","timeIndex","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","_addResourceView","columnIndex","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","messages","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","parent","hasClass","pageX","pageY","resourceInfo","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","useClickAsTap","browser","edge","tap","_scrolling","target","location","_allDayUserEvents","_editUserEvents","eventElement","touch","initialTouch","_layout","dates","columns","rows","column","isMobile","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","toggleFullDay","isWorkDay","_footer","html","action","after","msStart","msMin","msMax","msMajorInterval","msInterval","startDay","majorTickDivider","_content","_renderRows","rowLevels","columnLevels","append","_virtualContent","isVerticalGroupped","dateID","levels","_recalculateLevels","appendRow","groupIdx","dateIndex","_addCellsToContent","rowIdx","_allDayVerticalGroupRow","result","dateGroupIndex","tmplDate","classes","_isWorkDay","day","getDay","i","_render","_startDate","_endDate","createLayout","refreshLayout","_isVirtualized","_tryRenderContent","allDayHeader","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","remove","inRange","selectionByElement","innerHeight","_timeSlotIndex","_slotIndex","_dateSlotIndex","slots","_positionAllDayEvent","slotRange","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","rightOffset","eventHeight","addEvent","slotIndex","createRows","rowEvents","j","eventLength","_arrangeColumns","columnEvents","eventRightOffset","eventElements","slotEvents","tableEl","table","contentEl","columnWidth","createColumns","calculatedWidth","style","scrollWidth","_positionEvent","_startTime","_endTime","borderWidths","getComputedStyles","parseFloat","isOneDayEvent","head","tail","middle","showDelete","resizable","resize","eventStartTime","_time","eventEndTime","eventStartDate","eventEndDate","eventResources","apply","data","ns","singleDay","ariaLabel","_formatEventAriaLabel","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","slotStart","firstSlot","slotEnd","lastSlot","_updateAllDayHeaderHeight","_height","allDaySlots","refresh","_renderEvents","allDayEventContainer","isMultiDayEvent","slotRanges","newStart","newEnd","dateRange","daySlotRanges","_inverseEventColor","rangeCount","occurrence","render","_cachedEvents","Query","sort","field","dir","toArray","eventsByResource","_eventsByResource","eventsPerDate","map","grep","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","endMilliseconds","newDateStart","newDateEnd","verticalByDate","_timeSlotCollections","_getCollections","daySlotCollectionCount","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","indexOf","jQuery"],"sources":["kendo.scheduler.dayview.js"],"mappings":"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","sourcesContent":["import './kendo.scheduler.view.js';\n\nvar __meta__ = {\n    id: \"scheduler.dayview\",\n    name: \"Scheduler Day View\",\n    category: \"web\",\n    description: \"The Scheduler Day View\",\n    depends: [ \"scheduler.view\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        setTime = kendo.date.setTime,\n        SchedulerView = ui.SchedulerView,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        getDate = kendo.date.getDate,\n        MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n        CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        BORDER_SIZE_COEFF = 0.8666,\n        getMilliseconds = kendo.date.getMilliseconds,\n        NS = \".kendoMultiDayView\";\n\n    var DAY_VIEW_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t} - {1:t}\", start, end)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' +\n                    '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' +\n                    '<div class=\"k-event-template\">${title}</div>' +\n                '</div>'),\n        DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t}\", start)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' +\n                    '<div class=\"k-event-template\">${title}</div>' +\n                '</div>'),\n        DATA_HEADER_TEMPLATE = kendo.template(\"#var dateString = isMobile ? kendo.toString(date,'ddd')[0] : kendo.toString(date,'ddd M/dd'); #\" +\n                \"<span class='k-link k-nav-day'>#=dateString#</span>\"),\n        ALLDAY_EVENT_WRAPPER_STRING = '<div role=\"button\" ' +\n                'aria-label=\"#: ariaLabel #\" ' +\n                'data-#=ns#uid=\"#=uid#\"' +\n                '#if (resources[0]) { #' +\n                    'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' +\n                    'class=\"k-event\"' +\n                '#} else {#' +\n                    'class=\"k-event\"' +\n                '#}#' +\n                '>' +\n                '<span class=\"k-event-actions\">' +\n                    '# if(data.tail || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-left\"></span>' +\n                    '#}#' +\n                    '# if(data.isException()) {#' +\n                        '<span class=\"k-icon k-i-non-recurrence\"></span>' +\n                    '# } else if(data.isRecurring()) {#' +\n                        '<span class=\"k-icon k-i-reload\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '{0}' +\n                '<span class=\"k-event-actions\">' +\n                    '#if (showDelete) {#' +\n                        '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' +\n                    '#}#' +\n                    '# if(data.head || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-right\"></span>' +\n                    '#}#' +\n                '</span>' +\n                '#if(resizable && !singleDay && !data.tail && !data.middle){#' +\n                '<span class=\"k-resize-handle k-resize-w\"></span>' +\n                '#}#' +\n                '#if(resizable && !singleDay && !data.head && !data.middle){#' +\n                '<span class=\"k-resize-handle k-resize-e\"></span>' +\n                '#}#' +\n                '</div>',\n        EVENT_WRAPPER_STRING = '<div role=\"button\" ' +\n                'aria-label=\"#: ariaLabel #\" ' +\n                'data-#=ns#uid=\"#=uid#\" ' +\n                '#if (resources[0]) { #' +\n                    'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' +\n                    'class=\"k-event\"' +\n                '#} else {#' +\n                    'class=\"k-event\"' +\n                '#}#' +\n                '>' +\n                 '<span class=\"k-event-actions\">' +\n                    '# if(data.isException()) {#' +\n                        '<span class=\"k-icon k-i-non-recurrence\"></span>' +\n                    '# } else if(data.isRecurring()) {#' +\n                        '<span class=\"k-icon k-i-reload\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '{0}' +\n                '<span class=\"k-event-actions\">' +\n                    '#if (showDelete) {#' +\n                        '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' +\n                    '#}#' +\n                '</span>' +\n                '<span class=\"k-event-top-actions\">' +\n                    '# if(data.tail || data.middle) {#' +\n                    '<span class=\"k-icon k-i-arrow-60-up\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '<span class=\"k-event-bottom-actions\">' +\n                    '# if(data.head || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-down\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '# if(resizable && !data.tail && !data.middle) {#' +\n                '<span class=\"k-resize-handle k-resize-n\"></span>' +\n                '# } #' +\n                '# if(resizable && !data.head && !data.middle) {#' +\n                    '<span class=\"k-resize-handle k-resize-s\"></span>' +\n                '# } #' +\n                '</div>';\n\n    function toInvariantTime(date) {\n        var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n        setTime(staticDate, getMilliseconds(date));\n        return staticDate;\n    }\n\n    function isInDateRange(value, min, max) {\n        return value >= min && value <= max;\n    }\n\n    function isInTimeRange(value, min, max, overlaps) {\n        overlaps = overlaps ? value <= max : value < max;\n        return value > min && overlaps;\n    }\n\n    function addContinuousEvent(group, range, element, isAllDay) {\n        var events = group._continuousEvents;\n        var lastEvent = events[events.length - 1];\n        var startDate = getDate(range.start.startDate()).getTime();\n\n        //this handles all day event which is over multiple slots but starts\n        //after one of the time events\n        if (isAllDay && lastEvent &&\n            getDate(lastEvent.start.startDate()).getTime() == startDate) {\n\n                var idx = events.length - 1;\n                for ( ; idx > -1; idx --) {\n                    if (events[idx].isAllDay ||\n                        getDate(events[idx].start.startDate()).getTime() < startDate) {\n                            break;\n                        }\n                }\n\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n    }\n\n    function getWorkDays(options) {\n        if (options.workDays && options.workDays.length) {\n            return options.workDays;\n        }\n\n        var workDays = [];\n        var dayIndex = options.workWeekStart % 7;\n        var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n        workDays.push(dayIndex);\n\n        while (workWeekEnd != dayIndex) {\n            if (dayIndex > 6 ) {\n                dayIndex -= 7;\n            } else {\n                dayIndex++;\n            }\n            workDays.push(dayIndex);\n        }\n        return workDays;\n    }\n\n    var MultiDayView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            SchedulerView.fn.init.call(that, element, options);\n\n            that.title = that.options.title || that.options.name;\n\n            that._workDays = getWorkDays(that.options);\n\n            that._templates();\n\n            that._editable();\n\n            that.calculateDateRange();\n\n            that._groups();\n\n            that._currentTime(true);\n        },\n\n        _currentTimeMarkerUpdater: function() {\n            this._updateCurrentTimeMarker(new Date());\n        },\n\n        _updateCurrentTimeMarker: function(currentTime) {\n            var options = this.options,\n                currentTimeMarkers, currentContentMarkers, timesTableMarkerWidth, position,\n                elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n\n            if (options.currentTimeMarker.useLocalTimezone === false) {\n                var timezone = options.dataSource.options.schema.timezone;\n\n                if (options.dataSource && timezone) {\n                   var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                   currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                }\n            }\n\n            currentTimeMarkers = this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n            currentContentMarkers = this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n\n            var groupsCount = !options.group || options.group.orientation == \"horizontal\" ? 1 : this.groups.length;\n            var firstTimesCell = this.times.find(\"tr\").first().find(\"th\").first();\n            var lastTimesCell = this.times.find(\"tr\").first().find(\"th\").last();\n\n            if (firstTimesCell.length > 0 && lastTimesCell.length > 0) {\n                if (this._isRtl) {\n                    position = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                } else {\n                    position = lastTimesCell.position().left;\n                }\n            }\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var currentGroup = this.groups[groupIndex];\n\n                if (!currentGroup) {\n                    return;\n                }\n\n                var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                if (ranges.length === 0) {\n                    return;\n                }\n\n                var collection = ranges[0].collection;\n                var slotElement = collection.slotByStartDate(currentTime);\n\n                if (slotElement) {\n                    var timesTableMarker = currentTimeMarkers[groupIndex] ? currentTimeMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.times);\n                    var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n\n                    var timesTableMarkerCss = {};\n\n                    if (this._isRtl) {\n                        timesTableMarkerCss.right = position;\n                        timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n                    } else {\n                        timesTableMarkerCss.left = position;\n                        timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n                    }\n\n                    if (!timesTableMarkerWidth) {\n                        timesTableMarkerWidth = (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n                    }\n\n                    timesTableMarkerCss.top = markerTopPosition - timesTableMarkerWidth;\n\n                    timesTableMarker.css(timesTableMarkerCss);\n\n                    var contentMarker = currentContentMarkers[groupIndex] ? currentContentMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.content);\n\n                    contentMarker.css({\n                        top: markerTopPosition,\n                        height: \"1px\",\n                        right: 0,\n                        left: 0\n                    });\n                }\n            }\n        },\n\n        _currentTime: function(setUpdateTimer) {\n            var that = this;\n            var markerOptions = that.options.currentTimeMarker;\n\n            if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                that._currentTimeMarkerUpdater();\n\n                if (setUpdateTimer) {\n                    that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                }\n            }\n        },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            var multiday;\n\n            if (this.options.enforceAllDaySlot) {\n                multiday = event.isMultiDay();\n            } else {\n                multiday = event.isAllDay;\n            }\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n            var width, height, top, hint;\n\n            this._removeResizeHint();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var start = range.startSlot();\n\n                if (this._isGroupedByDate() && multiday) {\n                    for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n                        width = slot.offsetWidth;\n                        height = slot.clientHeight;\n                        top = slot.offsetTop;\n\n                        hint = SchedulerView.fn._createResizeHint.call(this,\n                            slot.offsetLeft,\n                            top,\n                            width,\n                            height\n                        );\n\n                        this._resizeHint = this._resizeHint.add(hint);\n                    }\n                } else {\n                    width = start.offsetWidth;\n                    height = start.clientHeight;\n                    top = start.offsetTop;\n\n                    if (multiday) {\n                        width = range.innerWidth();\n                    } else {\n                        var rect = range.outerRect(startTime, endTime, this.options.snap);\n                        top = rect.top;\n                        height = rect.bottom - rect.top;\n                    }\n\n                    hint = SchedulerView.fn._createResizeHint.call(this,\n                        start.offsetLeft,\n                        top,\n                        width,\n                        height\n                    );\n\n                   this._resizeHint = this._resizeHint.add(hint);\n                }\n            }\n\n            var format = \"t\";\n            var container = this.content;\n\n            if (multiday) {\n                format = \"M/dd\";\n                container = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                if (!container.length) {\n                    container = this.content;\n                }\n            }\n\n            this._resizeHint.appendTo(container);\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var multiday;\n\n            if (this.options.enforceAllDaySlot) {\n                multiday = event.isMultiDay();\n            } else {\n                multiday = event.isAllDay;\n            }\n\n            var group = this.groups[groupIndex];\n\n            var start = kendo.date.toUtcTime(event.start) + distance;\n\n            var end = start + event.duration();\n\n            var ranges = group.ranges(start, end, multiday, event.isAllDay);\n\n            start = kendo.timezone.toLocalDate(start);\n\n            end = kendo.timezone.toLocalDate(end);\n\n            this._removeMoveHint(event.uid);\n\n            if (!multiday &&\n                getMilliseconds(end) < getMilliseconds(this.startTime()) &&\n                (end < this._end().getTime()) &&\n                getMilliseconds(end) !== 0 &&\n                ranges.length > 1) {\n                    ranges.pop();\n            }\n\n            var eventHint = $();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var startSlot = range.start;\n                var hint;\n                var css = {\n                    left: startSlot.offsetLeft + 2,\n                    top: startSlot.offsetTop\n                };\n\n                if (this._isGroupedByDate() && multiday) {\n                    for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n\n                        css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                        css.height = slot.offsetHeight;\n                        css.width = slot.clientWidth * 0.9 - 2;\n\n                        hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                        if (event.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                } else {\n                    if (this._isRtl) {\n                       css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                    }\n\n                    if (multiday) {\n                        css.width = range.innerWidth() - 2;\n                    } else {\n                        var rect = range.outerRect(start, end, this.options.snap);\n                        css.top = rect.top;\n                        css.height = rect.bottom - rect.top;\n                        css.width = startSlot.clientWidth * 0.9 - 2;\n                    }\n\n                    hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                    if (event.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    this._appendMoveHint(hint, css);\n                    eventHint = eventHint.add(hint);\n                }\n            }\n\n            var content = this.content;\n\n            if (multiday) {\n                content = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                if (!content.length) {\n                    content = this.content;\n                }\n            }\n\n            eventHint.appendTo(content);\n        },\n\n        _appendMoveHint: function(hint, css) {\n            hint.addClass(\"k-event-drag-hint\");\n\n            hint.css(css);\n\n            this._moveHint = this._moveHint.add(hint);\n       },\n\n       _slotByPosition: function(x, y) {\n           var slot, offset;\n\n           if (this._isVerticallyGrouped()) {\n               offset = this.content.offset();\n               y += this.content[0].scrollTop;\n               x += this.content[0].scrollLeft;\n           } else {\n               offset = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day)\").find(\">div\").offset();\n           }\n\n           if (offset) {\n               x -= offset.left;\n               y -= offset.top;\n           }\n\n           x = Math.ceil(x);\n           y = Math.ceil(y);\n\n           var group;\n           var groupIndex;\n\n           for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                group = this.groups[groupIndex];\n\n                slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n\n                if (slot) {\n                    return slot;\n                }\n           }\n\n           if (offset) {\n               x += offset.left;\n               y += offset.top;\n           }\n\n           offset = this.content.offset();\n\n           x -= offset.left;\n           y -= offset.top;\n\n           if (!this._isVerticallyGrouped()) {\n               y += this.content[0].scrollTop;\n               x += this.content[0].scrollLeft;\n           }\n\n           x = Math.ceil(x);\n           y = Math.ceil(y);\n\n           for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                group = this.groups[groupIndex];\n\n                slot = group.timeSlotByPosition(x, y);\n\n                if (slot) {\n                    return slot;\n                }\n           }\n\n           return null;\n       },\n\n       _groupCount: function() {\n            var resources = this.groupedResources;\n            var byDate = this._isGroupedByDate();\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    if (byDate) {\n                        return this._columnCountForLevel(resources.length - 1);\n                    } else {\n                        return this._rowCountForLevel(resources.length - 1);\n                    }\n                } else {\n                    if (byDate) {\n                        return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                    } else {\n                          return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                    }\n                }\n            }\n            return 1;\n        },\n\n        _columnCountInResourceView: function() {\n            var resources = this.groupedResources;\n            var byDate = this._isGroupedByDate();\n\n            if (!resources.length || this._isVerticallyGrouped()) {\n                if (byDate) {\n                     return this._rowCountForLevel(0);\n                } else {\n                     return this._columnCountForLevel(0);\n                }\n            }\n\n            if (byDate) {\n                return this._columnCountForLevel(0);\n            } else {\n                return this._columnOffsetForResource(resources.length);\n            }\n        },\n\n        _timeSlotGroups: function(groupCount, columnCount) {\n            var interval = this._timeSlotInterval();\n            var verticalViews = groupCount;\n            var byDate = this._isGroupedByDate();\n            var tableRows = this.content.find(\"tr:not(.k-scheduler-header-all-day)\");\n            var group, time, rowIndex, cellIndex;\n            var rowCount = tableRows.length;\n\n            if (this._isVerticallyGrouped()) {\n                if (byDate) {\n                    verticalViews = columnCount;\n                }\n                rowCount = Math.floor(rowCount / verticalViews);\n            }\n\n            for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                var rowMultiplier = 0;\n                var cellMultiplier = 0;\n\n                if (this._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                } else {\n                    cellMultiplier = groupIndex;\n                }\n\n                rowIndex = rowMultiplier * rowCount;\n\n              while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                    var cells = tableRows[rowIndex].children;\n\n                    if (rowIndex % rowCount === 0) {\n                        time = getMilliseconds(new Date(+this.startTime()));\n                    }\n\n                    var timeIndex = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                timeIndex++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                            this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                             timeIndex++;\n                        }\n                    }\n\n                    time += interval;\n                    rowIndex ++;\n                }\n            }\n        },\n\n        _addTimeSlotGroup: function(group, cells, cellIndex, time, interval, timeIndex) {\n              var cell = cells[cellIndex];\n              var collection = group.getTimeSlotCollection(timeIndex);\n              var currentDate = this._dates[timeIndex];\n              if (!currentDate || !cell) {\n                  return;\n              }\n              var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n              var start = currentTime + time;\n              var end = start + interval;\n\n              collection.addTimeSlot(cell, start, end);\n        },\n\n         _addDaySlotGroup: function(collection, cells, cellIndex, columnCount, cellCount) {\n                var cell = cells[cellIndex];\n                var start = this._dates[cellCount];\n                if (!start) {\n                    return;\n                }\n                var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n\n                collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n        },\n\n        _daySlotGroups: function(groupCount, columnCount) {\n            var tableRows, cellIndex;\n            var verticalViews = groupCount;\n            var byDate = this._isGroupedByDate();\n\n            if (this._isVerticallyGrouped()) {\n                if (byDate) {\n                    verticalViews = columnCount;\n                }\n                tableRows = this.element.find(\".k-scheduler-header-all-day\");\n            } else {\n                tableRows = this.element.find(\".k-scheduler-header-all-day tr\");\n            }\n\n            for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                var rowMultiplier = 0;\n                var group, collection;\n\n                if (this._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                }\n\n                var cells = tableRows[rowMultiplier].children;\n                var cellMultiplier = 0;\n\n                if (!this._isVerticallyGrouped()) {\n                    cellMultiplier = groupIndex;\n                }\n\n                var cellCount = 0;\n                if (byDate) {\n                    if (this._isVerticallyGrouped()) {\n                        for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                            group = this.groups[cellIndex];\n                            collection = group.getDaySlotCollection(0);\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                } else {\n                    group = this.groups[groupIndex];\n                    collection = group.getDaySlotCollection(0);\n                    for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                        this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                        cellCount++;\n                    }\n                }\n            }\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var columnCount = this._columnCountInResourceView();\n\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                var view = this._addResourceView(idx);\n\n                for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                    if (this._dates[columnIndex]) {\n                        view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                    }\n                }\n\n                if (this.options.allDaySlot) {\n                    view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                }\n            }\n\n            this._timeSlotGroups(groupCount, columnCount);\n\n            if (this.options.allDaySlot) {\n                this._daySlotGroups(groupCount, columnCount);\n            }\n        },\n\n        options: {\n            name: \"MultiDayView\",\n            selectedDateFormat: \"{0:D}\",\n            selectedShortDateFormat: \"{0:d}\",\n            selectedMobileDateFormat: \"{0:MMM} {0:dd} - {1:dd}\",\n            allDaySlot: true,\n            showWorkHours: false,\n            title: \"\",\n            startTime: kendo.date.today(),\n            endTime: kendo.date.today(),\n            minorTickCount: 2,\n            majorTick: 60,\n            majorTimeHeaderTemplate: \"<span>#=kendo.toString(date, 't')#</span>\",\n            minorTimeHeaderTemplate: \"&\\\\#8203;\",\n            groupHeaderTemplate: \"#=text#\",\n            slotTemplate: \"&nbsp;\",\n            allDaySlotTemplate: \"&nbsp;\",\n            eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n            allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n            dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n            editable: true,\n            workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n            workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n            workWeekStart: 1,\n            workWeekEnd: 5,\n            footer: {\n                command: \"workDay\"\n            },\n            messages: {\n                allDay: \"all day\",\n                showFullDay: \"Show full day\",\n                showWorkDay: \"Show business hours\"\n            },\n            currentTimeMarker: {\n                 updateInterval: 10000,\n                 useLocalTimezone: true\n            },\n            // a hidden option that provides us a fallback to the previous behaviour\n            // e.g. all events of 24 hours or more will be rendered in the allDaySlot\n            enforceAllDaySlot: false\n        },\n\n        events: [\"remove\", \"add\", \"edit\"],\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n            this.allDayEventTemplate = this._eventTmpl(options.allDayEventTemplate, ALLDAY_EVENT_WRAPPER_STRING);\n\n            this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n            this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n            this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n            this.slotTemplate = kendo.template(options.slotTemplate, settings);\n            this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-event a:has(.k-i-close)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-content > table td\", function(e) {\n                    if (!$(this).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                }).on(\"dblclick\" + NS, \".k-scheduler-header-all-day td\", function(e) {\n                    var slot = that._slotByPosition(e.pageX, e.pageY);\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                    }\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    filter: \".k-scheduler-content td\",\n                    useClickAsTap: !kendo.support.browser.edge,\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        if (!$(e.target).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                            var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                            var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    }\n                });\n\n                that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-header-all-day td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                        var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                        var slot = that._slotByPosition(x, y);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that._editUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-event\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var eventElement = $(e.target).closest(\".k-event\");\n                        var touchElement = $(e.touch.initialTouch);\n\n                        if (touchElement.hasClass(\"k-i-close\")) {\n                            that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        } else if (!eventElement.hasClass(\"k-event-active\")) {\n                            that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        _layout: function(dates) {\n            var columns = [];\n            var rows = [];\n            var options = this.options;\n            var that = this;\n            var byDate = that._isGroupedByDate();\n\n            for (var idx = 0; idx < dates.length; idx++) {\n                var column = {};\n\n                column.text = that.dateHeaderTemplate({ date: dates[idx], isMobile: that._isMobile() });\n\n                if (kendo.date.isToday(dates[idx])) {\n                    column.className = \"k-today\";\n                }\n\n                columns.push(column);\n            }\n\n            var resources = this.groupedResources;\n\n            if (options.allDaySlot) {\n                rows.push({\n                    text: options.messages.allDay, allDay: true,\n                    cellContent: function(idx) {\n                        var groupIndex = idx;\n\n                        idx = resources.length && that._groupOrientation() !== \"vertical\" ? idx % dates.length : idx;\n\n                        return that.allDaySlotTemplate({ date: dates[idx], resources: function() {\n                                return that._resourceBySlot({ groupIndex: groupIndex });\n                            }\n                        });\n                    }\n                });\n            }\n\n            this._forTimeRange(this.startTime(), this.endTime(), function(date, majorTick, middleRow, lastSlotRow) {\n                var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n\n                var row = {\n                    text: template({ date: date }),\n                    className: lastSlotRow ? \"k-slot-cell\" : \"\"\n                };\n\n                rows.push(row);\n            });\n\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    if (byDate) {\n                        rows = this._createDateLayout(columns, rows);\n                        columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                    } else {\n                        rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                    }\n                } else {\n                      if (byDate) {\n                         columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                      } else {\n                         columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                      }\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        toggleFullDay: function() {\n            var options = this.options;\n\n            this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n        },\n\n        _footer: function() {\n            var options = this.options;\n\n            if (options.footer !== false) {\n                var html = '<div class=\"k-scheduler-footer k-toolbar\" role=\"toolbar\">';\n\n                var command = options.footer.command;\n\n                if (this._isMobile()) {\n                    html += '<span class=\"k-scheduler-today\"><a href=\"#\" tabindex=\"-1\" class=\"k-link\">';\n                    html += options.messages.today + '</a></span>';\n                }\n                if (command && command === \"workDay\") {\n                    if (this._isMobile()) {\n                        html += '<span class=\"k-scheduler-fullday\"><a href=\"#\" tabindex=\"-1\" class=\"k-link\">';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></span>';\n                    } else {\n                        html += '<button type=\"button\" tabindex=\"-1\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-scheduler-fullday\">';\n                            html += '<span class=\"k-button-icon k-icon k-i-clock\"></span>';\n                            html += '<span class=\"k-button-text\">';\n                                html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay);\n                            html += '</span>';\n                        html += '</button>';\n                    }\n                }\n\n                html += \"</div>\";\n\n                this.footer = $(html).appendTo(this.element);\n\n                var that = this;\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-fullday\", function(e) {\n                    e.preventDefault();\n                    that.toggleFullDay();\n                });\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-today\", function(e) {\n                    e.preventDefault();\n                    var timezone = that.options.timezone;\n                    var action = \"today\";\n                    var currentDate = new Date();\n                    var date;\n\n                    if (timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                        date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                    } else {\n                        date = currentDate;\n                    }\n\n                    that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n                });\n            }\n        },\n\n        _forTimeRange: function(min, max, action, after) {\n            min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n            max = toInvariantTime(max);\n\n            var that = this,\n                msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                minorTickCount = that.options.minorTickCount,\n                msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                start = new Date(+min),\n                startDay = start.getDate(),\n                msStart,\n                idx = 0, length,\n                html = \"\";\n\n            length = MS_PER_DAY / msInterval;\n\n            if (msMin != msMax) {\n                if (msMin > msMax) {\n                    msMax += MS_PER_DAY;\n                }\n\n                length = ((msMax - msMin) / msInterval);\n            }\n\n            length = Math.round(length);\n\n            for (; idx < length; idx++) {\n                var majorTickDivider = idx % (msMajorInterval / msInterval),\n                    isMajorTickRow = majorTickDivider === 0,\n                    isMiddleRow = majorTickDivider < minorTickCount - 1,\n                    isLastSlotRow = majorTickDivider === minorTickCount - 1;\n\n                html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n\n                setTime(start, msInterval, false);\n            }\n\n            if (msMax) {\n                msStart = getMilliseconds(start);\n                if (startDay < start.getDate()) {\n                    msStart += MS_PER_DAY;\n                }\n\n                if (msStart > msMax) {\n                    start = new Date(+max);\n                }\n            }\n\n            if (after) {\n                html += after(start);\n            }\n\n            return html;\n        },\n\n        _content: function(dates) {\n            var that = this;\n            var html = '';\n\n            html += '<tbody>';\n\n            html += that._renderRows(dates, that.rowLevels, that.columnLevels);\n\n            html += '</tbody>';\n\n            this.content.find(\"table\").append(html);\n        },\n\n        _virtualContent: function(rowLevels, columnLevels) {\n            var that = this;\n            var html = '';\n            var dates = that._dates;\n\n            html += that._renderRows(dates, rowLevels, columnLevels);\n\n            that.content.find(\"table tbody\").append(html);\n        },\n\n        _renderRows: function(dates, rowLevels, columnLevels) {\n            var that = this;\n            var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n            var byDate = that._isGroupedByDate();\n            var dateID = 0;\n            var columnCount = dates.length;\n            var options = that.options;\n            var start = that.startTime();\n            var end = this.endTime();\n            var groupsCount = 1;\n            var rowCount = 1;\n            var resources = this.groupedResources;\n            var html = '';\n\n            if (resources.length) {\n                var levels = that._recalculateLevels(rowLevels, columnLevels);\n\n                rowCount = levels.rowCount;\n                groupsCount = levels.groupsCount;\n            }\n\n            var appendRow = function(date, majorTick, middleRow) {\n                var content = \"\";\n                var groupIdx = 0;\n                var idx, length;\n\n                content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : \"\") + '>';\n\n                if (byDate) {\n                    for (idx = 0, length = columnCount; idx < length; idx++) {\n                        for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                            var dateIndex = idx;\n                            if (isVerticalGroupped) {\n                                dateIndex = dateID;\n                            }\n                            content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n\n                        }\n                        if (isVerticalGroupped) {\n\n                            break;\n                        }\n                    }\n                } else {\n                     for (; groupIdx < groupsCount; groupIdx++) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                        }\n                     }\n                }\n\n                content += \"</tr>\";\n\n                return content;\n            };\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += options.allDaySlot && isVerticalGroupped ? this._allDayVerticalGroupRow(dates, rowIdx, groupsCount, dateID) : \"\";\n\n                html += this._forTimeRange(start, end, appendRow);\n                if (isVerticalGroupped) {\n                        dateID++;\n                }\n            }\n\n            return html;\n        },\n\n        _recalculateLevels: function(rowLevels, columnLevels) {\n            var that = this;\n            var byDate = that._isGroupedByDate();\n            var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n            var groupsCount = 1;\n            var rowCount = 1;\n\n            if (isVerticalGroupped) {\n                rowCount = that._rowCountForLevel(rowLevels.length - 2, rowLevels);\n\n                if (byDate) {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 1);\n                }\n            } else {\n                if (byDate) {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 1) / this._columnCountForLevel(0);\n                } else {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 2);\n                }\n            }\n\n            return {\n                rowCount: rowCount,\n                groupsCount: groupsCount\n            };\n        },\n\n        _allDayVerticalGroupRow: function(dates, groupIndex, groupsCount, dateID) {\n            var that = this;\n            var result = '<tr class=\"k-scheduler-header-all-day\">';\n            var byDate = that._isGroupedByDate();\n            var dateGroupIndex = byDate ? 0 : groupIndex;\n            var allDaySlotTemplate = that.allDaySlotTemplate;\n\n            var resources = function() {\n                return that._resourceBySlot({ groupIndex: dateGroupIndex });\n            };\n\n            if (byDate) {\n                for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                    result += \"<td>\" + allDaySlotTemplate({ date: dates[dateID], resources: resources }) + \"</td>\";\n                }\n            } else {\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result += \"<td>\" + allDaySlotTemplate({ date: dates[idx], resources: resources }) + \"</td>\";\n                }\n            }\n\n            return result + \"</tr>\";\n        },\n\n        _addCellsToContent: function(content, dates, date, idx, groupIdx, rowIdx) {\n            var that = this;\n            var classes = \"\";\n            var tmplDate;\n            var slotTemplate = this.slotTemplate;\n            var isVerticalGroupped = this._groupOrientation() === \"vertical\";\n            var resources = function(groupIndex) {\n                return function() {\n                    return that._resourceBySlot({ groupIndex: groupIndex });\n                };\n            };\n\n            if (kendo.date.isToday(dates[idx])) {\n                classes += \"k-today\";\n            }\n\n            if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) ||\n                kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) ||\n                !this._isWorkDay(dates[idx])) {\n                classes += \" k-nonwork-hour\";\n            }\n\n            content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n            tmplDate = kendo.date.getDate(dates[idx]);\n            kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n            content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx) });\n            content += \"</td>\";\n            return content;\n        },\n\n        _isWorkDay: function(date) {\n            var day = date.getDay();\n            var workDays = this._workDays;\n\n            for (var i = 0; i < workDays.length; i++) {\n                if (workDays[i] === day) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _render: function(dates) {\n            var that = this;\n\n            dates = dates || [];\n\n            this._dates = dates;\n\n            this._startDate = dates[0];\n\n            this._endDate = dates[(dates.length - 1) || 0];\n\n            this.createLayout(this._layout(dates));\n\n            this._content(dates);\n\n            this._footer();\n\n            this.refreshLayout();\n\n            if (this._isVirtualized()) {\n                this._tryRenderContent();\n            }\n\n            var allDayHeader = this.element.find(\".k-scheduler-header-all-day td\");\n\n            if (allDayHeader.length) {\n                this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n            }\n\n            that.element.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                var th = $(e.currentTarget).closest(\"th\");\n                var offset = th.offset();\n                var additioanlWidth = 0;\n                var additionalHeight = outerHeight(th);\n\n                if (that._isGroupedByDate()) {\n                    if (that._isVerticallyGrouped()) {\n                        additioanlWidth = outerWidth(that.times);\n                        additionalHeight = 0;\n                    } else {\n                        additionalHeight = outerHeight(that.datesHeader);\n                    }\n                }\n\n                var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n\n                that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n            });\n        },\n\n        startTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayStart : options.startTime;\n        },\n\n        endTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayEnd : options.endTime;\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        _end: function(isAllDay) {\n            var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n\n            if (isAllDay) {\n                time = 0;\n            }\n\n            return new Date(this._endDate.getTime() + time);\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this.endDate());\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this.startDate());\n        },\n\n        calculateDateRange: function() {\n            this._render([this.options.date]);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._currentTimeUpdateTimer) {\n                clearInterval(that._currentTimeUpdateTimer);\n            }\n\n            if (that.datesHeader) {\n                that.datesHeader.off(NS);\n            }\n\n            if (that.element) {\n                that.element.off(NS);\n            }\n\n            if (that.footer) {\n                that.footer.remove();\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && that.options.editable) {\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents.destroy();\n                    that._allDayUserEvents.destroy();\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents.destroy();\n                }\n            }\n        },\n\n        inRange: function(options) {\n            var inRange = SchedulerView.fn.inRange.call(this, options);\n\n            if (options.isAllDay) {\n                return inRange;\n            }\n\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n\n            var start = getMilliseconds(options.start);\n            var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n\n            return inRange && startTime <= start && end <= endTime;\n        },\n\n        selectionByElement: function(cell) {\n            var offset = cell.offset();\n            // The magical number 5 is to buffer properly the height of the cell for all browsers\n            var height = Math.round(cell.innerHeight()) - 5;\n\n            return this._slotByPosition(offset.left, offset.top + height);\n        },\n\n        _timeSlotInterval: function() {\n            var options = this.options;\n            return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n        },\n\n        _timeSlotIndex: function(date) {\n            var options = this.options;\n            var eventStartTime = getMilliseconds(date);\n            var startTime = getMilliseconds(this.startTime());\n            var timeSlotInterval = ((options.majorTick / options.minorTickCount) * MS_PER_MINUTE);\n\n            return (eventStartTime - startTime) / (timeSlotInterval);\n        },\n\n        _slotIndex: function(date, multiday) {\n            if (multiday) {\n                return this._dateSlotIndex(date);\n            }\n\n            return this._timeSlotIndex(date);\n        },\n\n        _dateSlotIndex: function(date, overlaps) {\n            var idx;\n            var length;\n            var slots = this._dates || [];\n            var slotStart;\n            var slotEnd;\n            var offset = 1;\n\n            for (idx = 0, length = slots.length; idx < length; idx++) {\n                slotStart = kendo.date.getDate(slots[idx]);\n                slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n\n                if (isInDateRange(date, slotStart, slotEnd)) {\n                    return idx * offset;\n                }\n            }\n            return -1;\n        },\n\n        _positionAllDayEvent: function(element, slotRange) {\n            var slotWidth = slotRange.innerWidth();\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n\n            var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n            var currentColumnCount = this._headerColumnCount || 0;\n\n            var leftOffset = 2;\n\n            var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n            var eventHeight = this._allDayHeaderHeight;\n\n            var start = slotRange.startSlot();\n\n            element\n                .css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n\n            slotRange.addEvent({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n            allDayEvents.push({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n            var rows = SchedulerView.createRows(allDayEvents);\n\n            if (rows.length && rows.length > currentColumnCount) {\n                this._headerColumnCount = rows.length;\n            }\n\n            var top = slotRange.start.offsetTop;\n\n            for (var idx = 0, length = rows.length; idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    $(rowEvents[j].element).css({\n                        top: top + idx * eventHeight,\n                        // apply calculated height.\n                        // -2 is to match normal events\n                        height: eventHeight - 2\n                    });\n                }\n            }\n        },\n\n        _arrangeColumns: function(element, top, height, slotRange) {\n            var startSlot = slotRange.start;\n\n            element = { element: element, slotIndex: startSlot.index, start: top, end: top + height };\n\n            var columns,\n                slotWidth = startSlot.clientWidth,\n                eventRightOffset = slotWidth * 0.10,\n                columnEvents,\n                eventElements = slotRange.events(),\n                slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end),\n                tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                contentEl = this.table.find(\".k-scheduler-content\")[0];\n\n            slotRange.addEvent(element);\n\n            slotEvents.push(element);\n\n            columns = SchedulerView.createColumns(slotEvents);\n\n            var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n\n            for (var idx = 0, length = columns.length; idx < length; idx++) {\n                columnEvents = columns[idx].events;\n\n                for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                    var calculatedWidth = columnWidth - 2;\n                    columnEvents[j].element[0].style.width = (calculatedWidth > 0 ? calculatedWidth : columnWidth) + \"px\";\n\n                    if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                        // RTL mobile rendering with horizontal scroll\n                        columnEvents[j].element[0].style.left = eventRightOffset +\n                            startSlot.offsetLeft +\n                            idx * columnWidth -\n                            (tableEl.clientWidth - contentEl.clientWidth) +\n                            \"px\";\n                    } else {\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + \"px\";\n                    }\n                }\n            }\n        },\n\n        _positionEvent: function(event, element, slotRange) {\n            var start = event._startTime || event.start;\n            var end = event._endTime || event.end;\n            var borderWidths = kendo.getComputedStyles(slotRange.start.element, [\"border-top-width\", \"border-bottom-width\"]);\n\n            var rect = slotRange.innerRect(start, end, false);\n\n            var height = rect.bottom - rect.top -\n                            parseFloat(borderWidths[\"border-top-width\"]) -\n                            parseFloat(borderWidths[\"border-bottom-width\"]);\n\n            if (height < 0) {\n                height = 0;\n            }\n\n            element.css( {\n                top: rect.top,\n                height: height\n            } );\n\n            this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n       },\n\n       _createEventElement: function(event, isOneDayEvent, head, tail) {\n            var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n            var options = this.options;\n            var editable = options.editable;\n            var isMobile = this._isMobile();\n            var showDelete = editable && editable.destroy !== false && !isMobile;\n            var resizable = editable && editable.resize !== false;\n            var startDate = getDate(this.startDate());\n            var endDate = getDate(this.endDate());\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var middle;\n\n            if (startTime >= endTime) {\n                endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n            }\n\n            if (!isOneDayEvent && !event.isAllDay) {\n                endDate = new Date(endDate.getTime() + MS_PER_DAY);\n            }\n\n            var eventStartDate = event.start;\n            var eventEndDate = event.end;\n\n            if (event.isAllDay) {\n                eventEndDate = getDate(event.end);\n            }\n            if ((!isInDateRange(getDate(eventStartDate), startDate, endDate) &&\n                !isInDateRange(eventEndDate, startDate, endDate)) ||\n                (isOneDayEvent &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventStartTime < startTime || eventStartTime >= endTime) &&\n                    (eventEndTime > endTime || eventEndTime <= startTime ))) {\n\n                middle = true;\n            } else if (getDate(eventStartDate) < startDate ||\n                (isOneDayEvent &&\n                    eventStartTime !== 0 &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventStartTime < startTime || eventStartTime >= endTime))) {\n\n                tail = true;\n            } else if ((eventEndDate > endDate && !isOneDayEvent) ||\n                (isOneDayEvent &&\n                    eventEndTime !== 0 &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventEndTime > endTime || eventEndTime <= startTime))) {\n\n                head = true;\n            }\n\n            var resources = this.eventResources(event);\n\n           if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                eventStartDate = new Date(eventStartTime);\n                eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n            }\n\n           if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                eventEndDate = new Date(eventEndTime);\n                eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n            }\n\n            var data = extend({}, {\n                ns: kendo.ns,\n                resizable: resizable,\n                showDelete: showDelete,\n                middle: middle,\n                head: head,\n                tail: tail,\n                singleDay: this._dates.length == 1,\n                resources: resources,\n                inverseColor: false,\n                messages: options.messages,\n                ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay)\n            }, event, {\n                start: eventStartDate,\n                end: eventEndDate\n            });\n\n            var element = $(template(data));\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: data } ]\n                };\n            });\n\n            return element;\n        },\n\n        _isInTimeSlot: function(event) {\n            var slotStartTime = this.startTime(),\n                slotEndTime = this.endTime(),\n                startTime = event._startTime || event.start,\n                endTime = event._endTime || event.end;\n\n            if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                slotEndTime = kendo.date.getDate(slotEndTime);\n                setTime(slotEndTime, MS_PER_DAY - 1);\n            }\n\n            if (event._date(\"end\") > event._date(\"start\")) {\n               endTime = +event._date(\"end\") + (MS_PER_DAY - 1);\n            }\n\n            endTime = event._endTime ? endTime - event._date(\"end\") : getMilliseconds(new Date(endTime));\n            startTime = event._startTime ? startTime - event._date(\"start\") : getMilliseconds(new Date(startTime));\n\n            slotEndTime = getMilliseconds(slotEndTime);\n            slotStartTime = getMilliseconds(slotStartTime);\n\n            if (slotStartTime === startTime && startTime === endTime) {\n                return true;\n            }\n\n            var overlaps = startTime !== slotEndTime;\n\n            return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) ||\n                isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) ||\n                isInTimeRange(slotStartTime, startTime, endTime) ||\n                isInTimeRange(slotEndTime, startTime, endTime) ||\n                (event.end.getDate() > event.start.getDate() && endTime > slotStartTime);\n        },\n\n        _isInDateSlot: function(event) {\n            var groups = this.groups[0];\n            var slotStart = groups.firstSlot().start;\n            var slotEnd = groups.lastSlot().end - 1;\n\n            var startTime = kendo.date.toUtcTime(event.start);\n            var endTime = kendo.date.toUtcTime(event.end);\n\n            return (isInDateRange(startTime, slotStart, slotEnd) ||\n                isInDateRange(endTime, slotStart, slotEnd) ||\n                isInDateRange(slotStart, startTime, endTime) ||\n                isInDateRange(slotEnd, startTime, endTime)) &&\n                (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n        },\n\n        _updateAllDayHeaderHeight: function(height) {\n            if (this._height !== height) {\n                this._height = height;\n\n                var allDaySlots = this.element.find(\".k-scheduler-header-all-day td\");\n\n                if (allDaySlots.length) {\n                    allDaySlots.parent()\n                        .add(this.element.find(\".k-scheduler-times-all-day\").parent())\n                        .height(height);\n\n                    for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                        this.groups[groupIndex].refresh();\n                    }\n                }\n            }\n        },\n\n        _renderEvents: function(events, groupIndex) {\n            var allDayEventContainer = this.datesHeader.find(\".k-scheduler-header-wrap > div\");\n            var byDate = this._isGroupedByDate();\n            var event;\n\n            var idx;\n            var length;\n\n            for (idx = 0, length = events.length; idx < length; idx++) {\n                event = events[idx];\n\n                if (this._isInDateSlot(event)) {\n                    var isMultiDayEvent, container, element, ranges, range, start, end, group;\n\n                    if (this.options.enforceAllDaySlot) {\n                        isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                    } else {\n                        isMultiDayEvent = event.isAllDay;\n                    }\n\n                    container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n\n                    if (!isMultiDayEvent) {\n                        if (this._isInTimeSlot(event)) {\n                            group = this.groups[groupIndex];\n\n                            if (!group) {\n                                continue;\n                            }\n\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n\n                            ranges = group.slotRanges(event);\n\n                            var rangeCount = ranges.length;\n\n                            for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                range = ranges[rangeIndex];\n                                start = event.start;\n                                end = event.end;\n\n                                if (rangeCount > 1) {\n                                    if (rangeIndex === 0) {\n                                        end = range.end.endDate();\n                                    } else if (rangeIndex == rangeCount - 1) {\n                                        start = range.start.startDate();\n                                    } else {\n                                        start = range.start.startDate();\n                                        end = range.end.endDate();\n                                    }\n                                }\n\n                                var occurrence = event.clone({ start: start, end: end, _startTime: event._startTime, _endTime: event.endTime });\n\n                                if (this._isInTimeSlot(occurrence)) {\n                                    var head = range.head;\n\n                                    element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n\n                                    this._positionEvent(occurrence, element, range);\n\n                                    addContinuousEvent(group, range, element, false);\n                                }\n                            }\n                        }\n\n                    } else if (this.options.allDaySlot) {\n                        group = this.groups[groupIndex];\n\n                        if (!group) {\n                            continue;\n                        }\n\n                        if (!group._continuousEvents) {\n                            group._continuousEvents = [];\n                        }\n\n                        ranges = group.slotRanges(event);\n\n                        if (ranges.length) {\n                            range = ranges[0];\n                            var startIndex = range.start.index;\n                            var endIndex = range.end.index;\n\n                            if (byDate && startIndex !== endIndex) {\n                                start = range.start.start;\n                                end = range.end.end;\n                                var newStart = start;\n                                var newEnd = start;\n\n                                for (var i = range.start.index; i <= range.end.index; i++) {\n                                    element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n\n                                    var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                    newStart = newEnd += kendo.date.MS_PER_DAY;\n\n                                    this._positionAllDayEvent(element, dateRange);\n\n                                    addContinuousEvent(group, dateRange, element, true);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n                                }\n                            } else {\n                                element = this._createEventElement(event, !isMultiDayEvent);\n\n                                this._positionAllDayEvent(element, ranges[0]);\n\n                                addContinuousEvent(group, ranges[0], element, true);\n\n                                element.appendTo(container);\n\n                                this._inverseEventColor(element);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n\n        render: function(events) {\n            var that = this;\n\n            this._headerColumnCount = 0;\n\n            this._cachedEvents = events;\n\n            this._groups();\n\n            this.element.find(\".k-event\").remove();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray();\n\n            var eventsByResource = [];\n\n            this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n            var eventsPerDate = $.map(this._dates, function(date) {\n                return Math.max.apply(null,\n                    $.map(eventsByResource, function(events) {\n                        return $.grep(events, function(event) {\n                            if (that.options.enforceAllDaySlot) {\n                                return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                            } else {\n                                return event.isAllDay && isInDateRange(date, getDate(event.start), getDate(event.end));\n                            }\n                        }).length;\n                    })\n                );\n            });\n\n            var height = Math.max.apply(null, eventsPerDate);\n\n            this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n\n            for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                this._renderEvents(eventsByResource[groupIndex], groupIndex);\n            }\n\n            this.refreshLayout();\n\n            this._currentTime(false);\n\n            this.trigger(\"activate\");\n        },\n\n        _eventsByResource: function(events, resources, result, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                    } else {\n                        result.push(eventsFilteredByResource);\n                    }\n                }\n            } else {\n                result.push(events);\n            }\n        },\n\n        _columnOffsetForResource: function(index) {\n            return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level, rowLevels) {\n            rowLevels = rowLevels || this.rowLevels;\n            var rowLevel = rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        clearSelection: function() {\n\n            this.content.add(this.datesHeader)\n                .find(\".k-selected\")\n                .removeAttr(\"id\")\n                .removeClass(\"k-selected\");\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n            var isDaySlot = selection.isAllDay;\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n\n            if (multiple) {\n                if (vertical) {\n                    if (!isDaySlot &&\n                        startSlot.index === endSlot.index &&\n                        startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                    }\n                } else {\n                    if ((isDaySlot && startSlot.index === endSlot.index) ||\n                        (!isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex)) {\n                            selection.backward = reverse;\n                    }\n                }\n            }\n        },\n\n        _changeViewPeriod: function(selection, reverse, vertical) {\n            if (!vertical) {\n                var date = reverse ? this.previousDate() : this.nextDate();\n                var start = selection.start;\n                var end = selection.end;\n                var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                var group = this.groups[selection.groupIndex];\n                var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                var slots = collection[collection.length - 1]._slots;\n                var slotIndex = (!reverse && !group.daySlotCollectionCount()) ? 0 : slots.length - 1;\n                var endMilliseconds;\n                var newDateStart, newDateEnd;\n\n                newDateStart = new Date(date);\n                newDateEnd = new Date(date);\n\n                if (this._isInRange(newDateStart, newDateEnd)) {\n                    return false;\n                }\n\n                selection.start = newDateStart;\n                selection.end = newDateEnd;\n\n                if (verticalByDate) {\n                    var newStart = new Date(slots[slotIndex].startDate());\n                    var newEnd = new Date(slots[slotIndex].endDate());\n                    endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n\n                        setTime(selection.start, getMilliseconds(newStart));\n                        setTime(selection.end, endMilliseconds);\n                        if (group.daySlotCollectionCount()) {\n                            selection.isAllDay = !selection.isAllDay;\n                        }\n                } else {\n                    endMilliseconds = (selection.isAllDay || !getMilliseconds(end)) ? MS_PER_DAY : getMilliseconds(end);\n\n                    setTime(selection.start, getMilliseconds(start));\n                    setTime(selection.end, endMilliseconds);\n                }\n\n                if (!this._isVerticallyGrouped()) {\n                    selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                }\n\n                selection.events = [];\n\n                return true;\n            }\n        }\n    });\n\n    extend(true, ui, {\n        MultiDayView: MultiDayView,\n        DayView: MultiDayView.extend({\n            options: {\n                name: \"DayView\",\n                title: \"Day\",\n                selectedMobileDateFormat: \"{0:MMM d}\"\n            },\n            name: \"day\"\n        }),\n        WeekView: MultiDayView.extend({\n            options: {\n                name: \"WeekView\",\n                title: \"Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\"\n            },\n            name: \"week\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = 7; idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        }),\n        WorkWeekView: MultiDayView.extend({\n            options: {\n                name: \"WorkWeekView\",\n                title: \"Work Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\"\n            },\n            name: \"workWeek\",\n            nextDate: function() {\n                var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                return kendo.date.addDays(weekStart, this._workDays[0]);\n            },\n            previousDate: function() {\n                var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                var workDays = this._workDays;\n\n                return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n            },\n            calculateDateRange: function() {\n                var options = this.options,\n                    selectedDate = options.date,\n                    dayOfWeek = kendo.date.dayOfWeek,\n                    weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                    end = dayOfWeek(start, options.workWeekEnd, 1),\n                    dates = [],\n                    workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                        return dayOfWeek(weekStart, day, 1).getTime();\n                    }) : null;\n\n                if (workDays) {\n                    start = weekStart;\n                    end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                }\n\n                while (start <= end) {\n                    if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                        dates.push(start);\n                    } else if (!workDays) {\n                        dates.push(start);\n                    }\n\n                    start = kendo.date.nextDay(start);\n                }\n\n                this._render(dates);\n            }\n        })\n    });\n\n})(window.kendo.jQuery);\n"]}