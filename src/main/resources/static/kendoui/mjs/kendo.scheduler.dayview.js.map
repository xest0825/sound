{"version":3,"file":"kendo.scheduler.dayview.js","names":["__meta__","id","name","category","description","depends","hidden","$","undefined$1","kendo","window","ui","encode","htmlEncode","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","MS_PER_MINUTE","MS_PER_DAY","INVERSE_COLOR_CLASS","getMilliseconds","NS","DAY_VIEW_EVENT_TEMPLATE","template","start","end","title","format","replace","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","isMobile","toString","ALLDAY_EVENT_WRAPPER_TEMPLATE","event","ariaLabel","attr","uid","resources","color","tail","middle","isException","isRecurring","showDelete","messages","destroy","head","resizable","singleDay","EVENT_WRAPPER_TEMPLATE","toInvariantTime","staticDate","Date","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","events","_continuousEvents","lastEvent","length","startDate","getTime","idx","splice","push","MultiDayView","init","options","that","this","fn","call","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","currentTimeMarkers","currentContentMarkers","timesTableMarkerWidth","position","elementHtml","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","times","find","content","groupsCount","orientation","groups","firstTimesCell","first","lastTimesCell","last","_isRtl","left","groupIndex","currentGroup","utcCurrentTime","toUtcTime","ranges","timeSlotRanges","collection","slotByStartDate","timesTableMarker","eq","prependTo","markerTopPosition","round","innerRect","top","timesTableMarkerCss","right","addClass","CURRENT_TIME_MARKER_ARROW_CLASS","css","height","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","_updateResizeHint","startTime","endTime","multiday","enforceAllDaySlot","isMultiDay","width","hint","_removeResizeHint","rangeIndex","startSlot","_isGroupedByDate","slotIdx","index","slot","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","rect","outerRect","snap","bottom","container","appendTo","text","toLocalDate","_updateMoveHint","distance","duration","_removeMoveHint","_end","pop","eventHint","clientWidth","offsetHeight","_createEventElement","clone","inverseColor","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","interval","_timeSlotInterval","verticalViews","tableRows","rowCount","floor","rowMultiplier","cellMultiplier","cells","children","timeIndex","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","_addResourceView","columnIndex","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","parent","hasClass","pageX","pageY","resourceInfo","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","useClickAsTap","browser","edge","tap","_scrolling","target","location","_allDayUserEvents","_editUserEvents","eventElement","touch","initialTouch","_layout","dates","columns","rows","column","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","toggleFullDay","isWorkDay","_footer","html","action","after","msStart","msMin","msMax","msMajorInterval","msInterval","startDay","majorTickDivider","_content","_renderRows","rowLevels","columnLevels","append","_virtualContent","isVerticalGroupped","dateID","levels","_recalculateLevels","appendRow","groupIdx","dateIndex","_addCellsToContent","rowIdx","_allDayVerticalGroupRow","result","dateGroupIndex","tmplDate","classes","_isWorkDay","day","getDay","i","_render","_startDate","_endDate","createLayout","refreshLayout","_isVirtualized","_tryRenderContent","allDayHeader","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","nextDate","nextDay","previousDate","previousDay","clearInterval","off","remove","inRange","selectionByElement","innerHeight","_timeSlotIndex","_slotIndex","_dateSlotIndex","slots","_positionAllDayEvent","slotRange","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","rightOffset","eventHeight","addEvent","slotIndex","createRows","rowEvents","j","eventLength","_arrangeColumns","columnEvents","eventRightOffset","eventElements","slotEvents","tableEl","table","contentEl","columnWidth","createColumns","calculatedWidth","style","scrollWidth","_positionEvent","_startTime","_endTime","borderWidths","getComputedStyles","parseFloat","isOneDayEvent","resize","eventStartTime","_time","eventEndTime","eventStartDate","eventEndDate","eventResources","apply","data","ns","_formatEventAriaLabel","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","slotStart","firstSlot","slotEnd","lastSlot","_updateAllDayHeaderHeight","_height","allDaySlots","refresh","_renderEvents","allDayEventContainer","isMultiDayEvent","slotRanges","newStart","newEnd","dateRange","daySlotRanges","_inverseEventColor","rangeCount","occurrence","render","_cachedEvents","Query","sort","field","dir","toArray","eventsByResource","_eventsByResource","eventsPerDate","map","grep","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","endMilliseconds","newDateStart","newDateEnd","verticalByDate","_timeSlotCollections","_getCollections","daySlotCollectionCount","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","indexOf","jQuery"],"sources":["kendo.scheduler.dayview.js"],"mappings":"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","sourcesContent":["import './kendo.scheduler.view.js';\n\nvar __meta__ = {\n    id: \"scheduler.dayview\",\n    name: \"Scheduler Day View\",\n    category: \"web\",\n    description: \"The Scheduler Day View\",\n    depends: [ \"scheduler.view\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        setTime = kendo.date.setTime,\n        SchedulerView = ui.SchedulerView,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        getDate = kendo.date.getDate,\n        MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n        CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        BORDER_SIZE_COEFF = 0.8666,\n        getMilliseconds = kendo.date.getMilliseconds,\n        NS = \".kendoMultiDayView\";\n\n    var DAY_VIEW_EVENT_TEMPLATE = kendo.template(({ start, end, title }) => `<div title=\"(${kendo.format(\"{0:t} - {1:t}\", start, end)}): ${title.replace(/\"/g,\"&#34;\")}\">` +\n                    `<div class=\"k-event-template k-event-time\">${encode(kendo.format(\"{0:t} - {1:t}\", start, end))}</div>` +\n                    `<div class=\"k-event-template\">${title}</div>` +\n                '</div>'),\n\n        DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template(({ start, title }) => `<div title=\"(${kendo.format(\"{0:t}\", start)}): ${title.replace(/\"/g,\"&#34;\")}\">` +\n                    `<div class=\"k-event-template\">${title}</div>` +\n                '</div>'),\n\n        DATA_HEADER_TEMPLATE = kendo.template(({ isMobile, date }) => `<span class='k-link k-nav-day'>${isMobile ? kendo.toString(date,'ddd')[0] : kendo.toString(date,'ddd M/dd')}</span>`),\n\n        ALLDAY_EVENT_WRAPPER_TEMPLATE = (event) => `<div role=\"button\" aria-label=\"${encode(event.ariaLabel)}\" ${kendo.attr('uid')}=\"${event.uid}\"` +\n                `${(event.resources[0] ? `style=\"background-color:${event.resources[0].color}; border-color: ${event.resources[0].color}\"` : '')} class=\"k-event\">` +\n                '<span class=\"k-event-actions\">' +\n                    (event.tail || event.middle ? '<span class=\"k-icon k-i-arrow-60-left\"></span>' : '') +\n                    (event.isException() ? '<span class=\"k-icon k-i-non-recurrence\"></span>' : (event.isRecurring() ? '<span class=\"k-icon k-i-reload\"></span>' : '') ) +\n                '</span>' +\n                kendo.template(event.template)(event) +\n                '<span class=\"k-event-actions\">' +\n                    (event.showDelete ? `<a href=\"#\" class=\"k-link k-event-delete\" title=\"${event.messages.destroy}\" aria-label=\"${event.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>` : '') +\n                    (event.head || event.middle ? '<span class=\"k-icon k-i-arrow-60-right\"></span>' : '') +\n                '</span>' +\n                (event.resizable && !event.singleDay && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-w\"></span>' : '') +\n                (event.resizable && !event.singleDay && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-e\"></span>' : '') +\n            '</div>',\n\n        EVENT_WRAPPER_TEMPLATE = (event) => `<div role=\"button\" aria-label=\"${encode(event.ariaLabel)}\" ${kendo.attr('uid')}=\"${event.uid}\"` +\n                `${(event.resources[0] ? `style=\"background-color:${event.resources[0].color}; border-color: ${event.resources[0].color}\"` : '')} class=\"k-event\">` +\n                 '<span class=\"k-event-actions\">' +\n                    (event.isException() ? '<span class=\"k-icon k-i-non-recurrence\"></span>' : (event.isRecurring() ? '<span class=\"k-icon k-i-reload\"></span>' : '') ) +\n                '</span>' +\n                kendo.template(event.template)(event) +\n                '<span class=\"k-event-actions\">' +\n                    (event.showDelete ? `<a href=\"#\" class=\"k-link k-event-delete\" title=\"${event.messages.destroy}\" aria-label=\"${event.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>` : '') +\n                '</span>' +\n                '<span class=\"k-event-top-actions\">' +\n                    (event.tail || event.middle ? '<span class=\"k-icon k-i-arrow-60-up\"></span>' : '') +\n                '</span>' +\n                '<span class=\"k-event-bottom-actions\">' +\n                    (event.head || event.middle ? '<span class=\"k-icon k-i-arrow-60-down\"></span>' : '') +\n                '</span>' +\n                (event.resizable && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-n\"></span>' : '') +\n                (event.resizable && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-s\"></span>' : '') +\n            '</div>';\n\n    function toInvariantTime(date) {\n        var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n        setTime(staticDate, getMilliseconds(date));\n        return staticDate;\n    }\n\n    function isInDateRange(value, min, max) {\n        return value >= min && value <= max;\n    }\n\n    function isInTimeRange(value, min, max, overlaps) {\n        overlaps = overlaps ? value <= max : value < max;\n        return value > min && overlaps;\n    }\n\n    function addContinuousEvent(group, range, element, isAllDay) {\n        var events = group._continuousEvents;\n        var lastEvent = events[events.length - 1];\n        var startDate = getDate(range.start.startDate()).getTime();\n\n        //this handles all day event which is over multiple slots but starts\n        //after one of the time events\n        if (isAllDay && lastEvent &&\n            getDate(lastEvent.start.startDate()).getTime() == startDate) {\n\n                var idx = events.length - 1;\n                for ( ; idx > -1; idx --) {\n                    if (events[idx].isAllDay ||\n                        getDate(events[idx].start.startDate()).getTime() < startDate) {\n                            break;\n                        }\n                }\n\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n    }\n\n    function getWorkDays(options) {\n        if (options.workDays && options.workDays.length) {\n            return options.workDays;\n        }\n\n        var workDays = [];\n        var dayIndex = options.workWeekStart % 7;\n        var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n        workDays.push(dayIndex);\n\n        while (workWeekEnd != dayIndex) {\n            if (dayIndex > 6 ) {\n                dayIndex -= 7;\n            } else {\n                dayIndex++;\n            }\n            workDays.push(dayIndex);\n        }\n        return workDays;\n    }\n\n    var MultiDayView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            SchedulerView.fn.init.call(that, element, options);\n\n            that.title = that.options.title || that.options.name;\n\n            that._workDays = getWorkDays(that.options);\n\n            that._templates();\n\n            that._editable();\n\n            that.calculateDateRange();\n\n            that._groups();\n\n            that._currentTime(true);\n        },\n\n        _currentTimeMarkerUpdater: function() {\n            this._updateCurrentTimeMarker(new Date());\n        },\n\n        _updateCurrentTimeMarker: function(currentTime) {\n            var options = this.options,\n                currentTimeMarkers, currentContentMarkers, timesTableMarkerWidth, position,\n                elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n\n            if (options.currentTimeMarker.useLocalTimezone === false) {\n                var timezone = options.dataSource.options.schema.timezone;\n\n                if (options.dataSource && timezone) {\n                   var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                   currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                }\n            }\n\n            currentTimeMarkers = this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n            currentContentMarkers = this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n\n            var groupsCount = !options.group || options.group.orientation == \"horizontal\" ? 1 : this.groups.length;\n            var firstTimesCell = this.times.find(\"tr\").first().find(\"th\").first();\n            var lastTimesCell = this.times.find(\"tr\").first().find(\"th\").last();\n\n            if (firstTimesCell.length > 0 && lastTimesCell.length > 0) {\n                if (this._isRtl) {\n                    position = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                } else {\n                    position = lastTimesCell.position().left;\n                }\n            }\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var currentGroup = this.groups[groupIndex];\n\n                if (!currentGroup) {\n                    return;\n                }\n\n                var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                if (ranges.length === 0) {\n                    return;\n                }\n\n                var collection = ranges[0].collection;\n                var slotElement = collection.slotByStartDate(currentTime);\n\n                if (slotElement) {\n                    var timesTableMarker = currentTimeMarkers[groupIndex] ? currentTimeMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.times);\n                    var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n\n                    var timesTableMarkerCss = {};\n\n                    if (this._isRtl) {\n                        timesTableMarkerCss.right = position;\n                        timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n                    } else {\n                        timesTableMarkerCss.left = position;\n                        timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n                    }\n\n                    if (!timesTableMarkerWidth) {\n                        timesTableMarkerWidth = (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n                    }\n\n                    timesTableMarkerCss.top = markerTopPosition - timesTableMarkerWidth;\n\n                    timesTableMarker.css(timesTableMarkerCss);\n\n                    var contentMarker = currentContentMarkers[groupIndex] ? currentContentMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.content);\n\n                    contentMarker.css({\n                        top: markerTopPosition,\n                        height: \"1px\",\n                        right: 0,\n                        left: 0\n                    });\n                }\n            }\n        },\n\n        _currentTime: function(setUpdateTimer) {\n            var that = this;\n            var markerOptions = that.options.currentTimeMarker;\n\n            if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                that._currentTimeMarkerUpdater();\n\n                if (setUpdateTimer) {\n                    that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                }\n            }\n        },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            var multiday;\n\n            if (this.options.enforceAllDaySlot) {\n                multiday = event.isMultiDay();\n            } else {\n                multiday = event.isAllDay;\n            }\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n            var width, height, top, hint;\n\n            this._removeResizeHint();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var start = range.startSlot();\n\n                if (this._isGroupedByDate() && multiday) {\n                    for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n                        width = slot.offsetWidth;\n                        height = slot.clientHeight;\n                        top = slot.offsetTop;\n\n                        hint = SchedulerView.fn._createResizeHint.call(this,\n                            slot.offsetLeft,\n                            top,\n                            width,\n                            height\n                        );\n\n                        this._resizeHint = this._resizeHint.add(hint);\n                    }\n                } else {\n                    width = start.offsetWidth;\n                    height = start.clientHeight;\n                    top = start.offsetTop;\n\n                    if (multiday) {\n                        width = range.innerWidth();\n                    } else {\n                        var rect = range.outerRect(startTime, endTime, this.options.snap);\n                        top = rect.top;\n                        height = rect.bottom - rect.top;\n                    }\n\n                    hint = SchedulerView.fn._createResizeHint.call(this,\n                        start.offsetLeft,\n                        top,\n                        width,\n                        height\n                    );\n\n                   this._resizeHint = this._resizeHint.add(hint);\n                }\n            }\n\n            var format = \"t\";\n            var container = this.content;\n\n            if (multiday) {\n                format = \"M/dd\";\n                container = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                if (!container.length) {\n                    container = this.content;\n                }\n            }\n\n            this._resizeHint.appendTo(container);\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var multiday;\n\n            if (this.options.enforceAllDaySlot) {\n                multiday = event.isMultiDay();\n            } else {\n                multiday = event.isAllDay;\n            }\n\n            var group = this.groups[groupIndex];\n\n            var start = kendo.date.toUtcTime(event.start) + distance;\n\n            var end = start + event.duration();\n\n            var ranges = group.ranges(start, end, multiday, event.isAllDay);\n\n            start = kendo.timezone.toLocalDate(start);\n\n            end = kendo.timezone.toLocalDate(end);\n\n            this._removeMoveHint(event.uid);\n\n            if (!multiday &&\n                getMilliseconds(end) < getMilliseconds(this.startTime()) &&\n                (end < this._end().getTime()) &&\n                getMilliseconds(end) !== 0 &&\n                ranges.length > 1) {\n                    ranges.pop();\n            }\n\n            var eventHint = $();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var startSlot = range.start;\n                var hint;\n                var css = {\n                    left: startSlot.offsetLeft + 2,\n                    top: startSlot.offsetTop\n                };\n\n                if (this._isGroupedByDate() && multiday) {\n                    for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n\n                        css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                        css.height = slot.offsetHeight;\n                        css.width = slot.clientWidth * 0.9 - 2;\n\n                        hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                        if (event.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                } else {\n                    if (this._isRtl) {\n                       css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                    }\n\n                    if (multiday) {\n                        css.width = range.innerWidth() - 2;\n                    } else {\n                        var rect = range.outerRect(start, end, this.options.snap);\n                        css.top = rect.top;\n                        css.height = rect.bottom - rect.top;\n                        css.width = startSlot.clientWidth * 0.9 - 2;\n                    }\n\n                    hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                    if (event.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    this._appendMoveHint(hint, css);\n                    eventHint = eventHint.add(hint);\n                }\n            }\n\n            var content = this.content;\n\n            if (multiday) {\n                content = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                if (!content.length) {\n                    content = this.content;\n                }\n            }\n\n            eventHint.appendTo(content);\n        },\n\n        _appendMoveHint: function(hint, css) {\n            hint.addClass(\"k-event-drag-hint\");\n\n            hint.css(css);\n\n            this._moveHint = this._moveHint.add(hint);\n       },\n\n       _slotByPosition: function(x, y) {\n           var slot, offset;\n\n           if (this._isVerticallyGrouped()) {\n               offset = this.content.offset();\n               y += this.content[0].scrollTop;\n               x += this.content[0].scrollLeft;\n           } else {\n               offset = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day)\").find(\">div\").offset();\n           }\n\n           if (offset) {\n               x -= offset.left;\n               y -= offset.top;\n           }\n\n           x = Math.ceil(x);\n           y = Math.ceil(y);\n\n           var group;\n           var groupIndex;\n\n           for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                group = this.groups[groupIndex];\n\n                slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n\n                if (slot) {\n                    return slot;\n                }\n           }\n\n           if (offset) {\n               x += offset.left;\n               y += offset.top;\n           }\n\n           offset = this.content.offset();\n\n           x -= offset.left;\n           y -= offset.top;\n\n           if (!this._isVerticallyGrouped()) {\n               y += this.content[0].scrollTop;\n               x += this.content[0].scrollLeft;\n           }\n\n           x = Math.ceil(x);\n           y = Math.ceil(y);\n\n           for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                group = this.groups[groupIndex];\n\n                slot = group.timeSlotByPosition(x, y);\n\n                if (slot) {\n                    return slot;\n                }\n           }\n\n           return null;\n       },\n\n       _groupCount: function() {\n            var resources = this.groupedResources;\n            var byDate = this._isGroupedByDate();\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    if (byDate) {\n                        return this._columnCountForLevel(resources.length - 1);\n                    } else {\n                        return this._rowCountForLevel(resources.length - 1);\n                    }\n                } else {\n                    if (byDate) {\n                        return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                    } else {\n                          return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                    }\n                }\n            }\n            return 1;\n        },\n\n        _columnCountInResourceView: function() {\n            var resources = this.groupedResources;\n            var byDate = this._isGroupedByDate();\n\n            if (!resources.length || this._isVerticallyGrouped()) {\n                if (byDate) {\n                     return this._rowCountForLevel(0);\n                } else {\n                     return this._columnCountForLevel(0);\n                }\n            }\n\n            if (byDate) {\n                return this._columnCountForLevel(0);\n            } else {\n                return this._columnOffsetForResource(resources.length);\n            }\n        },\n\n        _timeSlotGroups: function(groupCount, columnCount) {\n            var interval = this._timeSlotInterval();\n            var verticalViews = groupCount;\n            var byDate = this._isGroupedByDate();\n            var tableRows = this.content.find(\"tr:not(.k-scheduler-header-all-day)\");\n            var group, time, rowIndex, cellIndex;\n            var rowCount = tableRows.length;\n\n            if (this._isVerticallyGrouped()) {\n                if (byDate) {\n                    verticalViews = columnCount;\n                }\n                rowCount = Math.floor(rowCount / verticalViews);\n            }\n\n            for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                var rowMultiplier = 0;\n                var cellMultiplier = 0;\n\n                if (this._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                } else {\n                    cellMultiplier = groupIndex;\n                }\n\n                rowIndex = rowMultiplier * rowCount;\n\n              while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                    var cells = tableRows[rowIndex].children;\n\n                    if (rowIndex % rowCount === 0) {\n                        time = getMilliseconds(new Date(+this.startTime()));\n                    }\n\n                    var timeIndex = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                timeIndex++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                            this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                             timeIndex++;\n                        }\n                    }\n\n                    time += interval;\n                    rowIndex ++;\n                }\n            }\n        },\n\n        _addTimeSlotGroup: function(group, cells, cellIndex, time, interval, timeIndex) {\n              var cell = cells[cellIndex];\n              var collection = group.getTimeSlotCollection(timeIndex);\n              var currentDate = this._dates[timeIndex];\n              if (!currentDate || !cell) {\n                  return;\n              }\n              var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n              var start = currentTime + time;\n              var end = start + interval;\n\n              collection.addTimeSlot(cell, start, end);\n        },\n\n         _addDaySlotGroup: function(collection, cells, cellIndex, columnCount, cellCount) {\n                var cell = cells[cellIndex];\n                var start = this._dates[cellCount];\n                if (!start) {\n                    return;\n                }\n                var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n\n                collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n        },\n\n        _daySlotGroups: function(groupCount, columnCount) {\n            var tableRows, cellIndex;\n            var verticalViews = groupCount;\n            var byDate = this._isGroupedByDate();\n\n            if (this._isVerticallyGrouped()) {\n                if (byDate) {\n                    verticalViews = columnCount;\n                }\n                tableRows = this.element.find(\".k-scheduler-header-all-day\");\n            } else {\n                tableRows = this.element.find(\".k-scheduler-header-all-day tr\");\n            }\n\n            for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                var rowMultiplier = 0;\n                var group, collection;\n\n                if (this._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                }\n\n                var cells = tableRows[rowMultiplier].children;\n                var cellMultiplier = 0;\n\n                if (!this._isVerticallyGrouped()) {\n                    cellMultiplier = groupIndex;\n                }\n\n                var cellCount = 0;\n                if (byDate) {\n                    if (this._isVerticallyGrouped()) {\n                        for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                            group = this.groups[cellIndex];\n                            collection = group.getDaySlotCollection(0);\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                } else {\n                    group = this.groups[groupIndex];\n                    collection = group.getDaySlotCollection(0);\n                    for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                        this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                        cellCount++;\n                    }\n                }\n            }\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var columnCount = this._columnCountInResourceView();\n\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                var view = this._addResourceView(idx);\n\n                for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                    if (this._dates[columnIndex]) {\n                        view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                    }\n                }\n\n                if (this.options.allDaySlot) {\n                    view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                }\n            }\n\n            this._timeSlotGroups(groupCount, columnCount);\n\n            if (this.options.allDaySlot) {\n                this._daySlotGroups(groupCount, columnCount);\n            }\n        },\n\n        options: {\n            name: \"MultiDayView\",\n            selectedDateFormat: \"{0:D}\",\n            selectedShortDateFormat: \"{0:d}\",\n            selectedMobileDateFormat: \"{0:MMM} {0:dd} - {1:dd}\",\n            allDaySlot: true,\n            showWorkHours: false,\n            title: \"\",\n            startTime: kendo.date.today(),\n            endTime: kendo.date.today(),\n            minorTickCount: 2,\n            majorTick: 60,\n            majorTimeHeaderTemplate: ({ date }) => `<span>${kendo.toString(date, 't')}</span>`,\n            minorTimeHeaderTemplate: () => \"&#8203;\",\n            groupHeaderTemplate: ({ text }) => text,\n            slotTemplate: () => \"&nbsp;\",\n            allDaySlotTemplate: () => \"&nbsp;\",\n            eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n            allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n            dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n            editable: true,\n            workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n            workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n            workWeekStart: 1,\n            workWeekEnd: 5,\n            footer: {\n                command: \"workDay\"\n            },\n            messages: {\n                allDay: \"all day\",\n                showFullDay: \"Show full day\",\n                showWorkDay: \"Show business hours\"\n            },\n            currentTimeMarker: {\n                 updateInterval: 10000,\n                 useLocalTimezone: true\n            },\n            // a hidden option that provides us a fallback to the previous behaviour\n            // e.g. all events of 24 hours or more will be rendered in the allDaySlot\n            enforceAllDaySlot: false\n        },\n\n        events: [\"remove\", \"add\", \"edit\"],\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.allDayEventTemplate = kendo.template(ALLDAY_EVENT_WRAPPER_TEMPLATE);\n            this.eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n\n            this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n            this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n            this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n            this.slotTemplate = kendo.template(options.slotTemplate, settings);\n            this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-event a:has(.k-i-close)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-content > table td\", function(e) {\n                    if (!$(this).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                }).on(\"dblclick\" + NS, \".k-scheduler-header-all-day td\", function(e) {\n                    var slot = that._slotByPosition(e.pageX, e.pageY);\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                    }\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    filter: \".k-scheduler-content td\",\n                    useClickAsTap: !kendo.support.browser.edge,\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        if (!$(e.target).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                            var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                            var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    }\n                });\n\n                that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-header-all-day td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                        var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                        var slot = that._slotByPosition(x, y);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that._editUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-event\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var eventElement = $(e.target).closest(\".k-event\");\n                        var touchElement = $(e.touch.initialTouch);\n\n                        if (touchElement.hasClass(\"k-i-close\")) {\n                            that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        } else if (!eventElement.hasClass(\"k-event-active\")) {\n                            that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        _layout: function(dates) {\n            var columns = [];\n            var rows = [];\n            var options = this.options;\n            var that = this;\n            var byDate = that._isGroupedByDate();\n\n            for (var idx = 0; idx < dates.length; idx++) {\n                var column = {};\n\n                column.text = that.dateHeaderTemplate({ date: dates[idx], isMobile: that._isMobile() });\n\n                if (kendo.date.isToday(dates[idx])) {\n                    column.className = \"k-today\";\n                }\n\n                columns.push(column);\n            }\n\n            var resources = this.groupedResources;\n\n            if (options.allDaySlot) {\n                rows.push({\n                    text: options.messages.allDay, allDay: true,\n                    cellContent: function(idx) {\n                        var groupIndex = idx;\n\n                        idx = resources.length && that._groupOrientation() !== \"vertical\" ? idx % dates.length : idx;\n\n                        return that.allDaySlotTemplate({ date: dates[idx], resources: function() {\n                                return that._resourceBySlot({ groupIndex: groupIndex });\n                            }\n                        });\n                    }\n                });\n            }\n\n            this._forTimeRange(this.startTime(), this.endTime(), function(date, majorTick, middleRow, lastSlotRow) {\n                var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n\n                var row = {\n                    text: template({ date: date }),\n                    className: lastSlotRow ? \"k-slot-cell\" : \"\"\n                };\n\n                rows.push(row);\n            });\n\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    if (byDate) {\n                        rows = this._createDateLayout(columns, rows);\n                        columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                    } else {\n                        rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                    }\n                } else {\n                      if (byDate) {\n                         columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                      } else {\n                         columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                      }\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        toggleFullDay: function() {\n            var options = this.options;\n\n            this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n        },\n\n        _footer: function() {\n            var options = this.options;\n\n            if (options.footer !== false) {\n                var html = '<div class=\"k-scheduler-footer k-toolbar\" role=\"toolbar\">';\n\n                var command = options.footer.command;\n\n                if (this._isMobile()) {\n                    html += '<span class=\"k-scheduler-today\"><a href=\"#\" tabindex=\"-1\" class=\"k-link\">';\n                    html += options.messages.today + '</a></span>';\n                }\n                if (command && command === \"workDay\") {\n                    if (this._isMobile()) {\n                        html += '<span class=\"k-scheduler-fullday\"><a href=\"#\" tabindex=\"-1\" class=\"k-link\">';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></span>';\n                    } else {\n                        html += '<button type=\"button\" tabindex=\"-1\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-scheduler-fullday\">';\n                            html += '<span class=\"k-button-icon k-icon k-i-clock\"></span>';\n                            html += '<span class=\"k-button-text\">';\n                                html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay);\n                            html += '</span>';\n                        html += '</button>';\n                    }\n                }\n\n                html += \"</div>\";\n\n                this.footer = $(html).appendTo(this.element);\n\n                var that = this;\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-fullday\", function(e) {\n                    e.preventDefault();\n                    that.toggleFullDay();\n                });\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-today\", function(e) {\n                    e.preventDefault();\n                    var timezone = that.options.timezone;\n                    var action = \"today\";\n                    var currentDate = new Date();\n                    var date;\n\n                    if (timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                        date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                    } else {\n                        date = currentDate;\n                    }\n\n                    that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n                });\n            }\n        },\n\n        _forTimeRange: function(min, max, action, after) {\n            min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n            max = toInvariantTime(max);\n\n            var that = this,\n                msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                minorTickCount = that.options.minorTickCount,\n                msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                start = new Date(+min),\n                startDay = start.getDate(),\n                msStart,\n                idx = 0, length,\n                html = \"\";\n\n            length = MS_PER_DAY / msInterval;\n\n            if (msMin != msMax) {\n                if (msMin > msMax) {\n                    msMax += MS_PER_DAY;\n                }\n\n                length = ((msMax - msMin) / msInterval);\n            }\n\n            length = Math.round(length);\n\n            for (; idx < length; idx++) {\n                var majorTickDivider = idx % (msMajorInterval / msInterval),\n                    isMajorTickRow = majorTickDivider === 0,\n                    isMiddleRow = majorTickDivider < minorTickCount - 1,\n                    isLastSlotRow = majorTickDivider === minorTickCount - 1;\n\n                html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n\n                setTime(start, msInterval, false);\n            }\n\n            if (msMax) {\n                msStart = getMilliseconds(start);\n                if (startDay < start.getDate()) {\n                    msStart += MS_PER_DAY;\n                }\n\n                if (msStart > msMax) {\n                    start = new Date(+max);\n                }\n            }\n\n            if (after) {\n                html += after(start);\n            }\n\n            return html;\n        },\n\n        _content: function(dates) {\n            var that = this;\n            var html = '';\n\n            html += '<tbody>';\n\n            html += that._renderRows(dates, that.rowLevels, that.columnLevels);\n\n            html += '</tbody>';\n\n            this.content.find(\"table\").append(html);\n        },\n\n        _virtualContent: function(rowLevels, columnLevels) {\n            var that = this;\n            var html = '';\n            var dates = that._dates;\n\n            html += that._renderRows(dates, rowLevels, columnLevels);\n\n            that.content.find(\"table tbody\").append(html);\n        },\n\n        _renderRows: function(dates, rowLevels, columnLevels) {\n            var that = this;\n            var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n            var byDate = that._isGroupedByDate();\n            var dateID = 0;\n            var columnCount = dates.length;\n            var options = that.options;\n            var start = that.startTime();\n            var end = this.endTime();\n            var groupsCount = 1;\n            var rowCount = 1;\n            var resources = this.groupedResources;\n            var html = '';\n\n            if (resources.length) {\n                var levels = that._recalculateLevels(rowLevels, columnLevels);\n\n                rowCount = levels.rowCount;\n                groupsCount = levels.groupsCount;\n            }\n\n            var appendRow = function(date, majorTick, middleRow) {\n                var content = \"\";\n                var groupIdx = 0;\n                var idx, length;\n\n                content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : \"\") + '>';\n\n                if (byDate) {\n                    for (idx = 0, length = columnCount; idx < length; idx++) {\n                        for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                            var dateIndex = idx;\n                            if (isVerticalGroupped) {\n                                dateIndex = dateID;\n                            }\n                            content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n\n                        }\n                        if (isVerticalGroupped) {\n\n                            break;\n                        }\n                    }\n                } else {\n                     for (; groupIdx < groupsCount; groupIdx++) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                        }\n                     }\n                }\n\n                content += \"</tr>\";\n\n                return content;\n            };\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += options.allDaySlot && isVerticalGroupped ? this._allDayVerticalGroupRow(dates, rowIdx, groupsCount, dateID) : \"\";\n\n                html += this._forTimeRange(start, end, appendRow);\n                if (isVerticalGroupped) {\n                        dateID++;\n                }\n            }\n\n            return html;\n        },\n\n        _recalculateLevels: function(rowLevels, columnLevels) {\n            var that = this;\n            var byDate = that._isGroupedByDate();\n            var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n            var groupsCount = 1;\n            var rowCount = 1;\n\n            if (isVerticalGroupped) {\n                rowCount = that._rowCountForLevel(rowLevels.length - 2, rowLevels);\n\n                if (byDate) {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 1);\n                }\n            } else {\n                if (byDate) {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 1) / this._columnCountForLevel(0);\n                } else {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 2);\n                }\n            }\n\n            return {\n                rowCount: rowCount,\n                groupsCount: groupsCount\n            };\n        },\n\n        _allDayVerticalGroupRow: function(dates, groupIndex, groupsCount, dateID) {\n            var that = this;\n            var result = '<tr class=\"k-scheduler-header-all-day\">';\n            var byDate = that._isGroupedByDate();\n            var dateGroupIndex = byDate ? 0 : groupIndex;\n            var allDaySlotTemplate = that.allDaySlotTemplate;\n\n            var resources = function() {\n                return that._resourceBySlot({ groupIndex: dateGroupIndex });\n            };\n\n            if (byDate) {\n                for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                    result += \"<td>\" + allDaySlotTemplate({ date: dates[dateID], resources: resources }) + \"</td>\";\n                }\n            } else {\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result += \"<td>\" + allDaySlotTemplate({ date: dates[idx], resources: resources }) + \"</td>\";\n                }\n            }\n\n            return result + \"</tr>\";\n        },\n\n        _addCellsToContent: function(content, dates, date, idx, groupIdx, rowIdx) {\n            var that = this;\n            var classes = \"\";\n            var tmplDate;\n            var slotTemplate = this.slotTemplate;\n            var isVerticalGroupped = this._groupOrientation() === \"vertical\";\n            var resources = function(groupIndex) {\n                return function() {\n                    return that._resourceBySlot({ groupIndex: groupIndex });\n                };\n            };\n\n            if (kendo.date.isToday(dates[idx])) {\n                classes += \"k-today\";\n            }\n\n            if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) ||\n                kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) ||\n                !this._isWorkDay(dates[idx])) {\n                classes += \" k-nonwork-hour\";\n            }\n\n            content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n            tmplDate = kendo.date.getDate(dates[idx]);\n            kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n            content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx) });\n            content += \"</td>\";\n            return content;\n        },\n\n        _isWorkDay: function(date) {\n            var day = date.getDay();\n            var workDays = this._workDays;\n\n            for (var i = 0; i < workDays.length; i++) {\n                if (workDays[i] === day) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _render: function(dates) {\n            var that = this;\n\n            dates = dates || [];\n\n            this._dates = dates;\n\n            this._startDate = dates[0];\n\n            this._endDate = dates[(dates.length - 1) || 0];\n\n            this.createLayout(this._layout(dates));\n\n            this._content(dates);\n\n            this._footer();\n\n            this.refreshLayout();\n\n            if (this._isVirtualized()) {\n                this._tryRenderContent();\n            }\n\n            var allDayHeader = this.element.find(\".k-scheduler-header-all-day td\");\n\n            if (allDayHeader.length) {\n                this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n            }\n\n            that.element.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                var th = $(e.currentTarget).closest(\"th\");\n                var offset = th.offset();\n                var additioanlWidth = 0;\n                var additionalHeight = outerHeight(th);\n\n                if (that._isGroupedByDate()) {\n                    if (that._isVerticallyGrouped()) {\n                        additioanlWidth = outerWidth(that.times);\n                        additionalHeight = 0;\n                    } else {\n                        additionalHeight = outerHeight(that.datesHeader);\n                    }\n                }\n\n                var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n\n                that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n            });\n        },\n\n        startTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayStart : options.startTime;\n        },\n\n        endTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayEnd : options.endTime;\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        _end: function(isAllDay) {\n            var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n\n            if (isAllDay) {\n                time = 0;\n            }\n\n            return new Date(this._endDate.getTime() + time);\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this.endDate());\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this.startDate());\n        },\n\n        calculateDateRange: function() {\n            this._render([this.options.date]);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._currentTimeUpdateTimer) {\n                clearInterval(that._currentTimeUpdateTimer);\n            }\n\n            if (that.datesHeader) {\n                that.datesHeader.off(NS);\n            }\n\n            if (that.element) {\n                that.element.off(NS);\n            }\n\n            if (that.footer) {\n                that.footer.remove();\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && that.options.editable) {\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents.destroy();\n                    that._allDayUserEvents.destroy();\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents.destroy();\n                }\n            }\n        },\n\n        inRange: function(options) {\n            var inRange = SchedulerView.fn.inRange.call(this, options);\n\n            if (options.isAllDay) {\n                return inRange;\n            }\n\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n\n            var start = getMilliseconds(options.start);\n            var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n\n            return inRange && startTime <= start && end <= endTime;\n        },\n\n        selectionByElement: function(cell) {\n            var offset = cell.offset();\n            // The magical number 5 is to buffer properly the height of the cell for all browsers\n            var height = Math.round(cell.innerHeight()) - 5;\n\n            return this._slotByPosition(offset.left, offset.top + height);\n        },\n\n        _timeSlotInterval: function() {\n            var options = this.options;\n            return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n        },\n\n        _timeSlotIndex: function(date) {\n            var options = this.options;\n            var eventStartTime = getMilliseconds(date);\n            var startTime = getMilliseconds(this.startTime());\n            var timeSlotInterval = ((options.majorTick / options.minorTickCount) * MS_PER_MINUTE);\n\n            return (eventStartTime - startTime) / (timeSlotInterval);\n        },\n\n        _slotIndex: function(date, multiday) {\n            if (multiday) {\n                return this._dateSlotIndex(date);\n            }\n\n            return this._timeSlotIndex(date);\n        },\n\n        _dateSlotIndex: function(date, overlaps) {\n            var idx;\n            var length;\n            var slots = this._dates || [];\n            var slotStart;\n            var slotEnd;\n            var offset = 1;\n\n            for (idx = 0, length = slots.length; idx < length; idx++) {\n                slotStart = kendo.date.getDate(slots[idx]);\n                slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n\n                if (isInDateRange(date, slotStart, slotEnd)) {\n                    return idx * offset;\n                }\n            }\n            return -1;\n        },\n\n        _positionAllDayEvent: function(element, slotRange) {\n            var slotWidth = slotRange.innerWidth();\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n\n            var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n            var currentColumnCount = this._headerColumnCount || 0;\n\n            var leftOffset = 2;\n\n            var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n            var eventHeight = this._allDayHeaderHeight;\n\n            var start = slotRange.startSlot();\n\n            element\n                .css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n\n            slotRange.addEvent({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n            allDayEvents.push({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n            var rows = SchedulerView.createRows(allDayEvents);\n\n            if (rows.length && rows.length > currentColumnCount) {\n                this._headerColumnCount = rows.length;\n            }\n\n            var top = slotRange.start.offsetTop;\n\n            for (var idx = 0, length = rows.length; idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    $(rowEvents[j].element).css({\n                        top: top + idx * eventHeight,\n                        // apply calculated height.\n                        // -2 is to match normal events\n                        height: eventHeight - 2\n                    });\n                }\n            }\n        },\n\n        _arrangeColumns: function(element, top, height, slotRange) {\n            var startSlot = slotRange.start;\n\n            element = { element: element, slotIndex: startSlot.index, start: top, end: top + height };\n\n            var columns,\n                slotWidth = startSlot.clientWidth,\n                eventRightOffset = slotWidth * 0.10,\n                columnEvents,\n                eventElements = slotRange.events(),\n                slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end),\n                tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                contentEl = this.table.find(\".k-scheduler-content\")[0];\n\n            slotRange.addEvent(element);\n\n            slotEvents.push(element);\n\n            columns = SchedulerView.createColumns(slotEvents);\n\n            var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n\n            for (var idx = 0, length = columns.length; idx < length; idx++) {\n                columnEvents = columns[idx].events;\n\n                for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                    var calculatedWidth = columnWidth - 2;\n                    columnEvents[j].element[0].style.width = (calculatedWidth > 0 ? calculatedWidth : columnWidth) + \"px\";\n\n                    if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                        // RTL mobile rendering with horizontal scroll\n                        columnEvents[j].element[0].style.left = eventRightOffset +\n                            startSlot.offsetLeft +\n                            idx * columnWidth -\n                            (tableEl.clientWidth - contentEl.clientWidth) +\n                            \"px\";\n                    } else {\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + \"px\";\n                    }\n                }\n            }\n        },\n\n        _positionEvent: function(event, element, slotRange) {\n            var start = event._startTime || event.start;\n            var end = event._endTime || event.end;\n            var borderWidths = kendo.getComputedStyles(slotRange.start.element, [\"border-top-width\", \"border-bottom-width\"]);\n\n            var rect = slotRange.innerRect(start, end, false);\n\n            var height = rect.bottom - rect.top -\n                            parseFloat(borderWidths[\"border-top-width\"]) -\n                            parseFloat(borderWidths[\"border-bottom-width\"]);\n\n            if (height < 0) {\n                height = 0;\n            }\n\n            element.css( {\n                top: rect.top,\n                height: height\n            } );\n\n            this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n       },\n\n       _createEventElement: function(event, isOneDayEvent, head, tail) {\n            var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n            var options = this.options;\n            var editable = options.editable;\n            var isMobile = this._isMobile();\n            var showDelete = editable && editable.destroy !== false && !isMobile;\n            var resizable = editable && editable.resize !== false;\n            var startDate = getDate(this.startDate());\n            var endDate = getDate(this.endDate());\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var eventTemplate = isOneDayEvent ? options.eventTemplate : options.allDayEventTemplate;\n            var middle;\n\n            if (startTime >= endTime) {\n                endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n            }\n\n            if (!isOneDayEvent && !event.isAllDay) {\n                endDate = new Date(endDate.getTime() + MS_PER_DAY);\n            }\n\n            var eventStartDate = event.start;\n            var eventEndDate = event.end;\n\n            if (event.isAllDay) {\n                eventEndDate = getDate(event.end);\n            }\n            if ((!isInDateRange(getDate(eventStartDate), startDate, endDate) &&\n                !isInDateRange(eventEndDate, startDate, endDate)) ||\n                (isOneDayEvent &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventStartTime < startTime || eventStartTime >= endTime) &&\n                    (eventEndTime > endTime || eventEndTime <= startTime ))) {\n\n                middle = true;\n            } else if (getDate(eventStartDate) < startDate ||\n                (isOneDayEvent &&\n                    eventStartTime !== 0 &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventStartTime < startTime || eventStartTime >= endTime))) {\n\n                tail = true;\n            } else if ((eventEndDate > endDate && !isOneDayEvent) ||\n                (isOneDayEvent &&\n                    eventEndTime !== 0 &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventEndTime > endTime || eventEndTime <= startTime))) {\n\n                head = true;\n            }\n\n            var resources = this.eventResources(event);\n\n           if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                eventStartDate = new Date(eventStartTime);\n                eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n            }\n\n           if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                eventEndDate = new Date(eventEndTime);\n                eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n            }\n\n            var data = extend({}, {\n                ns: kendo.ns,\n                resizable: resizable,\n                showDelete: showDelete,\n                middle: middle,\n                head: head,\n                tail: tail,\n                singleDay: this._dates.length == 1,\n                resources: resources,\n                inverseColor: false,\n                messages: options.messages,\n                ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay),\n                template: eventTemplate\n            }, event, {\n                start: eventStartDate,\n                end: eventEndDate\n            });\n\n            var element = $(template(data));\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: data } ]\n                };\n            });\n\n            return element;\n        },\n\n        _isInTimeSlot: function(event) {\n            var slotStartTime = this.startTime(),\n                slotEndTime = this.endTime(),\n                startTime = event._startTime || event.start,\n                endTime = event._endTime || event.end;\n\n            if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                slotEndTime = kendo.date.getDate(slotEndTime);\n                setTime(slotEndTime, MS_PER_DAY - 1);\n            }\n\n            if (event._date(\"end\") > event._date(\"start\")) {\n               endTime = +event._date(\"end\") + (MS_PER_DAY - 1);\n            }\n\n            endTime = event._endTime ? endTime - event._date(\"end\") : getMilliseconds(new Date(endTime));\n            startTime = event._startTime ? startTime - event._date(\"start\") : getMilliseconds(new Date(startTime));\n\n            slotEndTime = getMilliseconds(slotEndTime);\n            slotStartTime = getMilliseconds(slotStartTime);\n\n            if (slotStartTime === startTime && startTime === endTime) {\n                return true;\n            }\n\n            var overlaps = startTime !== slotEndTime;\n\n            return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) ||\n                isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) ||\n                isInTimeRange(slotStartTime, startTime, endTime) ||\n                isInTimeRange(slotEndTime, startTime, endTime) ||\n                (event.end.getDate() > event.start.getDate() && endTime > slotStartTime);\n        },\n\n        _isInDateSlot: function(event) {\n            var groups = this.groups[0];\n            var slotStart = groups.firstSlot().start;\n            var slotEnd = groups.lastSlot().end - 1;\n\n            var startTime = kendo.date.toUtcTime(event.start);\n            var endTime = kendo.date.toUtcTime(event.end);\n\n            return (isInDateRange(startTime, slotStart, slotEnd) ||\n                isInDateRange(endTime, slotStart, slotEnd) ||\n                isInDateRange(slotStart, startTime, endTime) ||\n                isInDateRange(slotEnd, startTime, endTime)) &&\n                (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n        },\n\n        _updateAllDayHeaderHeight: function(height) {\n            if (this._height !== height) {\n                this._height = height;\n\n                var allDaySlots = this.element.find(\".k-scheduler-header-all-day td\");\n\n                if (allDaySlots.length) {\n                    allDaySlots.parent()\n                        .add(this.element.find(\".k-scheduler-times-all-day\").parent())\n                        .height(height);\n\n                    for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                        this.groups[groupIndex].refresh();\n                    }\n                }\n            }\n        },\n\n        _renderEvents: function(events, groupIndex) {\n            var allDayEventContainer = this.datesHeader.find(\".k-scheduler-header-wrap > div\");\n            var byDate = this._isGroupedByDate();\n            var event;\n\n            var idx;\n            var length;\n\n            for (idx = 0, length = events.length; idx < length; idx++) {\n                event = events[idx];\n\n                if (this._isInDateSlot(event)) {\n                    var isMultiDayEvent, container, element, ranges, range, start, end, group;\n\n                    if (this.options.enforceAllDaySlot) {\n                        isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                    } else {\n                        isMultiDayEvent = event.isAllDay;\n                    }\n\n                    container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n\n                    if (!isMultiDayEvent) {\n                        if (this._isInTimeSlot(event)) {\n                            group = this.groups[groupIndex];\n\n                            if (!group) {\n                                continue;\n                            }\n\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n\n                            ranges = group.slotRanges(event);\n\n                            var rangeCount = ranges.length;\n\n                            for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                range = ranges[rangeIndex];\n                                start = event.start;\n                                end = event.end;\n\n                                if (rangeCount > 1) {\n                                    if (rangeIndex === 0) {\n                                        end = range.end.endDate();\n                                    } else if (rangeIndex == rangeCount - 1) {\n                                        start = range.start.startDate();\n                                    } else {\n                                        start = range.start.startDate();\n                                        end = range.end.endDate();\n                                    }\n                                }\n\n                                var occurrence = event.clone({ start: start, end: end, _startTime: event._startTime, _endTime: event.endTime });\n\n                                if (this._isInTimeSlot(occurrence)) {\n                                    var head = range.head;\n\n                                    element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n\n                                    this._positionEvent(occurrence, element, range);\n\n                                    addContinuousEvent(group, range, element, false);\n                                }\n                            }\n                        }\n\n                    } else if (this.options.allDaySlot) {\n                        group = this.groups[groupIndex];\n\n                        if (!group) {\n                            continue;\n                        }\n\n                        if (!group._continuousEvents) {\n                            group._continuousEvents = [];\n                        }\n\n                        ranges = group.slotRanges(event);\n\n                        if (ranges.length) {\n                            range = ranges[0];\n                            var startIndex = range.start.index;\n                            var endIndex = range.end.index;\n\n                            if (byDate && startIndex !== endIndex) {\n                                start = range.start.start;\n                                end = range.end.end;\n                                var newStart = start;\n                                var newEnd = start;\n\n                                for (var i = range.start.index; i <= range.end.index; i++) {\n                                    element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n\n                                    var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                    newStart = newEnd += kendo.date.MS_PER_DAY;\n\n                                    this._positionAllDayEvent(element, dateRange);\n\n                                    addContinuousEvent(group, dateRange, element, true);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n                                }\n                            } else {\n                                element = this._createEventElement(event, !isMultiDayEvent);\n\n                                this._positionAllDayEvent(element, ranges[0]);\n\n                                addContinuousEvent(group, ranges[0], element, true);\n\n                                element.appendTo(container);\n\n                                this._inverseEventColor(element);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n\n        render: function(events) {\n            var that = this;\n\n            this._headerColumnCount = 0;\n\n            this._cachedEvents = events;\n\n            this._groups();\n\n            this.element.find(\".k-event\").remove();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray();\n\n            var eventsByResource = [];\n\n            this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n            var eventsPerDate = $.map(this._dates, function(date) {\n                return Math.max.apply(null,\n                    $.map(eventsByResource, function(events) {\n                        return $.grep(events, function(event) {\n                            if (that.options.enforceAllDaySlot) {\n                                return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                            } else {\n                                return event.isAllDay && isInDateRange(date, getDate(event.start), getDate(event.end));\n                            }\n                        }).length;\n                    })\n                );\n            });\n\n            var height = Math.max.apply(null, eventsPerDate);\n\n            this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n\n            for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                this._renderEvents(eventsByResource[groupIndex], groupIndex);\n            }\n\n            this.refreshLayout();\n\n            this._currentTime(false);\n\n            this.trigger(\"activate\");\n        },\n\n        _eventsByResource: function(events, resources, result, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                    } else {\n                        result.push(eventsFilteredByResource);\n                    }\n                }\n            } else {\n                result.push(events);\n            }\n        },\n\n        _columnOffsetForResource: function(index) {\n            return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level, rowLevels) {\n            rowLevels = rowLevels || this.rowLevels;\n            var rowLevel = rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        clearSelection: function() {\n\n            this.content.add(this.datesHeader)\n                .find(\".k-selected\")\n                .removeAttr(\"id\")\n                .removeClass(\"k-selected\");\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n            var isDaySlot = selection.isAllDay;\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n\n            if (multiple) {\n                if (vertical) {\n                    if (!isDaySlot &&\n                        startSlot.index === endSlot.index &&\n                        startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                    }\n                } else {\n                    if ((isDaySlot && startSlot.index === endSlot.index) ||\n                        (!isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex)) {\n                            selection.backward = reverse;\n                    }\n                }\n            }\n        },\n\n        _changeViewPeriod: function(selection, reverse, vertical) {\n            if (!vertical) {\n                var date = reverse ? this.previousDate() : this.nextDate();\n                var start = selection.start;\n                var end = selection.end;\n                var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                var group = this.groups[selection.groupIndex];\n                var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                var slots = collection[collection.length - 1]._slots;\n                var slotIndex = (!reverse && !group.daySlotCollectionCount()) ? 0 : slots.length - 1;\n                var endMilliseconds;\n                var newDateStart, newDateEnd;\n\n                newDateStart = new Date(date);\n                newDateEnd = new Date(date);\n\n                if (this._isInRange(newDateStart, newDateEnd)) {\n                    return false;\n                }\n\n                selection.start = newDateStart;\n                selection.end = newDateEnd;\n\n                if (verticalByDate) {\n                    var newStart = new Date(slots[slotIndex].startDate());\n                    var newEnd = new Date(slots[slotIndex].endDate());\n                    endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n\n                        setTime(selection.start, getMilliseconds(newStart));\n                        setTime(selection.end, endMilliseconds);\n                        if (group.daySlotCollectionCount()) {\n                            selection.isAllDay = !selection.isAllDay;\n                        }\n                } else {\n                    endMilliseconds = (selection.isAllDay || !getMilliseconds(end)) ? MS_PER_DAY : getMilliseconds(end);\n\n                    setTime(selection.start, getMilliseconds(start));\n                    setTime(selection.end, endMilliseconds);\n                }\n\n                if (!this._isVerticallyGrouped()) {\n                    selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                }\n\n                selection.events = [];\n\n                return true;\n            }\n        }\n    });\n\n    extend(true, ui, {\n        MultiDayView: MultiDayView,\n        DayView: MultiDayView.extend({\n            options: {\n                name: \"DayView\",\n                title: \"Day\",\n                selectedMobileDateFormat: \"{0:MMM d}\"\n            },\n            name: \"day\"\n        }),\n        WeekView: MultiDayView.extend({\n            options: {\n                name: \"WeekView\",\n                title: \"Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\"\n            },\n            name: \"week\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = 7; idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        }),\n        WorkWeekView: MultiDayView.extend({\n            options: {\n                name: \"WorkWeekView\",\n                title: \"Work Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\"\n            },\n            name: \"workWeek\",\n            nextDate: function() {\n                var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                return kendo.date.addDays(weekStart, this._workDays[0]);\n            },\n            previousDate: function() {\n                var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                var workDays = this._workDays;\n\n                return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n            },\n            calculateDateRange: function() {\n                var options = this.options,\n                    selectedDate = options.date,\n                    dayOfWeek = kendo.date.dayOfWeek,\n                    weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                    end = dayOfWeek(start, options.workWeekEnd, 1),\n                    dates = [],\n                    workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                        return dayOfWeek(weekStart, day, 1).getTime();\n                    }) : null;\n\n                if (workDays) {\n                    start = weekStart;\n                    end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                }\n\n                while (start <= end) {\n                    if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                        dates.push(start);\n                    } else if (!workDays) {\n                        dates.push(start);\n                    }\n\n                    start = kendo.date.nextDay(start);\n                }\n\n                this._render(dates);\n            }\n        })\n    });\n\n})(window.kendo.jQuery);\n"]}