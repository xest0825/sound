{"version":3,"file":"kendo.pivot.configurator.js","names":["__meta__","id","name","category","depends","hidden","$","undefined$1","kendo","window","ui","Widget","common","pivotgrid","fetchDiscover","configuratorReducer","PIVOT_CONFIGURATOR_ACTION","ns","SETTINGS_TEMPLATE","template","CONTENT_TEMPLATE","ACTIONS_TEMPLATE","SETTING_CONTAINER_TEMPLATE","addKPI","data","found","idx","length","type","splice","caption","defaultHierarchy","uniqueName","kpiNode","node","normalizeKPIs","settingTargetFromNode","target","closest","PivotConfiguratorV2","extend","init","element","options","fn","call","this","addClass","_dataSource","_layout","refresh","height","notify","events","orientation","filterable","sortable","messages","title","cancelButtonText","applyButtonText","measures","columns","rows","setDataSource","dataSource","that","_refreshHandler","unbind","_errorHandler","_progressHandler","_error","bind","_requestStart","PivotDataSourceV2","create","horizontal","panel","append","appendTo","formClass","find","each","index","elm","html","renderChipList","_fields","cancelText","applyText","_targets","on","_actions","e","preventDefault","currentTarget","_applyState","read","_cancelChanges","treeView","first","last","targetItemTemplate","renderChip","fillMode","themeColor","rounded","removable","removeIcon","_createTarget","connectWith","empty","setting","PivotSettingTargetV2","hint","clone","remove","item","wrapper","attr","dataItem","getByUid","checked","container","kendoTreeView","checkboxes","checkChildren","dataTextField","autoBind","check","sender","action","toggleSelection","payload","state","columnAxes","_state","rowAxes","measureAxes","result","cubeSchema","restoreMeasure","items","_checkMembers","trigger","_redraw","_treeViewDataSource","off","_clickHandler","HierarchicalDataSource","schema","model","hasChildren","local","transport","fields","dsMeasures","catalog","cube","fetchOptions","url","members","concat","isEmptyObject","dimensions","success","connection","restrictions","catalogName","cubeName","command","then","newFields","get","_getKPIOptions","buildKPImeasures","_loadFieldsCommand","newData","hash","field","dimensionUniqueName","hierarchyUniqueName","_progress","toggle","progress","destroy","fetch","plugin","PivotConfigurator","outerHeight","measuresLabel","columnsLabel","rowsLabel","fieldsLabel","PivotDataSource","kpi","schemaDimensions","done","cubeBuilder","fail","error","schemaKPIs","schemaMeasures","schemaLevels","schemaHierarchies","form","dragAndDrop","dragstart","sourceNode","aggregator","measure","drag","status","dropTarget","validate","setStatusClass","drop","push","add","icons","PivotSettingTarget","emptyTemplate","columnsContainer","icon","rowsContainer","measuresContainer","fieldMenu","_toggleHover","toggleClass","_resize","_cube","_catalog","kpiMeasure","value","goal","trend","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","jQuery"],"sources":["kendo.pivot.configurator.js"],"mappings":"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","sourcesContent":["import './kendo.dom.js';\nimport './kendo.html.chip.js';\nimport './kendo.html.chiplist.js';\nimport './kendo.pivot.common.js';\n\nvar __meta__ = {\n    id: \"pivot.configurator\",\n    name: \"PivotConfigurator\",\n    category: \"web\",\n    depends: [ \"dropdownlist\", \"treeview\", \"treeview.draganddrop\", \"pivot.fieldmenu\", \"html.chip\", \"html.chiplist\", \"pivot.common\" ],\n    hidden: true\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        common = window.kendo.pivotgrid.common,\n        fetchDiscover = common.fetchDiscover,\n        configuratorReducer = common.configuratorReducer,\n        PIVOT_CONFIGURATOR_ACTION = common.PIVOT_CONFIGURATOR_ACTION,\n        ns = \".kendoPivotConfigurator\",\n        HOVER_EVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        SETTINGS_TEMPLATE = kendo.template('<div class=\"k-pivotgrid-configurator-header\">' +\n                                            '<div class=\"k-pivotgrid-configurator-header-text\">#:title#</div>' +\n                                          '</div>'),\n        CONTENT_TEMPLATE = kendo.template('<div class=\"k-pivotgrid-configurator-content\">' +\n            '<form class=\"#:formClass#\">' +\n                '#if (horizontal) {# <div class=\"k-form-field-wrapper\"> #}#' +\n                '<div class=\"k-form-field\">' +\n                    '<label class=\"k-label\">Fields</label>' +\n                '</div>' +\n                '<div class=\"k-form-field\">' +\n                  '<div class=\"k-fields-list-wrapper\"></div>' +\n                '</div>' +\n                '#if (horizontal) {# </div><div class=\"k-form-field-wrapper\"> #}#' +\n                '<div class=\"k-form-field\">' +\n                    '<label class=\"k-label\">Columns</label>' +\n                '</div>' +\n                '<div class=\"k-chip-list k-column-fields\"></div>' +\n                '<div class=\"k-form-field\">' +\n                    '<label class=\"k-label\">Rows</label>' +\n                '</div>' +\n                '<div class=\"k-chip-list k-row-fields\"></div>' +\n                '#if (horizontal) {# </div><div class=\"k-form-field-wrapper\"> #}#' +\n                '<div class=\"k-form-field\">' +\n                    '<label class=\"k-label\">Values</label>' +\n                '</div>' +\n                '<div class=\"k-chip-list k-column-fields\"></div>' +\n                '#if (horizontal) {# </div> #}#' +\n            '</form>' +\n        '</div>'),\n        TARGET_ITEM_TEMPLATE = '<span>' +\n                '<span class=\"k-chip-label\">#:name#</span>' +\n                '#if (menuenabled) {# <span class=\"k-icon k-i-more-vertical\"></span> #}#' +\n            '</span>',\n        ACTIONS_TEMPLATE = kendo.template(\n                '<div class=\"k-pivotgrid-configurator-actions k-actions k-hstack k-justify-content-end\">' +\n                  '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\">' +\n                    '<span class=\"k-button-text\">#:cancelText#</span>' +\n                  '</button>' +\n                  '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\">' +\n                    '<span class=\"k-button-text\">#:applyText#</span>' +\n                  '</button>' +\n                '</div>'),\n        SETTING_CONTAINER_TEMPLATE = kendo.template('<div class=\"k-pivotgrid-target k-pivotgrid-configurator-section\"><strong>${name}</strong><div class=\"k-pivotgrid-target-wrap\"></div>');\n\n    function addKPI(data) {\n        var found;\n        var idx = 0;\n        var length = data.length;\n\n        for (; idx < length; idx++) {\n            if (data[idx].type == 2) {\n                found = true;\n                break;\n            }\n        }\n\n        if (found) {\n            data.splice(idx + 1, 0, {\n                caption: \"KPIs\",\n                defaultHierarchy: \"[KPIs]\",\n                name: \"KPIs\",\n                uniqueName: \"[KPIs]\"\n            });\n        }\n    }\n\n    function kpiNode(node) {\n        return {\n            name: node.uniqueName,\n            type: node.type\n        };\n    }\n\n    function normalizeKPIs(data) {\n        for (var idx = 0, length = data.length; idx < length; idx++) {\n            data[idx].uniqueName = data[idx].name;\n            data[idx].type = \"kpi\";\n        }\n\n        return data;\n    }\n\n    function settingTargetFromNode(node) {\n        var target = $(node).closest(\".k-pivot-setting\");\n\n        if (target.length) {\n            return target.data(\"kendoPivotSettingTarget\");\n        }\n        return null;\n    }\n\n    var PivotConfiguratorV2 = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this.element.addClass(\"k-widget k-pivotgrid-configurator k-pos-relative\");\n\n            this._dataSource();\n\n            this._layout();\n\n            this.refresh();\n\n            if (options.height) {\n                this.element.height(options.height);\n            }\n\n            kendo.notify(this);\n        },\n\n        events: [],\n\n        options: {\n            name: \"PivotConfiguratorV2\",\n            orientation: \"vertical\",\n            filterable: false,\n            sortable: false,\n            messages: {\n                title: \"Settings\",\n                cancelButtonText: \"Cancel\",\n                applyButtonText: \"Apply\",\n                measures: \"Select some fields to begin setup\",\n                columns: \"Select some fields to begin setup\",\n                rows: \"Select some fields to begin setup\"\n            }\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measures) {\n                this.measures.setDataSource(dataSource);\n            }\n\n            if (this.rows) {\n                this.rows.setDataSource(dataSource);\n            }\n\n            if (this.columns) {\n                this.columns.setDataSource(dataSource);\n            }\n\n            this.refresh();\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler)\n                               .unbind(\"error\", that._errorHandler)\n                               .unbind(\"progress\", that._progressHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(that.options.dataSource);\n            that.dataSource.bind(\"change\", that._refreshHandler)\n                           .bind(\"error\", that._errorHandler)\n                           .bind(\"progress\", that._progressHandler);\n        },\n\n        _layout: function() {\n\n            var that = this;\n            var options = that.options;\n            var messages = options.messages;\n            var horizontal = options.orientation == \"horizontal\";\n\n            var panel = $(\"<div class='k-pivotgrid-configurator-panel k-pivotgrid-configurator-push'></div>\");\n\n            panel.addClass(horizontal ? \"k-pivotgrid-configurator-horizontal\" : \"k-pivotgrid-configurator-vertical\");\n\n            that.element.append(panel);\n\n            that.panel = panel;\n\n            $(SETTINGS_TEMPLATE({ title: this.options.messages.title })).appendTo(that.panel);\n\n            $(CONTENT_TEMPLATE({ formClass: horizontal ? \"k-form k-form-horizontal\" : \"k-form\", filterable: options.filterable, horizontal: horizontal }))\n                .appendTo(that.panel).find(\".k-chip-list\")\n                .each(function(index, elm) {\n                    kendo.html.renderChipList(elm, $.extend({}, options));\n                });\n\n            that._fields();\n            $(ACTIONS_TEMPLATE({ cancelText: messages.cancelButtonText, applyText: messages.applyButtonText })).appendTo(that.panel);\n            that._targets();\n\n            that.element.on(\"click\" + ns, \".k-pivotgrid-configurator-actions > button\", that._actions.bind(that));\n        },\n\n        _actions: function(e) {\n            e.preventDefault();\n\n            var target = $(e.currentTarget);\n            if (target.index()) {\n                this.columns._applyState();\n                this.rows._applyState();\n                this.measures._applyState();\n                this.dataSource.read();\n            } else {\n                this.columns._cancelChanges();\n                this.rows._cancelChanges();\n                this.measures._cancelChanges();\n                this.treeView.dataSource.read();\n            }\n        },\n\n        _targets: function() {\n            var that = this;\n            var columns = that.panel.find(\".k-column-fields\").first();\n            var rows = that.panel.find(\".k-row-fields\");\n            var measures = that.panel.find(\".k-chip-list\").last();\n            var options = this.options;\n\n            var targetItemTemplate = kendo.html.renderChip(TARGET_ITEM_TEMPLATE, $.extend({}, options, {\n                fillMode: \"solid\",\n                themeColor: \"base\",\n                rounded: \"full\",\n                removable: true,\n                removeIcon: \"close-circle\"\n            }));\n\n            this.columns = this._createTarget(columns, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                template: targetItemTemplate,\n                connectWith: rows,\n                messages: {\n                    empty: options.messages.columns\n                }\n            });\n\n            this.rows = this._createTarget(rows, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                template: targetItemTemplate,\n                setting: \"rows\",\n                connectWith: columns,\n                messages: {\n                    empty: this.options.messages.rows\n                }\n            });\n\n            this.measures = this._createTarget(measures, {\n                setting: \"measures\",\n                template: targetItemTemplate,\n                messages: {\n                    empty: options.messages.measures\n                }\n            });\n        },\n\n        _createTarget: function(element, options) {\n            var that = this;\n            return new kendo.ui.PivotSettingTargetV2(element, $.extend({\n                dataSource: this.dataSource,\n                hint: function(element) {\n                    return element.clone();\n                },\n                remove: function(e) {\n                    var item = that.treeView.wrapper\n                        .find(\"[data-name='\" + e.name + \"']\")\n                        .closest(\"li\");\n                    var id = item.attr(kendo.attr(\"uid\"));\n                    var dataItem = that.treeView.dataSource.getByUid(id);\n\n                    if (dataItem) {\n                        dataItem.checked = false;\n                        item.find(\"input\").attr(\"checked\", false);\n                    }\n                },\n                template: options.template\n            }, options));\n        },\n\n        _fields: function() {\n            var that = this;\n            var container = that.element.find(\".k-fields-list-wrapper\");\n\n            this.treeView = $(\"<div/>\").appendTo(container)\n                .kendoTreeView({\n                    checkboxes: {\n                        checkChildren: true,\n                        template: '#if ((item.hasChildren || item.aggregator || item.local) && item.uniqueName !== \"[KPIs]\" && item.uniqueName !== \"[Measures]\" && item.uniqueName !== \"Measures\") {# <input type=\"checkbox\" data-name=\"#:item.uniqueName#\" #= item.checked ? \"checked\" : \"\" # class=\"k-checkbox k-checkbox-md k-rounded-md\" id=\"#:item.uid#\" tabindex=\"-1\"> #}#'\n                    },\n                    dataTextField: \"caption\",\n                    autoBind: false,\n                    check: function(e) {\n                      var dataItem = e.sender.dataItem(e.node);\n                      var action = {\n                        type: PIVOT_CONFIGURATOR_ACTION.toggleSelection,\n                        payload: dataItem\n                      };\n                      var state = {\n                        columnAxes: that.columns._state(),\n                        rowAxes: that.rows._state(),\n                        measureAxes: that.measures._state()\n                      };\n                      var result = configuratorReducer(state, action);\n\n                      if (that.dataSource.cubeSchema && result.measureAxes && result.measureAxes.length &&\n                        result.measureAxes.length > state.measureAxes.length) {\n                          that.dataSource.cubeSchema.restoreMeasure(result.measureAxes, dataItem);\n                      }\n\n                      if (dataItem.defaultHierarchy && dataItem.items && dataItem.items.length) {\n                          that._checkMembers([{ name: dataItem.defaultHierarchy }], dataItem.items);\n                          dataItem.items.trigger(\"change\");\n                      }\n\n                      if (result.columnAxes) {\n                          that.columns._state(result.columnAxes);\n                          that.columns._redraw();\n                      }\n                      if (result.rowAxes) {\n                          that.rows._state(result.rowAxes);\n                          that.rows._redraw();\n                      }\n                      if (result.measureAxes) {\n                          that.measures._state(result.measureAxes);\n                          that.measures._redraw();\n                      }\n                    },\n                    dataSource: this._treeViewDataSource()\n                 })\n                .data(\"kendoTreeView\");\n\n            this.treeView.wrapper.off(\"click\", this.treeView._clickHandler);\n        },\n\n        _treeViewDataSource: function() {\n            var that = this;\n\n            return kendo.data.HierarchicalDataSource.create({\n                schema: {\n                    model: {\n                        id: \"uniqueName\",\n                        hasChildren: function(item) {\n                            if (that.dataSource.cubeSchema && item.uniqueName !== \"Measures\") {\n                                item.local = true;\n                                return false;\n                            }\n                            return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                        }\n                    }\n                },\n                transport: {\n                    read: function(options) {\n                        var node;\n                        var transport = that.dataSource.transport;\n                        var catalog = transport.catalog();\n                        var cube = transport.cube();\n                        var fetchOptions = {\n                            url: transport.options.read\n                        };\n                        var columns = that.columns._state();\n                        var rows = that.rows._state();\n                        var measures = that.measures._state();\n                        var members = columns.concat(rows).concat(measures);\n                        var fields;\n                        var dsMeasures;\n                        var fetchOpts;\n\n                        if ($.isEmptyObject(options.data)) {\n                            if (that.dataSource.cubeSchema) {\n                                fields = that.dataSource.cubeSchema.dimensions();\n                                that._checkMembers(members, fields);\n                                options.success(fields);\n                            } else {\n                                fetchOpts = {\n                                    connection: {\n                                        catalog: catalog,\n                                        cube: cube\n                                    },\n                                    restrictions: {\n                                        catalogName: catalog,\n                                        cubeName: cube\n                                    },\n                                    command: 'schemaDimensions'\n                                };\n\n                                fetchDiscover(fetchOptions, fetchOpts)\n                                    .then(function(newFields) {\n                                        that._checkMembers(members, newFields);\n                                        addKPI(newFields);\n                                        options.success(newFields);\n                                     });\n                            }\n                        } else {\n                            //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                            node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                            if (that.dataSource.cubeSchema) {\n                                dsMeasures = that.dataSource.measures();\n                                that._checkMembers(members, dsMeasures);\n                                options.success(dsMeasures);\n                            } else {\n                                if (node.uniqueName === \"[KPIs]\") {\n                                    fetchDiscover(fetchOptions, that._getKPIOptions(catalog, cube))\n                                    .then(function(newFields) {\n                                        options.success(normalizeKPIs(newFields));\n                                    });\n                                } else if (node.type == \"kpi\") {\n                                    options.success(buildKPImeasures(node));\n                                } else {\n                                    fetchDiscover(fetchOptions ,that._loadFieldsCommand(node, catalog, cube))\n                                    .then(function(newFields) {\n                                        that._checkMembers(members, newFields);\n                                        options.success(newFields);\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        },\n\n        _checkMembers: function(members, newData) {\n            var hash = {};\n            var index = 0;\n\n            for (index = 0; index < members.length; index++) {\n                hash[members[index].name] = true;\n            }\n\n            for (index = 0; index < newData.length; index++) {\n                if (hash[newData[index].uniqueName]) {\n                    newData[index].checked = true;\n                }\n            }\n        },\n\n        _getKPIOptions: function(catalog, cube) {\n            return {\n                connection: {\n                    catalog: catalog,\n                    cube: cube\n                },\n                restrictions: {\n                    catalogName: catalog,\n                    cubeName: cube\n                },\n                command: 'schemaKPIs'\n            };\n        },\n\n        _loadFieldsCommand: function(field, catalog, cube) {\n            var command;\n            var dimensionUniqueName;\n            var hierarchyUniqueName;\n\n            if (field.type === 2) {\n                command = 'schemaMeasures';\n            } else if (field.dimensionUniqueName) {\n                command = 'schemaLevels';\n                hierarchyUniqueName = field.uniqueName;\n            } else {\n                command = 'schemaHierarchies';\n                dimensionUniqueName = field.uniqueName;\n            }\n\n            var options = {\n                connection: {\n                    catalog: catalog,\n                    cube: cube\n                },\n                restrictions: {\n                    catalogName: catalog,\n                    cubeName: cube,\n                    hierarchyUniqueName: hierarchyUniqueName,\n                    dimensionUniqueName: dimensionUniqueName\n                },\n                command: command\n            };\n\n            return options;\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.element, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(\"change\", this._refreshHandler);\n\n            this.element.off(ns);\n\n            this.rows.destroy();\n            this.columns.destroy();\n            this.measures.destroy();\n            this.treeView.destroy();\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        refresh: function() {\n            if (this.treeView) {\n                this.treeView.dataSource.fetch();\n            }\n\n            this._progress(false);\n        }\n\n    });\n\n    ui.plugin(PivotConfiguratorV2);\n\n    var PivotConfigurator = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this.element.addClass(\"k-pivotgrid-configurator-panel kendo-jquery\");\n\n            if (this.options.height) {\n                this.element.outerHeight(this.options.height);\n            }\n\n            this._dataSource();\n\n            this._layout();\n\n            this.refresh();\n\n            kendo.notify(this);\n        },\n\n        events: [],\n\n        options: {\n            name: \"PivotConfigurator\",\n            filterable: false,\n            sortable: false,\n            messages: {\n                measures: \"Drop Data Fields Here\",\n                columns: \"Drop Column Fields Here\",\n                rows: \"Drop Rows Fields Here\",\n                measuresLabel: \"Measures\",\n                columnsLabel: \"Columns\",\n                rowsLabel: \"Rows\",\n                fieldsLabel: \"Fields\"\n            }\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler)\n                               .unbind(\"error\", that._errorHandler)\n                               .unbind(\"progress\", that._progressHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(that.options.dataSource);\n            that.dataSource.bind(\"change\", that._refreshHandler)\n                           .bind(\"error\", that._errorHandler)\n                           .bind(\"progress\", that._progressHandler);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measures) {\n                this.measures.setDataSource(dataSource);\n            }\n\n            if (this.rows) {\n                this.rows.setDataSource(dataSource);\n            }\n\n            if (this.columns) {\n                this.columns.setDataSource(dataSource);\n            }\n\n            this.refresh();\n        },\n\n        _treeViewDataSource: function() {\n            var that = this;\n\n            return kendo.data.HierarchicalDataSource.create({\n                schema: {\n                    model: {\n                        id: \"uniqueName\",\n                        hasChildren: function(item) {\n                            return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                        }\n                    }\n                },\n                transport: {\n                    read: function(options) {\n                        var promise;\n                        var node;\n                        var kpi;\n\n                        if ($.isEmptyObject(options.data)) {\n                            promise = that.dataSource.schemaDimensions();\n\n                            promise.done(function(data) {\n                                        if (!that.dataSource.cubeBuilder) {\n                                            addKPI(data);\n                                        }\n                                        options.success(data);\n                                    })\n                                    .fail(options.error);\n                        } else {\n                            //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                            node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                            if (node.uniqueName === \"[KPIs]\") {\n                                kpi = true;\n                                promise = that.dataSource.schemaKPIs();\n                                promise.done(function(data) {\n                                            options.success(normalizeKPIs(data));\n                                       })\n                                       .fail(options.error);\n                            } else if (node.type == \"kpi\") {\n                                kpi = true;\n                                options.success(buildKPImeasures(node));\n                            }\n\n                            if (!kpi) {\n                                if (node.type == 2) { //measure\n                                    promise = that.dataSource.schemaMeasures();\n                                } else if (node.dimensionUniqueName) { // hierarchy\n                                    promise = that.dataSource.schemaLevels(options.data.uniqueName);\n                                } else { // dimension\n                                    promise = that.dataSource.schemaHierarchies(options.data.uniqueName);\n                                }\n\n                                promise.done(options.success)\n                                        .fail(options.error);\n                            }\n                        }\n                    }\n                }\n            });\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.element, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _layout: function() {\n            $('<div class=\"k-pivotgrid-configurator\"><div class=\"k-pivotgrid-configurator-content\"></div></div>').appendTo(this.element);\n            this.form = this.element.find('.k-pivotgrid-configurator-content');\n\n            this._fields();\n            this._targets();\n        },\n\n        _fields: function() {\n            var container = $('<div class=\"k-pivotgrid-fields k-pivotgrid-configurator-section\"><strong>' + this.options.messages.fieldsLabel + '</strong><div class=\"k-fields-list-wrapper\"></div></div>').appendTo(this.form);\n\n            var template = '# if (item.type == 2 || item.uniqueName == \"[KPIs]\") { #' +\n                           '<span class=\"k-icon k-i-#= (item.type == 2 ? \\\"sum\\\" : \\\"kpi\\\") #\"></span>' +\n                           '# } else if (item.type && item.type !== \"kpi\") { #' +\n                           '<span class=\"k-icon k-i-arrows-dimensions\"></span>' +\n                           '# } #' +\n                           '#: item.caption || item.name #';\n\n            this.treeView = $(\"<div/>\").appendTo(container.find('.k-fields-list-wrapper'))\n                .kendoTreeView({\n                    template: template,\n                    dataTextField: \"caption\",\n                    dragAndDrop: true,\n                    autoBind: false,\n                    dataSource: this._treeViewDataSource(),\n                    dragstart: function(e) {\n                        var dataItem = this.dataItem(e.sourceNode);\n\n                        if ((!dataItem.hasChildren && !dataItem.aggregator && !dataItem.measure) || (dataItem.type == 2) || dataItem.uniqueName === \"[KPIs]\") {\n                            e.preventDefault();\n                        }\n                    },\n                    drag: function(e) {\n                        var status = \"k-i-cancel\";\n                        var setting = settingTargetFromNode(e.dropTarget);\n\n                        if (setting && setting.validate(this.dataItem(e.sourceNode))) {\n                            status = \"k-i-plus\";\n                        }\n\n                        e.setStatusClass(status);\n                    },\n                    drop: function(e) {\n                        e.preventDefault();\n\n                        var setting = settingTargetFromNode(e.dropTarget);\n                        var node = this.dataItem(e.sourceNode);\n                        var idx, length, measures;\n                        var name;\n\n                        if (setting && setting.validate(node)) {\n                            name = node.defaultHierarchy || node.uniqueName;\n\n                            if (node.type === \"kpi\") {\n                                measures = buildKPImeasures(node);\n                                length = measures.length;\n                                name = [];\n\n                                for (idx = 0; idx < length; idx++) {\n                                    name.push(kpiNode(measures[idx]));\n                                }\n                            } else if (node.kpi) {\n                                name = [kpiNode(node)];\n                            }\n\n                            setting.add(name);\n                        }\n                    }\n                 })\n                .data(\"kendoTreeView\");\n        },\n\n        _createTarget: function(element, options) {\n            var template = '';\n            var sortable = options.sortable;\n            var icons = '';\n\n            if (sortable) {\n                icons += '#if (data.sortIcon) {#';\n                icons += '<span class=\"k-chip-action\"><span class=\"k-icon ${data.sortIcon}-sm\"></span></span>';\n                icons += '#}#';\n            }\n\n            if (options.filterable || sortable) {\n                icons += '<span class=\"k-setting-fieldmenu k-chip-action\"><span class=\"k-icon k-i-more-vertical\"></span></span>';\n            }\n\n            icons += '<span class=\"k-setting-delete k-chip-action\"><span class=\"k-icon k-i-close\"></span></span>';\n\n            template = ''\n                + '<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-' + kendo.ns + 'name=\"${data.name}\">'\n                    + '<span class=\"k-chip-content\">'\n                        + '<span class=\"k-chip-text\">${data.name}</span>'\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">' + icons + '</span>'\n                + '</span>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: '<span class=\"k-empty\">${data}</span>'\n            }, options));\n        },\n\n        _targets: function() {\n            var container = $('<div class=\"k-pivotgrid-targets\"/>').appendTo(this.form);\n\n            var columnsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.columnsLabel, icon: \"k-i-columns\" })).appendTo(container);\n            var columns = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(columnsContainer.find('.k-pivotgrid-target-wrap'));\n\n            var rowsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.rowsLabel, icon: \"k-i-rows\" })).appendTo(container);\n            var rows = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(rowsContainer.find('.k-pivotgrid-target-wrap'));\n\n            var measuresContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.measuresLabel, icon: \"k-i-sum\" })).appendTo(container);\n            var measures = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(measuresContainer.find('.k-pivotgrid-target-wrap'));\n\n            var options = this.options;\n\n            this.columns = this._createTarget(columns, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                connectWith: rows,\n                messages: {\n                    empty: options.messages.columns,\n                    fieldMenu: options.messages.fieldMenu\n                }\n            });\n\n            this.rows = this._createTarget(rows, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                setting: \"rows\",\n                connectWith: columns,\n                messages: {\n                    empty: this.options.messages.rows,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.measures = this._createTarget(measures, {\n                setting: \"measures\",\n                messages: {\n                    empty: options.messages.measures\n                }\n            });\n\n            columns\n                .add(rows)\n                .add(measures)\n                .on(HOVER_EVENTS, \".k-item:not(.k-empty)\", this._toggleHover);\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(\"k-hover\", e.type === \"mouseenter\");\n        },\n\n        _resize: function() {\n            var element = this.element;\n            var height = this.options.height;\n\n            if (!height) {\n                return;\n            }\n\n            element.outerHeight(height);\n        },\n\n        refresh: function() {\n            var dataSource = this.dataSource;\n\n            if (dataSource.cubeBuilder || this._cube !== dataSource.cube() || this._catalog !== dataSource.catalog()) {\n                this.treeView.dataSource.fetch();\n            }\n\n            this._catalog = this.dataSource.catalog();\n            this._cube = this.dataSource.cube();\n\n            this._resize();\n\n            this._progress(false);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(\"change\", this._refreshHandler);\n\n            this.form.find(\".k-pivot-setting\").off(ns);\n\n            this.rows.destroy();\n            this.columns.destroy();\n            this.measures.destroy();\n            this.treeView.destroy();\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    function kpiMeasure(name, measure, type) {\n        return {\n            hierarchyUniqueName: name,\n            uniqueName: measure,\n            caption: measure,\n            measure: measure,\n            name: measure,\n            type: type,\n            kpi: true\n        };\n    }\n\n    function buildKPImeasures(node) {\n        var name = node.name;\n        return [\n            kpiMeasure(name, node.value, \"value\"),\n            kpiMeasure(name, node.goal, \"goal\"),\n            kpiMeasure(name, node.status, \"status\"),\n            kpiMeasure(name, node.trend, \"trend\")\n        ];\n    }\n\n    kendo.cssProperties.registerPrefix(\"HTMLChip\", \"k-chip-\");\n\n    kendo.cssProperties.registerValues(\"HTMLChip\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(PivotConfigurator);\n\n})(window.kendo.jQuery);\n"]}