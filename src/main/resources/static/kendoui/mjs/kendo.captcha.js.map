{"version":3,"file":"kendo.captcha.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","extend","ajax","isFunction","NS","DOT","CLICK","CHANGE","REQUEST_START","REQUEST_END","ERROR","Captcha","init","element","options","that","this","fn","call","_captchaField","dataCaptchaField","_valueField","attr","_captchaIdField","dataCaptchaIdField","_wrapper","_idInput","_captchaImage","audioButton","resetButton","_buttons","captcha","captchaId","_resetHandler","validateOnBlur","on","_validationHandler","ev","_isValid","trigger","value","val","originalEvent","notify","events","handler","audioHandler","validationHandler","volumeControl","messages","reset","audio","imageAlt","success","destroy","textbox","off","_audioEnded","styles","wrapper","inputWrapper","imageWrapper","cssText","style","css","kendoTextBox","data","_inputWrapper","wrap","parent","prepend","captchaImage","find","append","_tabindex","_attachImageErrorHandler","one","type","nameAttr","idInput","ns","after","buttonsWrapper","_audioButton","_resetButton","button","iconButton","buttonIcon","resetIcon","bind","audioIcon","_audioHandler","focusResetButton","deferred","Deferred","_resetCaptcha","_toggleSuccessMessage","_progress","_callHandler","done","fail","args","reject","promise","console","error","msg","_playAudio","_validate","_error","requestEnd","_requestEnd","url","cache","jqXHR","textStatus","errorThrown","resolve","_canPlayWav","audioElement","Audio","volume","_audioVolume","_showVolumeControl","play","_canPlayWithPlugin","_createEmbedElement","src","objectElement","document","createElement","setAttribute","_audioPlugin","width","height","position","top","left","volumeControlWrapper","volumeControlElm","_isRtl","kendoSlider","min","max","smallStep","largeStep","orientation","showButtons","tickPlacement","tooltip","enabled","change","activeElement","is","remove","pause","_canPlayAudio","canPlayType","replace","_getPlugin","testNavigatorPlugins","plugins","navigator","i","length","indexOf","testActiveXAvailability","objectName","ActiveXObject","e","toggle","idAttr","successMessage","removeAttr","_toggleButtons","prop","toggleClass","loading","disabled","_toggleSkeleton","skeleton","before","support","isRtl","getCaptchaId","toJSON","obj","validate","isValid","enable","readonly","speak","plugin","hidden","jQuery"],"sources":["kendo.captcha.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.slider.js';\nimport './kendo.textbox.js';\nimport './kendo.skeletoncontainer.js';\n\nvar __meta__ = {\n        id: \"captcha\",\n        name: \"Captcha\",\n        category: \"web\",\n        description: \"The Captcha widget displays captcha validation image and an input so that user case be validated against captcha value.\",\n        depends: [\"core\", \"slider\", \"textbox\", \"skeletoncontainer\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            extend = $.extend,\n            ajax = $.ajax,\n            isFunction = kendo.isFunction,\n\n            STRING = \"string\",\n\n            DOT = \".\",\n            NS = DOT + \"kendoCaptcha\",\n\n            CLICK = \"click\",\n            BLUR = \"blur\",\n\n            CHANGE = \"change\",\n            REQUEST_START = \"requestStart\",\n            REQUEST_END = \"requestEnd\",\n            ERROR = \"error\";\n\n        var CaptchaStyles = {\n            wrapper: \"k-widget k-captcha\",\n            textbox: \"k-textbox\",\n            button: \"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n            buttonIcon: \"k-button-icon\",\n            iconButton: \"k-icon-button\",\n            resetIcon: \"k-icon k-i-reload\",\n            audioIcon: \"k-icon k-i-volume-up\",\n            disabled: \"k-disabled\",\n            inputWrapper: \"k-captcha-input k-vstack\",\n            imageWrapper: \"k-captcha-image-wrap k-hstack\",\n            captchaImage: \"k-captcha-image\",\n            buttonsWrapper: \"k-captcha-image-controls k-vstack\",\n            volumeControlWrapper: \"k-captcha-volume-control k-vstack k-pos-absolute\",\n            hidden: \"k-hidden\",\n            success: \"k-captcha-validation-message k-text-success\",\n            loading: \"k-captcha-loading\"\n        };\n\n        var Captcha = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._captchaField = that.options.dataCaptchaField;\n                that._valueField = that.element.attr(\"name\") || \"captcha\";\n                that._captchaIdField = that.options.dataCaptchaIdField;\n\n                that._wrapper();\n                that._idInput();\n                that._captchaImage();\n\n                if (that.options.audioButton || that.options.resetButton) {\n                    that._buttons();\n\n                }\n\n                if (!that.options.captcha || !that.options.captchaId) {\n                    that._resetHandler();\n                }\n\n                if (that.options.validateOnBlur) {\n                    that.element.on(BLUR + NS, function() {\n                        that._validationHandler();\n                    });\n                }\n\n                that.element.on(CHANGE + NS, function(ev) {\n                    delete that._isValid;\n                    that.trigger(CHANGE, { value: that.element.val(), originalEvent: ev });\n                });\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE,\n                REQUEST_START,\n                REQUEST_END,\n                ERROR\n            ],\n\n            options: {\n                name: \"Captcha\",\n                dataCaptchaField: \"captcha\",\n                dataCaptchaIdField: \"captchaId\",\n                captchaId: \"\",\n                captcha: null,\n                handler: null,\n                audioHandler: null,\n                validationHandler: null,\n                validateOnBlur: false,\n                resetButton: true,\n                audioButton: true,\n                volumeControl: true,\n                messages: {\n                    reset: \"Reset captcha\",\n                    audio: \"Speak captcha\",\n                    imageAlt: \"Type the Captcha code from the image\",\n                    success: \"Verification successful\"\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.textbox.destroy();\n\n                if (that.resetButton) {\n                    that.resetButton.off(NS);\n                }\n\n                if (that.audioButton) {\n                    that.audioButton.off(NS);\n                }\n\n                that.element.off(NS);\n\n                // Just in case, destroy slider.\n                that._audioEnded();\n\n                Widget.fn.destroy.call(that);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    styles = Captcha.styles,\n                    wrapper = \"<div class='\" + styles.wrapper + \"'><div class='\" + styles.inputWrapper + \"'></div></div>\",\n                    imageWrapper = \"<div class='\" + styles.imageWrapper + \"'></div>\",\n                    cssText = that.element[0].style.cssText;\n\n                that.element.css(\"width\", \"auto\");\n                that.element.css(\"height\", \"auto\");\n                that.textbox = that.element.kendoTextBox().data(\"kendoTextBox\");\n                that._inputWrapper = that.textbox.wrapper;\n                that.wrapper = that._inputWrapper.wrap(wrapper).parent().parent();\n                that.wrapper[0].style.cssText = cssText;\n                that.imageWrapper = $(imageWrapper);\n                that.wrapper.prepend(that.imageWrapper);\n            },\n\n            _captchaImage: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    styles = Captcha.styles;\n\n\n                that.captchaImage = $(\"<div class=\\\"\" + styles.captchaImage + \"\\\">\" +\n                                        \"<img alt=\\\"\" + messages.imageAlt + \"\\\" src= \\\"\" + (options.captcha || \"\") + \"\\\"/>\" +\n                                    \"</div>\").find(\"img\");\n\n                that.imageWrapper.append(that.captchaImage.parent());\n\n                that._tabindex(that.captchaImage);\n\n                that._attachImageErrorHandler();\n            },\n\n            _attachImageErrorHandler: function() {\n                var that = this;\n\n                that.captchaImage.off(\"error\");\n                that.captchaImage.one(\"error\", function(ev) {\n                    that.trigger(ERROR, { type: \"image\", originalEvent: ev });\n                });\n            },\n\n            _idInput: function() {\n                var that = this,\n                    options = that.options,\n                    nameAttr = that._captchaIdField;\n\n                that.idInput = $(\"<input type=\\\"hidden\\\" name=\\\"\" + nameAttr + \"\\\" value=\\\"\" + options.captchaId + \"\\\" data-\" + kendo.ns + \"stop=\\\"true\\\" />\");\n                that._inputWrapper.after(that.idInput);\n            },\n\n            _buttons: function() {\n                var that = this,\n                    styles = Captcha.styles;\n\n                that.buttonsWrapper = $(\"<div class=\\\"\" + styles.buttonsWrapper + \"\\\"></div>\");\n                that.imageWrapper.append(that.buttonsWrapper);\n\n                if (that.options.audioButton) {\n                    that._audioButton();\n                }\n\n                if (that.options.resetButton) {\n                    that._resetButton();\n                }\n            },\n\n            _resetButton: function() {\n                var that = this,\n                    messages = that.options.messages,\n                    styles = Captcha.styles;\n\n                that.resetButton = $(\"<button type=\\\"button\\\" title=\\\"\" + messages.reset + \"\\\" class=\\\"\" + styles.button + \" \" + styles.iconButton + \"\\\">\" +\n                                        \"<span class=\\\"\" + styles.buttonIcon + \" \" + styles.resetIcon + \"\\\"></span>\" +\n                                    \"</button>\");\n\n                that.buttonsWrapper.append(that.resetButton);\n\n                that.resetButton.on(CLICK + NS, that._resetHandler.bind(that, true));\n            },\n\n            _audioButton: function() {\n                var that = this,\n                    messages = that.options.messages,\n                    styles = Captcha.styles;\n\n                that.audioButton = $(\"<button type=\\\"button\\\" title=\\\"\" + messages.audio + \"\\\" class=\\\"\" + styles.button + \" \" + styles.iconButton + \"\\\">\" +\n                                        \"<span class=\\\"\" + styles.buttonIcon + \" \" + styles.audioIcon + \"\\\"></span>\" +\n                                    \"</button>\");\n\n                that.buttonsWrapper.append(that.audioButton);\n\n                that.audioButton.on(CLICK + NS, that._audioHandler.bind(that));\n            },\n\n            _resetHandler: function(focusResetButton) {\n                var that = this,\n                    handler = that.options.handler,\n                    deferred = $.Deferred(),\n                    success = that._resetCaptcha.bind(that, deferred);\n\n                delete that._isValid;\n                that._toggleSuccessMessage(false);\n                that._audioEnded();\n                that._progress(true);\n\n                if (!handler) {\n                    window.console.error(\"Captcha's handler option is not defined!\");\n                    deferred.reject({ msg: \"Captcha's handler option is not defined!\", error: \"handler_not_defined\" });\n                    that._progress(false);\n                    return deferred.promise();\n                }\n\n                that._callHandler(\"reset\", handler, success)\n                    .done(function() {\n                        if (focusResetButton) {\n                            that.resetButton.trigger(\"focus\");\n                        }\n                    })\n                    .fail(function(args) {\n                        that._progress(false);\n                        deferred.reject(args);\n                    });\n                return deferred.promise();\n            },\n\n            _audioHandler: function() {\n                var that = this,\n                    handler = that.options.audioHandler,\n                    deferred = $.Deferred(),\n                    success = that._playAudio.bind(that, deferred),\n                    data = {};\n\n                data[that._captchaIdField] = that.idInput.val();\n\n                if (!handler) {\n                    window.console.error(\"Captcha's audioHandler option is not defined!\");\n                    deferred.reject({ msg: \"Captcha's audioHandler option is not defined!\", error: \"handler_not_defined\" });\n                    return deferred.promise();\n                }\n\n                that._callHandler(\"audio\", handler, success, data).fail(deferred.reject);\n                return deferred.promise();\n            },\n\n            _validationHandler: function() {\n                var that = this,\n                    handler = that.options.validationHandler,\n                    deferred = $.Deferred(),\n                    success = that._validate.bind(that, deferred),\n                    data = {};\n\n                delete that._isValid;\n\n                data[that._captchaIdField] = that.idInput.val();\n                data[that._valueField] = that.element.val();\n\n                if (!handler) {\n                    window.console.error(\"Captcha's validationHandler option is not defined!\");\n                    deferred.reject({ msg: \"Captcha's validationHandler option is not defined!\", error: \"handler_not_defined\" });\n                    return deferred.promise();\n                }\n\n                that._callHandler(\"validation\", handler, success, data).fail(deferred.reject);\n                return deferred.promise();\n            },\n\n            _callHandler: function(type, handler, success, data) {\n                var that = this,\n                    error = that._error.bind(that, type),\n                    requestEnd = that._requestEnd.bind(that, type),\n                    args;\n\n                if (isFunction(handler)) {\n                    handler({ success: success, data: data });\n                    return $.Deferred().promise();\n                } else {\n                    args = typeof handler === STRING ? { url: handler, cache: false } : extend({}, handler);\n                    args.success = success;\n                    args.data = extend({}, data, args.data);\n\n                    if (!that.trigger(REQUEST_START, { type: type, data: data })) {\n                        return ajax(args).done(requestEnd).fail(error);\n                    }\n                }\n            },\n\n            _requestEnd: function(type, data) {\n                var that = this;\n                that.trigger(REQUEST_END, { type: type, data: data });\n            },\n\n            _error: function(type, jqXHR, textStatus, errorThrown) {\n                var that = this;\n                that.trigger(ERROR, { type: type, jqXHR: jqXHR, textStatus: textStatus, errorThrown: errorThrown });\n            },\n\n            _resetCaptcha: function(deferred, data) {\n                var that = this,\n                    id = data[that._captchaIdField],\n                    captcha = data[that._captchaField];\n\n                that.idInput.val(id);\n                that.captchaImage.attr(\"src\", captcha || \"\");\n\n                that.captchaImage.off(\"load\");\n                that.captchaImage.one(\"load\", function() {\n                    that._progress(false);\n                });\n\n                that._attachImageErrorHandler();\n\n                deferred.resolve(data);\n            },\n\n            _playAudio: function(deferred, data) {\n                var that = this;\n\n                if (that._canPlayWav()) {\n                    if (that.audioElement) {\n                        return;\n                    }\n\n                    that.audioElement = new Audio(data);\n                    that.audioElement.volume = that._audioVolume || that.audioElement.volume;\n\n                    if (that.options.volumeControl) {\n                        $(that.audioElement).on(\"loadeddata\" + NS, function() {\n                            that._showVolumeControl(that.audioElement.volume);\n                        });\n                    }\n\n                    $(that.audioElement).on(\"ended\" + NS + \" error\" + NS, that._audioEnded.bind(that, deferred));\n\n                    that.audioElement.play();\n                } else if (that._canPlayWithPlugin()) {\n                    if (that.audioElement) {\n                        that.audioElement.play();\n                        return;\n                    }\n\n                    that.audioElement = that._createEmbedElement(data);\n                    that.wrapper.append(that.audioElement);\n                }\n            },\n\n            _createEmbedElement: function(src) {\n                var that = this,\n                    objectElement = document.createElement(\"embed\");\n\n                objectElement.setAttribute(\"src\", src);\n                objectElement.setAttribute(\"autostart\", \"true\");\n                objectElement.setAttribute(\"pluginspage\", that._audioPlugin);\n                objectElement.setAttribute(\"enablejavascript\", \"true\");\n                objectElement.setAttribute(\"type\", \"audio/wav\");\n                objectElement.setAttribute(\"tabIndex\", \"-1\");\n\n                objectElement.style.width = \"0px\";\n                objectElement.style.height = \"0px\";\n                objectElement.style.position = \"absolute\";\n                objectElement.style.top = 0;\n                objectElement.style.left = 0;\n\n                return objectElement;\n            },\n\n            _showVolumeControl: function(volume) {\n                var that = this,\n                    styles = Captcha.styles,\n                    volumeControlWrapper = $(\"<div class=\\\"\" + styles.volumeControlWrapper + \"\\\"></div>\");\n\n                if (that.volumeControl) {\n                    return;\n                }\n\n                that.volumeControlElm = $(\"<input />\");\n                that.volumeControlWrapper = volumeControlWrapper.append(that.volumeControlElm);\n                that.imageWrapper.append(volumeControlWrapper);\n                that.volumeControlWrapper.css(that._isRtl() ? \"right\" : \"left\", that.wrapper.width());\n\n                that.volumeControl = that.volumeControlElm.kendoSlider({\n                    min: 0,\n                    max: 1,\n                    smallStep: 0.1,\n                    largeStep: 0.5,\n                    orientation: \"vertical\",\n                    showButtons: false,\n                    tickPlacement: \"none\",\n                    value: volume,\n                    tooltip: {\n                        enabled: false\n                    },\n                    change: function(ev) {\n                        that._audioVolume = that.audioElement.volume = ev.value;\n                    }\n                }).data(\"kendoSlider\");\n            },\n\n            _audioEnded: function(deferred) {\n                var that = this;\n\n                if ($(document.activeElement).is(\"a.k-draghandle\")) {\n                    that.audioButton.trigger(\"focus\");\n                }\n\n                if (that.volumeControl) {\n                    that.volumeControl.destroy();\n                    that.volumeControl.wrapper.remove();\n                    delete that.volumeControl;\n                    that.volumeControlElm.remove();\n                    that.volumeControlWrapper.remove();\n                    delete that.volumeControlElm;\n                    delete that.volumeControlWrapper;\n                }\n\n                if (that.audioElement) {\n                    that.audioElement.pause();\n                }\n\n                $(that.audioElement).off(NS);\n                $(that.audioElement).remove();\n                delete that.audioElement;\n\n                if (deferred && deferred.resolve) {\n                    deferred.resolve();\n                }\n            },\n\n            _canPlayWav: function() {\n                var that = this,\n                    audio;\n\n                if (that._canPlayAudio) {\n                    return that._canPlayAudio;\n                }\n\n                audio = new Audio();\n                that._canPlayAudio = audio.canPlayType(\"audio/wav\").replace(/no/gi, \"\") !== \"\";\n\n                return that._canPlayAudio;\n            },\n\n            _canPlayWithPlugin: function() {\n                var that = this;\n\n                if (that._audioPlugin) {\n                    return that._audioPlugin;\n                }\n\n                that._audioPlugin = that._getPlugin();\n                return that._audioPlugin;\n            },\n\n            _getPlugin: function() {\n                var testNavigatorPlugins = function(name) {\n                    var plugins = navigator.plugins;\n                    for (var i = 0; i < plugins.length; i++) {\n\n                        var pluginName = plugins[i].name;\n\n                        if (pluginName.indexOf(name) !== -1) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n\n                var testActiveXAvailability = function(objectName) {\n                    try {\n                        var control = new window.ActiveXObject(objectName);\n                        return !!control;\n                    } catch (e) {\n                        return false;\n                    }\n                };\n\n                if (testActiveXAvailability('QuickTime.QuickTime') ||\n                    testActiveXAvailability('QuickTimeCheckObject.QuickTimeCheck') ||\n                    testNavigatorPlugins(\"QuickTime Plug-in\")) {\n                        return \"http://www.apple.com/quicktime/download/\";\n                }\n\n                if (testActiveXAvailability('WMPlayer.OCX') || testNavigatorPlugins(\"Windows Media\")) {\n                    return \"http://www.microsoft.com/Windows/MediaPlayer\";\n                }\n            },\n\n            _validate: function(deferred, data) {\n                var that = this;\n                that._isValid = data;\n                that._toggleSuccessMessage(that._isValid);\n                deferred.resolve(data);\n            },\n\n            _toggleSuccessMessage: function(toggle) {\n                var that = this,\n                    idAttr = (that.element.attr(\"id\") || that.element.attr(\"name\")) + \"-success\",\n                    messages = that.options.messages;\n\n                $(that.successMessage).remove();\n                that.element.removeAttr(\"aria-describedby\");\n\n                if (toggle) {\n                    that.successMessage = $(\"<span id=\\\"\" + idAttr + \"\\\" class=\\\"\" + Captcha.styles.success + \"\\\">\" + messages.success + \"</span>\");\n                    that._inputWrapper.after(that.successMessage);\n                    that.element.attr(\"aria-describedby\", idAttr);\n                }\n            },\n\n            _toggleButtons: function(toggle) {\n                var that = this;\n\n                if (that.resetButton) {\n                    that.resetButton.prop(\"disabled\", !toggle);\n                }\n\n                if (that.audioButton) {\n                    that.audioButton.prop(\"disabled\", !toggle);\n                }\n            },\n\n            _progress: function(toggle) {\n                var that = this;\n\n                that.wrapper.toggleClass(Captcha.styles.loading, toggle);\n                that._inputWrapper.toggleClass(Captcha.styles.disabled, toggle);\n                that._toggleButtons(!toggle);\n                that._toggleSkeleton(toggle);\n            },\n\n            _toggleSkeleton: function(toggle) {\n                var that = this;\n\n                if (that.skeleton) {\n                    that.skeleton.remove();\n                }\n\n                if (toggle) {\n                    that.skeleton = $(\"<span class='k-skeleton k-skeleton-rect k-skeleton-pulse' style=\\\"width: 100%; height: 100%;\\\"></span>\");\n                    that.captchaImage.before(that.skeleton);\n                }\n            },\n\n            _isRtl: function() {\n                return kendo.support.isRtl(this.wrapper);\n            },\n\n            value: function() {\n                return this.element.val();\n            },\n\n            getCaptchaId: function() {\n                return this.idInput.val();\n            },\n\n            toJSON: function() {\n                var that = this,\n                    obj = {};\n\n                obj[that._valueField] = that.value();\n                obj[that._captchaIdField] = that.getCaptchaId();\n\n                return obj;\n            },\n\n            validate: function() {\n                return this._validationHandler();\n            },\n\n            isValid: function() {\n                return this._isValid;\n            },\n\n            enable: function(toggle) {\n                var that = this;\n\n                toggle = toggle !== false;\n\n                that._toggleButtons(toggle);\n\n                that.textbox.enable(toggle);\n\n                if (toggle) {\n                    that.captchaImage.removeAttr(\"tabIndex\");\n                    that._tabindex(that.captchaImage);\n                } else {\n                    that.captchaImage.attr(\"tabIndex\", \"-1\");\n                }\n\n                that.captchaImage.toggleClass(Captcha.styles.disabled, !toggle);\n                that.wrapper.toggleClass(Captcha.styles.disabled, !toggle);\n            },\n\n            readonly: function(toggle) {\n                var that = this;\n\n                toggle = toggle !== false;\n\n                if (that.resetButton) {\n                    that.resetButton.prop(\"disabled\", toggle);\n                }\n\n                that.textbox.readonly(toggle);\n            },\n\n            speak: function() {\n                return this._audioHandler();\n            },\n\n            reset: function() {\n                return this._resetHandler();\n            }\n        });\n\n        kendo.ui.plugin(Captcha);\n\n        extend(true, Captcha, { styles: CaptchaStyles });\n\n    })(window.kendo.jQuery);\n"]}