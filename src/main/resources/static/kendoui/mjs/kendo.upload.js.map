{"version":3,"file":"kendo.upload.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","antiForgeryTokens","logToConsole","rFileExtension","NS","SELECT","UPLOAD","SUCCESS","ERROR","COMPLETE","CANCEL","CLEAR","PAUSE","RESUME","PROGRESS","REMOVE","INVALIDMAXFILESIZE","INVALIDMINFILESIZE","INVALIDFILEEXTENSION","FOCUS_STATE","TABINDEX","headerStatusIcon","Upload","extend","init","element","options","that","this","fn","call","multiple","directory","localization","activeInput","wrapper","closest","length","_wrapInput","_activeInput","toggle","enabled","ns","_ns","guid","on","_onParentFormSubmit","bind","_onParentFormReset","_initUploadModule","_toggleDropZone","_onFileAction","_onClearSelected","_onUploadSelected","_onKeyDown","_focusout","val","_onInputChange","target","events","showFileList","template","files","async","autoRetryAfter","bufferChunkSize","maxAutoRetries","removeVerb","autoUpload","withCredentials","accept","useArrayBuffer","select","cancel","retry","remove","pause","resume","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","invalidFiles","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusPaused","headerStatusUploaded","uploadSuccess","uploadFail","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","allowedExtensions","maxFileSize","minFileSize","dropZone","saveUrl","_module","_supportsFormData","formDataUploadModule","iframeUploadModule","_async","initialFiles","_renderInitialFiles","syncUploadModule","setOptions","off","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","trigger","destroy","customDropZone","document","add","fileEntry","onPause","pauseIcon","find","removeClass","addClass","parent","onResume","playIcon","upload","onSaveSelected","getFiles","filesData","allFiles","listItems","i","data","j","push","clearAllFiles","each","index","file","_removeFileByDomElement","removeAllFiles","removeFileByUid","uid","_removeFileByUid","clearFileByUid","shouldSendRemoveRequest","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","input","clone","insertAfter","prefix","hide","removeAttr","e","preventDefault","_adjustFocusState","focusedItem","toFocus","_arrowKeyNavigation","key","kendoKeys","keys","DOWN","stopPropagation","first","next","UP","prev","RIGHT","LEFT","_preventFocusRemove","_asyncCommandKeyNavigation","eventArgs","_retryClicked","ESC","_checkAllComplete","SPACEBAR","ENTER","is","chunkSize","concurrent","finish","show","metaData","prepareChunk","onRetry","_commandKeyNavigation","hasValidationErrors","_filesContainValidationErrors","headers","DELETE","TAB","commandKeys","keyCode","indexOf","assignGuidToFiles","_inputFiles","_isAsyncNonBatch","validateFiles","onSelect","_readDirectory","item","deferred","Deferred","dirReader","createReader","allFolderFiles","readEntries","entries","concat","resolve","reject","promise","_readFile","fullpath","fullPath","relativePath","slice","droppedFolderFiles","droppedFolderCounter","setTimeout","_proceedDroppedItems","_traverseFileTree","skipCounter","then","items","isFile","isDirectory","_onDrop","dt","originalEvent","dataTransfer","droppedFiles","stopEvent","directoryDrop","webkitGetAsEntry","entry","getAllFileInfo","splice","hasErrors","batch","idx","currentFile","_enqueueFile","fileNames","_supportsRemove","_fileAction","_prepareTemplateData","templateData","totalSize","size","_prepareDefaultSingleFileEntryTemplate","fileSize","getTotalFilesSizeMessage","fileGroup","getFileGroup","extension","errors","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","removeEventArgs","fileUid","fileList","appendTo","angular","elements","width","_removeFileEntry","allCompletedFiles","allInvalidFiles","_hideActionButtons","fileElement","actionKey","skipClear","firstActionButton","classDictionary","iconsClassDictionary","hasOwnProperty","_clearFileAction","append","_renderAction","_fileState","stateKey","currentState","uploading","text","uploaded","failed","actionClass","actionText","iconClass","empty","button","icon","_onFileProgress","percentComplete","prepend","getFileEntry","_onUploadSuccess","response","xhr","fileInfo","operation","XMLHttpRequest","_setUploadErrorState","after","_hideUploadProgress","_onUploadError","module","responseText","_decreasePosition","_autoRetryAfter","retries","performUpload","uploadPercentage","_updateUploadProgress","fileMetaData","totalChunks","Math","round","delay","fadeOut","css","_showActionButtons","actionsWrapper","uploadButton","clearButton","_showHeaderUploadStatus","isUploading","headerUploadStatus","failedUploads","headerUploadStatusIcon","currentlyUploading","not","currentlyInvalid","currentlyFailed","currentlyPaused","html","onAbort","value","windows","_userAgent","support","browser","opera","safari","_supportsDrop","userAgent","toLowerCase","test","navigator","_setupDropZone","dropEffect","bindDragEventWrappers","_bindDocumentDragEventWrappers","_setupCustomDropZone","removeUrl","_submitRemove","onSuccess","onError","removeField","params","jQuery","ajax","type","dataType","dataFilter","normalizeJSON","url","traditional","success","error","xhrFields","hasLabel","wrap","inputFiles","prototype","filesContainErrors","relatedInput","getFileName","iframes","_frameId","prepareUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","fileValidation","cleanupFrame","unregisterFrame","body","dataInput","prependTo","one","onIframeLoad","submit","started","isFileUploadStarted","contents","ex","processResponse","fakeXHR","tryParseJSON","jsonResult","statusText","status","stopFrameSubmit","removeUploadedFile","action","stop","execCommand","grep","position","cancelled","paused","map","join","$input","slashIndex","lastIndexOf","substr","getFileExtension","rawFiles","fileName","rawFile","htmlEncode","matches","match","unique","validationInfo","extensions","ext","substring","validateFileExtension","validateFileSize","validationErrors","inArray","toFixed","shouldRemoveFileEntry","textStatus","json","JSON","parse","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","Date","setInterval","clearInterval","sourceElement","fileEntries","enqueueFiles","filesLength","webkitRelativePath","formData","createFormData","createXHR","removeFileEntry","populateFormData","FileReader","postFormData","reader","onload","fileArrayBuffer","_appendBuffer","result","err","onerror","readAsArrayBuffer","_getCurrentChunk","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","filter","prevEntry","stopUploadRequest","_increaseChunkIndex","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","FormData","chunk","serializedMetaData","stringify","raiseError","cleanupFileEntry","_resetChunkIndex","uploadComplete","isUploadButtonVisible","loaded","total","abort","chunkIndex","contentType","ceil","uploadUid","_decreaseChunkIndex","methodToInvoke","oldPosition","_getChunker","mozSlice","webkitSlice","plugin"],"sources":["kendo.upload.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\n\nvar __meta__ = {\n    id: \"upload\",\n    name: \"Upload\",\n    category: \"web\",\n    description: \"The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.\",\n    depends: [ \"core\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        antiForgeryTokens = kendo.antiForgeryTokens,\n        logToConsole = kendo.logToConsole,\n        rFileExtension = /\\.([^\\.]+)$/,\n        NS = \".kendoUpload\",\n        SELECT = \"select\",\n        UPLOAD = \"upload\",\n        SUCCESS = \"success\",\n        ERROR = \"error\",\n        COMPLETE = \"complete\",\n        CANCEL = \"cancel\",\n        CLEAR = \"clear\",\n        PAUSE = \"pause\",\n        RESUME = \"resume\",\n        PROGRESS = \"progress\",\n        REMOVE = \"remove\",\n        VALIDATIONERRORS = \"validationErrors\",\n        INVALIDMAXFILESIZE = \"invalidMaxFileSize\",\n        INVALIDMINFILESIZE = \"invalidMinFileSize\",\n        INVALIDFILEEXTENSION = \"invalidFileExtension\",\n        PROGRESSHIDEDELAY = 1000,\n        PROGRESSHIDEDURATION = 2000,\n        FOCUS_STATE = \"k-focus\",\n        TABINDEX = \"tabindex\";\n\n    var headerStatusIcon = {\n        loading: \"k-i-upload\",\n        warning: \"k-i-warning\",\n        success: \"k-i-check\"\n    };\n\n    var Upload = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.name = element.name;\n            that.multiple = that.options.multiple;\n            that.directory = that.options.directory;\n            that.localization = that.options.localization;\n\n            var activeInput = that.element;\n            that.wrapper = activeInput.closest(\".k-upload\");\n            if (that.wrapper.length === 0) {\n                that.wrapper = that._wrapInput(activeInput);\n            }\n\n            that._activeInput(activeInput);\n            that.toggle(that.options.enabled);\n\n            var ns = that._ns = NS + \"-\" + kendo.guid();\n            activeInput.closest(\"form\")\n                .on(\"submit\" + ns, that._onParentFormSubmit.bind(that))\n                .on(\"reset\" + ns, that._onParentFormReset.bind(that));\n\n            that._initUploadModule();\n\n            that._toggleDropZone();\n\n            that.wrapper\n                .on(\"click\", \".k-upload-action\", that._onFileAction.bind(that))\n                .on(\"click\", \".k-clear-selected\", that._onClearSelected.bind(that))\n                .on(\"click\", \".k-upload-selected\", that._onUploadSelected.bind(that))\n                .on(\"keydown\", that._onKeyDown.bind(that))\n                .on(\"focusout\", that._focusout.bind(that));\n\n            if (that.element.val()) {\n                that._onInputChange({ target: that.element });\n            }\n        },\n\n        events: [\n            SELECT,\n            UPLOAD,\n            SUCCESS,\n            ERROR,\n            COMPLETE,\n            CANCEL,\n            CLEAR,\n            PROGRESS,\n            REMOVE,\n            PAUSE,\n            RESUME\n        ],\n\n        options: {\n            name: \"Upload\",\n            enabled: true,\n            multiple: true,\n            directory: false,\n            showFileList: true,\n            template: \"\",\n            files: [],\n            async: {\n                autoRetryAfter: 0,\n                bufferChunkSize: 10000000,\n                maxAutoRetries: 1,\n                removeVerb: \"POST\",\n                autoUpload: true,\n                withCredentials: true,\n                accept: \"*/*; q=0.5, application/json\",\n                useArrayBuffer: false\n            },\n            localization: {\n                \"select\": \"Select files...\",\n                \"cancel\": \"Cancel\",\n                \"retry\": \"Retry\",\n                \"remove\": \"Remove\",\n                \"pause\": \"Pause\",\n                \"resume\": \"Resume\",\n                \"clearSelectedFiles\": \"Clear\",\n                \"uploadSelectedFiles\": \"Upload\",\n                \"dropFilesHere\": \"Drop files here to upload\",\n                \"invalidFiles\": \"Invalid file(s). Please check file upload requirements.\",\n                \"statusUploading\": \"uploading\",\n                \"statusUploaded\": \"uploaded\",\n                \"statusWarning\": \"warning\",\n                \"statusFailed\": \"failed\",\n                \"headerStatusUploading\": \"Uploading...\",\n                \"headerStatusPaused\": \"Paused\",\n                \"headerStatusUploaded\": \"Done\",\n                \"uploadSuccess\": \"File(s) uploaded successfully.\",\n                \"uploadFail\": \"File(s) failed to upload.\",\n                \"invalidMaxFileSize\": \"File size too large.\",\n                \"invalidMinFileSize\": \"File size too small.\",\n                \"invalidFileExtension\": \"File type not allowed.\"\n            },\n            validation: {\n                allowedExtensions: [],\n                maxFileSize: 0,\n                minFileSize: 0\n            },\n            dropZone: \"\"\n        },\n\n        _initUploadModule: function() {\n            var that = this,\n                options = that.options;\n\n            if (options.async.saveUrl) {\n                that._module = that._supportsFormData() ?\n                new formDataUploadModule(that) :\n                new iframeUploadModule(that);\n                that._async = true;\n\n                var initialFiles = options.files;\n                if (initialFiles.length > 0) {\n                    that._renderInitialFiles(initialFiles);\n                }\n\n            } else {\n                that._module = new syncUploadModule(that);\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                activeInput = that.element;\n\n            $(that.options.dropZone).off(that._ns);\n\n            Widget.fn.setOptions.call(that, options);\n\n            that.multiple = that.options.multiple;\n            that.directory = that.options.directory;\n\n            activeInput.attr(\"multiple\", that._supportsMultiple() ? that.multiple : false);\n            if (that.directory) {\n                activeInput.attr(\"webkitdirectory\", that.directory);\n                activeInput.attr(\"directory\", that.directory);\n            }\n            that.toggle(that.options.enabled);\n\n            that._initUploadModule();\n\n            that._toggleDropZone();\n        },\n\n        enable: function(enable) {\n            enable = typeof (enable) === \"undefined\" ? true : enable;\n            this.toggle(enable);\n        },\n\n        disable: function() {\n            this.toggle(false);\n        },\n\n        toggle: function(enable) {\n            enable = typeof (enable) === \"undefined\" ? enable : !enable;\n            this.wrapper.toggleClass(\"k-disabled\", enable);\n            this.element.prop(\"disabled\", enable);\n        },\n\n        focus: function() {\n            this.element.trigger(\"focus\");\n        },\n\n        destroy: function() {\n            var that = this;\n            var customDropZone = $(that.options.dropZone);\n\n            $(document)\n                .add($(\".k-dropzone\", that.wrapper))\n                .add(that.wrapper.closest(\"form\"))\n                .off(that._ns);\n\n            if (customDropZone.length > 0) {\n                customDropZone.off(that._ns);\n            }\n\n            $(that.element).off(NS);\n\n            Widget.fn.destroy.call(that);\n        },\n        pause: function(fileEntry) {\n            this._module.onPause({ target: $(fileEntry, this.wrapper) });\n\n            var pauseIcon = fileEntry.find(\".k-i-pause-sm\");\n            pauseIcon.removeClass(\"k-i-pause-sm\").addClass(\"k-i-play-sm\").attr(\"title\", this.localization.resume);\n            $(pauseIcon).parent().attr(\"aria-label\", this.localization.resume);\n        },\n        resume: function(fileEntry) {\n            this._module.onResume({ target: $(fileEntry, this.wrapper) });\n\n            var playIcon = fileEntry.find(\".k-i-play-sm\");\n            playIcon.removeClass(\"k-i-play-sm\").addClass(\"k-i-pause-sm\").attr(\"title\", this.localization.pause);\n            $(playIcon).parent().attr(\"aria-label\", this.localization.pause);\n        },\n        upload: function() {\n            var that = this;\n\n            that._module.onSaveSelected();\n        },\n\n        getFiles: function() {\n            var that = this;\n            var filesData;\n            var allFiles = [];\n            var listItems = that.wrapper.find(\".k-file\");\n\n            for (var i = 0; i < listItems.length; i++) {\n                filesData = $(listItems[i]).data(\"fileNames\");\n\n                if (filesData) {\n                    for (var j = 0; j < filesData.length; j++) {\n                        allFiles.push(filesData[j]);\n                    }\n                }\n            }\n\n            return allFiles;\n        },\n\n        clearAllFiles: function() {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n\n            files.each(function(index, file) {\n                that._removeFileByDomElement(file, false);\n            });\n        },\n\n        removeAllFiles: function() {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n\n            files.each(function(index, file) {\n                that._removeFileByDomElement(file, true);\n            });\n        },\n\n        removeFileByUid: function(uid) {\n            this._removeFileByUid(uid, true);\n        },\n\n        clearFileByUid: function(uid) {\n            this._removeFileByUid(uid, false);\n        },\n\n        _removeFileByUid: function(uid, shouldSendRemoveRequest) {\n            var that = this;\n            var fileEntry;\n\n            if (typeof uid !== 'string') { return; }\n\n            fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n\n            if (fileEntry.length > 0) {\n                that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n            }\n        },\n\n        clearFile: function(callback) {\n            this._removeFile(callback, false);\n        },\n\n        removeFile: function(callback) {\n            this._removeFile(callback, true);\n        },\n\n        _removeFile: function(callback, shouldSendRemoveRequest) {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n            var fileData;\n\n            if (typeof callback === \"function\") {\n                files.each(function(index, file) {\n                    fileData = $(file).data(\"fileNames\");\n\n                    if (callback(fileData)) {\n                        that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                    }\n                });\n            }\n        },\n\n        _removeFileByDomElement: function(fileEntry, shouldSendRemoveRequest) {\n            var that = this;\n            var fileData = {\n                target: $(fileEntry, that.wrapper)\n            };\n            var allFiles;\n\n            if (that.options.async.saveUrl) {\n                if ($(fileEntry).hasClass(\"k-file-progress\")) {\n                    that._module.onCancel(fileData);\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n\n                allFiles = $(\".k-file\", that.wrapper);\n\n                if (allFiles.length === 0) {\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            } else {\n                that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n            }\n        },\n\n        _addInput: function(sourceInput) {\n            //check if source input is a DOM element. Required for some unit tests\n            if (!sourceInput[0].nodeType) {\n                return;\n            }\n\n            var that = this,\n                input = sourceInput.clone().val(\"\");\n\n            input\n                .insertAfter(that.element)\n                .data(\"kendo\" + that.options.prefix + that.options.name, that);\n\n            $(that.element)\n                .hide()\n                .attr(TABINDEX, \"-1\")\n                .removeAttr(\"id\")\n                .off(NS);\n\n            that._activeInput(input);\n            that.element.trigger(\"focus\");\n        },\n\n        _activeInput: function(input) {\n            var that = this,\n                wrapper = that.wrapper;\n\n            that.element = input;\n\n            if (that.directory) {\n                input.attr(\"webkitdirectory\", that.directory);\n                input.attr(\"directory\", that.directory);\n            }\n\n            input\n                .attr(\"multiple\", that._supportsMultiple() ? that.multiple : false)\n                .attr(\"autocomplete\", \"off\")\n                .on(\"click\" + NS, function(e) {\n                    if (wrapper.hasClass(\"k-disabled\")) {\n                        e.preventDefault();\n                    }\n                })\n                .on(\"focus\" + NS, function() {\n                    $(this).parent().addClass(FOCUS_STATE);\n                })\n                .on(\"blur\" + NS, function() {\n                    $(this).parent().removeClass(FOCUS_STATE);\n                })\n                .on(\"change\" + NS, that._onInputChange.bind(that));\n        },\n\n        _adjustFocusState: function(focusedItem, toFocus) {\n            focusedItem.removeClass(FOCUS_STATE);\n            focusedItem.attr(TABINDEX, -1);\n            toFocus.addClass(FOCUS_STATE);\n            toFocus.attr(TABINDEX, 0);\n        },\n\n        _arrowKeyNavigation: function(e, key, focusedItem) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                toFocus;\n\n            if (key === kendoKeys.DOWN) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                toFocus = that.wrapper.find(\".k-upload-files .k-file\").first();\n\n                if (focusedItem.length > 0) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        focusedItem = focusedItem.closest(\".k-file\");\n                    }\n\n                    toFocus = focusedItem.next();\n                }\n\n                that._adjustFocusState(focusedItem, toFocus);\n\n                if (!toFocus || toFocus.length === 0) {\n                    toFocus = that.wrapper.find(\".k-clear-selected\");\n                }\n            } else if (key === kendoKeys.UP) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                toFocus = that.wrapper.find(\".k-upload-files .k-file:last\");\n\n                if (focusedItem.length > 0) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        focusedItem = focusedItem.closest(\".k-file\");\n                    }\n\n                    toFocus = focusedItem.prev();\n                }\n\n                that._adjustFocusState(focusedItem, toFocus);\n            } else if (key === kendoKeys.RIGHT) {\n                if (focusedItem.hasClass(\"k-upload-action\")) {\n                    toFocus = focusedItem.next(\".k-upload-action\");\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = focusedItem.parent().find(\".k-upload-action:first\");\n                    }\n                } else if (focusedItem.length > 0) {\n                    toFocus = focusedItem.find(\".k-upload-action:first\");\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    toFocus.addClass(FOCUS_STATE);\n                }\n            } else if (key === kendoKeys.LEFT) {\n                if (focusedItem.hasClass(\"k-upload-action\")) {\n                    toFocus = focusedItem.prev(\".k-upload-action\");\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = focusedItem.parent().find(\".k-upload-action:last\");\n                    }\n                } else if (focusedItem.length > 0) {\n                    toFocus = focusedItem.find(\".k-upload-action:last\");\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    toFocus.addClass(FOCUS_STATE);\n                }\n            }\n\n            if ((!toFocus || toFocus.length === 0) && (key === kendoKeys.UP || key === kendoKeys.DOWN)) {\n                toFocus = that.element;\n            }\n\n            if (toFocus && toFocus.length > 0) {\n                that._preventFocusRemove = true;\n                toFocus.trigger(\"focus\");\n            }\n        },\n\n        _asyncCommandKeyNavigation: function(key, focusedItem, eventArgs) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                fileEntry = $(focusedItem, that.wrapper);\n\n            that._retryClicked = false;\n\n            if (key === kendoKeys.ESC && focusedItem.find(\".k-i-cancel\").length > 0) {\n                that.trigger(CANCEL, eventArgs);\n                that._module.onCancel({ target: fileEntry });\n                that._checkAllComplete();\n                that._updateHeaderUploadStatus();\n                that._preventFocusRemove = true;\n                that.element.trigger(\"focus\");\n            } else if (key === kendoKeys.SPACEBAR) {\n                if (focusedItem.find(\".k-i-pause-sm\").length > 0) {\n                    that.trigger(PAUSE, eventArgs);\n                    that.pause(focusedItem);\n                    that._updateHeaderUploadStatus();\n                } else if (focusedItem.find(\".k-i-play-sm\").length > 0) {\n                    that.trigger(RESUME, eventArgs);\n                    that.resume(focusedItem);\n                }\n            } else if (key === kendoKeys.ENTER && !focusedItem.is(\".k-file-progress, .k-file-success, .k-file-invalid\")) {\n                if (that.options.async.chunkSize && !that.options.async.concurrent && $('.k-file-progress', that.wrapper).length > 0) {\n                    return;\n                }\n\n                $(\".k-i-warning\", focusedItem).remove();\n                $(\".k-progressbar\", focusedItem).finish().show();\n\n                if (!that._module.metaData[fileEntry.data(\"uid\")]) {\n                    that._module.prepareChunk(fileEntry);\n                }\n\n                that._module.onRetry({ target: fileEntry });\n                that._retryClicked = true;\n            }\n        },\n\n        _commandKeyNavigation: function(key, focusedItem) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                files = focusedItem.data(\"fileNames\"),\n                hasValidationErrors = that._filesContainValidationErrors(files),\n                eventArgs = {\n                    files: files,\n                    headers: {}\n                };\n\n            if (key === kendoKeys.DELETE) {\n                if (!that.trigger(REMOVE, eventArgs)) {\n                    that._module.onRemove({ target: $(focusedItem, that.wrapper) }, eventArgs, !hasValidationErrors);\n                    that._preventFocusRemove = true;\n                    that.element.trigger(\"focus\");\n                }\n            } else if (key === kendoKeys.TAB) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n            } else if (!!that.options.async.saveUrl) {\n                that._asyncCommandKeyNavigation(key, focusedItem, eventArgs);\n            }\n        },\n\n        _focusout: function() {\n            var focusedItem = this.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE);\n\n            if (!this._preventFocusRemove) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n            } else {\n                this._preventFocusRemove = false;\n            }\n        },\n\n        _onKeyDown: function(e) {\n            var that = this,\n                focusedItem = that.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE + \",\" + \".k-upload-action.\" + FOCUS_STATE),\n                kendoKeys = kendo.keys,\n                commandKeys = [kendoKeys.DELETE, kendoKeys.ESC, kendoKeys.ENTER, kendoKeys.SPACEBAR, kendoKeys.TAB],\n                key = e.keyCode;\n\n            if (key === kendoKeys.DOWN || key === kendoKeys.UP || key === kendoKeys.LEFT || key === kendoKeys.RIGHT) {\n                that._arrowKeyNavigation(e, key, focusedItem);\n            } else if (focusedItem.length > 0 && focusedItem.hasClass(\"k-file\") && commandKeys.indexOf(key) > -1 && !that.wrapper.hasClass(\"k-disabled\")) {\n                if (key === kendoKeys.SPACEBAR) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n\n                that._commandKeyNavigation(key, focusedItem);\n            }\n        },\n\n        _onInputChange: function(e) {\n            var that = this;\n            var input = $(e.target);\n            var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n\n            validateFiles(files, that.options.validation);\n\n            var prevented = that.trigger(SELECT, { files: files });\n            if (prevented) {\n                that._addInput(input);\n                input.remove();\n            } else {\n                that._module.onSelect({ target: input }, files);\n            }\n        },\n\n        _readDirectory: function(item) {\n            var deferred = new $.Deferred();\n            var dirReader = item.createReader();\n            var allFolderFiles = [];\n\n            var readEntries = function() {\n                dirReader.readEntries(function(entries) {\n                    if (!entries.length) {\n                        deferred.resolve(allFolderFiles);\n                    } else {\n                        allFolderFiles = allFolderFiles.concat(entries);\n                        readEntries();\n                    }\n                }, deferred.reject);\n            };\n\n            readEntries();\n\n             return deferred.promise();\n        },\n\n        _readFile: function(item) {\n            var that = this;\n            var fullpath = item.fullPath;\n\n            item.file(function(file) {\n                    file.relativePath = fullpath.slice(1);\n                    that.droppedFolderFiles.push(file);\n                    that.droppedFolderCounter --;\n                    if (that.droppedFolderCounter === 0) {\n                        setTimeout(function() {\n                            if (that.droppedFolderCounter === 0) {\n                                if (that.droppedFolderFiles.length) {\n                                    that._proceedDroppedItems(that.droppedFolderFiles);\n                                    that.droppedFolderFiles = [];\n                                }\n                            }\n                        },0);\n                    }\n            }, function() {\n                logToConsole(\"File error.\");\n            });\n        },\n\n        _traverseFileTree: function(item, skipCounter) {\n            var that = this;\n            if (!skipCounter) {\n                that.droppedFolderCounter--;\n            }\n\n            this._readDirectory(item).then(function(items) {\n                that.droppedFolderCounter += items.length;\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].isFile) {\n                        that._readFile(items[i]);\n                    } else if (items[i].isDirectory) {\n                        that._traverseFileTree(items[i]);\n                    }\n                }\n            });\n        },\n\n        _onDrop: function(e) {\n            var dt = e.originalEvent.dataTransfer;\n            var that = this;\n            var droppedFiles = dt.files;\n            var length;\n\n            stopEvent(e);\n           if (that.options.directoryDrop && dt.items) {\n                length = dt.items.length;\n                that.droppedFolderCounter = 0;\n                that.droppedFolderFiles = [];\n\n                for (var i = 0; i < length; i++) {\n                    if (dt.items[i].webkitGetAsEntry) {\n                        var entry = dt.items[i].webkitGetAsEntry();\n\n                        if (entry.isDirectory) {\n                            that._traverseFileTree(entry, true);\n                        } else if (entry.isFile) {\n                            that.droppedFolderFiles.push(dt.files[i]);\n                        }\n                    } else {\n                         that._proceedDroppedItems(droppedFiles);\n                    }\n                }\n           } else {\n               that._proceedDroppedItems(droppedFiles);\n           }\n        },\n\n        _proceedDroppedItems: function(droppedFiles) {\n            var that = this;\n            var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n\n              if (droppedFiles.length > 0 && !that.wrapper.hasClass(\"k-disabled\")) {\n                if (!that.multiple && files.length > 1) {\n                    files.splice(1, files.length - 1);\n                }\n\n                validateFiles(files, that.options.validation);\n\n                var prevented = that.trigger(SELECT, { files: files });\n                if (!prevented) {\n                    that._module.onSelect({ target: $(\".k-dropzone\", that.wrapper) }, files);\n                }\n            }\n        },\n\n        _filesContainValidationErrors: function(files) {\n            var hasErrors = false;\n\n            $(files).each(function(index, file) {\n                if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                    hasErrors = true;\n                    return false;\n                }\n            });\n\n            return hasErrors;\n        },\n\n        _isAsyncNonBatch: function() {\n            return (this._async && !this.options.async.batch) || false;\n        },\n\n        _renderInitialFiles: function(files) {\n            var that = this;\n            var idx = 0;\n            files = assignGuidToFiles(files, true);\n\n            for (idx = 0; idx < files.length; idx++) {\n                var currentFile = files[idx];\n\n                var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [ currentFile ] });\n                fileEntry.addClass(\"k-file-success\").data(\"files\", [ files[idx] ]);\n\n                if (that._supportsRemove()) {\n                    that._fileAction(fileEntry, REMOVE);\n                }\n            }\n        },\n\n        _prepareTemplateData: function(name, data) {\n            var filesData = data.fileNames,\n                templateData = {},\n                totalSize = 0,\n                idx = 0;\n\n            for (idx = 0; idx < filesData.length; idx++) {\n                totalSize += filesData[idx].size;\n            }\n\n            templateData.name = name;\n            templateData.size = totalSize;\n            templateData.files = data.fileNames;\n\n            return templateData;\n        },\n\n        _prepareDefaultSingleFileEntryTemplate: function(data) {\n            var that = this;\n            var file = data.fileNames[0];\n            var fileSize = getTotalFilesSizeMessage(data.fileNames);\n            var fileGroup = kendo.getFileGroup(file.extension, true);\n            var errors = file[VALIDATIONERRORS];\n            var template = \"\";\n\n            if (errors && errors.length > 0) {\n                template += \"<li class='k-file k-file-invalid'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div>\" +\n                \"<span class='k-file-invalid-group-wrapper'>\" +\n                    \"<span class='k-file-group k-icon k-i-\" + fileGroup + \"'></span>\" +\n                    \"<span class='k-file-state'></span>\" +\n                \"</span>\" +\n                \"<span class='k-file-name-size-wrapper'>\" +\n                    \"<span class='k-file-name k-file-name-invalid' title='\" + file.name + \"'>\" + file.name + \"</span>\" +\n                    \"<span class='k-file-validation-message !k-text-error'>\" + that.localization[errors[0]] + \"</span>\" +\n                \"</span>\";\n            } else {\n                template += \"<li class='k-file'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div>\" +\n                \"<span class='k-file-group-wrapper'>\" +\n                    \"<span class='k-file-group k-icon k-i-\" + fileGroup + \"'></span>\" +\n                    \"<span class='k-file-state'></span>\" +\n                \"</span>\" +\n                \"<span class='k-file-name-size-wrapper'><span class='k-file-name' title='\" + file.name + \"'>\" + file.name + \"</span>\" +\n                \"<span class='k-file-size'>\" + fileSize + \"</span></span>\";\n            }\n\n            template += \"<strong class='k-upload-status'></strong>\";\n\n            return $(template);\n        },\n\n        _prepareDefaultMultipleFileEntriesTemplate: function(data) {\n            var that = this;\n            var files = data.fileNames;\n            var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n            var totalFileSize = getTotalFilesSizeMessage(files);\n            var template = \"\";\n            var i, currentFile;\n\n            if (filesHaveValidationErrors) {\n                template += \"<li class='k-file k-file-invalid'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div>\" +\n                    \"<span class='k-multiple-files-invalid-group-wrapper'>\" +\n                    \"<span class='k-file-group k-icon k-i-files'></span>\";\n            } else {\n                template += \"<li class='k-file'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div>\" +\n                    \"<span class='k-multiple-files-group-wrapper'>\" +\n                        \"<span class='k-file-group k-icon k-i-files'></span>\";\n            }\n\n            template += \"<span class='k-file-state'></span></span>\";\n\n            files.sort(function(a, b) {\n                if (a[VALIDATIONERRORS]) { return -1; }\n\n                if (b[VALIDATIONERRORS]) { return 1; }\n\n                return 0;\n            });\n\n            template += \"<span class='k-multiple-files-wrapper'>\";\n            for (i = 0; i < files.length; i++) {\n                currentFile = files[i];\n                var fileSize = getTotalFilesSizeMessage([currentFile]);\n\n                template += \"<span class='k-file-name-size-wrapper'>\";\n                if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                    template += \"<span class='k-file-name k-file-name-invalid' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                } else {\n                    template += \"<span class='k-file-name' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                }\n                template += \"<span class='k-file-size'>\" + fileSize + \"</span></span>\";\n            }\n\n            if (filesHaveValidationErrors) {\n                template += \"<span class='k-file-validation-message !k-text-error'>\" + that.localization.invalidFiles + \"</span>\";\n            } else {\n                template += \"<span class='k-file-information'>Total: \" + files.length + \" files, \" + totalFileSize + \"</span>\";\n            }\n\n            template += \"</span><strong class='k-upload-status'></strong>\";\n\n            return $(template);\n        },\n\n        _enqueueFile: function(name, data) {\n            var that = this;\n            var existingFileEntries;\n            var fileEntry;\n            var fileUid = data.fileNames[0].uid;\n            var fileList = $(\".k-upload-files\", that.wrapper);\n            var options = that.options;\n            var template = options.template;\n            var templateData;\n            var removeEventArgs;\n\n            if (fileList.length === 0) {\n                fileList = $(\"<ul class='k-upload-files k-reset'></ul>\").appendTo(that.wrapper);\n                if (!that.options.showFileList) {\n                    fileList.hide();\n                }\n\n                that.wrapper.removeClass(\"k-upload-empty\");\n            }\n\n            existingFileEntries = $(\".k-file\", fileList);\n\n            if (!template) {\n                if (data.fileNames.length === 1) {\n                    fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                } else {\n                    fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                }\n            } else {\n                templateData = that._prepareTemplateData(name, data);\n                template = kendo.template(template);\n\n                fileEntry = $(\"<li class='k-file'>\" + template(templateData) + \"</li>\");\n                fileEntry.find(\".k-upload-action\").addClass(\"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n\n                that.angular(\"compile\", function() {\n                    return {\n                        elements: fileEntry,\n                        data: [ templateData ]\n                    };\n                });\n            }\n\n            fileEntry\n                .attr(kendo.attr(\"uid\"), fileUid)\n                .appendTo(fileList)\n                .data(data);\n\n            if (!that._async) {\n                $(\".k-progress\", fileEntry).width('100%');\n            }\n\n            if (!that.multiple && existingFileEntries.length > 0) {\n                removeEventArgs = {\n                    files: existingFileEntries.data(\"fileNames\"),\n                    headers: {}\n                };\n                if (!that.trigger(REMOVE, removeEventArgs)) {\n                    that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                }\n            }\n\n            return fileEntry;\n        },\n\n        _removeFileEntry: function(fileEntry) {\n            var that = this;\n            var fileList = fileEntry.closest(\".k-upload-files\");\n            var allFiles, allCompletedFiles, allInvalidFiles;\n\n            fileEntry.remove();\n            allFiles = $(\".k-file\", fileList);\n            allCompletedFiles = $(\".k-file-success, .k-file-error\", fileList);\n            allInvalidFiles = $(\".k-file-invalid\", fileList);\n\n            if (allCompletedFiles.length === allFiles.length || allInvalidFiles.length === allFiles.length) {\n                this._hideActionButtons();\n            }\n\n            if (allFiles.length === 0) {\n                fileList.remove();\n                that.wrapper.addClass(\"k-upload-empty\");\n                that._hideHeaderUploadstatus();\n            } else {\n                that._updateHeaderUploadStatus();\n            }\n        },\n\n        _fileAction: function(fileElement, actionKey, skipClear) {\n            var classDictionary = { remove: \"k-i-x\", cancel: \"k-i-cancel\", retry: \"k-i-retry\", pause: \"k-i-pause-sm\" };\n            var iconsClassDictionary = { remove: \"k-i-close\", cancel: \"k-i-cancel\", retry: \"k-i-reload-sm\", pause: \"k-i-pause-sm\" };\n            var firstActionButton;\n\n            if (!classDictionary.hasOwnProperty(actionKey)) {\n                return;\n            }\n            if (!skipClear) {\n                this._clearFileAction(fileElement);\n            }\n            if (!this.options.template) {\n                if (!skipClear) {\n                    fileElement.find(\".k-upload-status .k-upload-action\").remove();\n                }\n                fileElement.find(\".k-upload-status\").append(\n                    this._renderAction(classDictionary[actionKey], this.localization[actionKey], iconsClassDictionary[actionKey])\n                );\n            } else {\n                firstActionButton = fileElement.find(\".k-upload-action\").first();\n                if (!firstActionButton.find(\".k-icon\").length) {\n                firstActionButton\n                        .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                        .append(\"<span class='k-button-icon k-icon \" + iconsClassDictionary[actionKey] + \" \" + classDictionary[actionKey] +\n                                \"' title='\" + this.localization[actionKey] + \"'\" +\n                                \"aria-label='\" + this.localization[actionKey] + \"'></span>\")\n                        .show();\n                } else if (firstActionButton.next(\".k-upload-action\").length) {\n                    firstActionButton.next(\".k-upload-action\")\n                        .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                        .append(\"<span class='k-button-icon k-icon \" + iconsClassDictionary[actionKey] + \" \" + classDictionary[actionKey] +\n                                \"' title='\" + this.localization[actionKey] + \"'\" +\n                                \"aria-label='\" + this.localization[actionKey] + \"'></span>\")\n                        .show();\n                }\n            }\n        },\n\n        _fileState: function(fileEntry, stateKey) {\n            var localization = this.localization,\n                states = {\n                    uploading: {\n                        text: localization.statusUploading\n                    },\n                    uploaded: {\n                        text: localization.statusUploaded\n                    },\n                    failed: {\n                        text: localization.statusFailed\n                    }\n                },\n                currentState = states[stateKey];\n\n            if (currentState) {\n                $(\"span.k-file-state\", fileEntry).text(currentState.text);\n            }\n        },\n\n        _renderAction: function(actionClass, actionText, iconClass) {\n            if (actionClass !== \"\") {\n                return $(\n                \"<button type='button' class='k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-upload-action' aria-label='\" + actionText + \"' tabindex='-1'>\" +\n                    \"<span class='k-button-icon k-icon \" + iconClass + \" \" + actionClass + \"' title='\" + actionText + \"'></span>\" +\n                \"</button>\"\n                ).on(\"focus\", function() { $(this).addClass(FOCUS_STATE); })\n                 .on(\"blur\", function() { $(this).removeClass(FOCUS_STATE); });\n            }\n            else {\n                return $(\n                \"<button type='button' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'>\" +\n                    '<span class=\"k-button-text\">' +\n                        actionText +\n                    '</span>' +\n                \"</button>\"\n                );\n            }\n        },\n\n        _clearFileAction: function(fileElement) {\n            $(\".k-upload-action\", fileElement).empty().hide();\n        },\n\n        _onFileAction: function(e) {\n            var that = this;\n            if (!that.wrapper.hasClass(\"k-disabled\")) {\n                var button = $(e.target).closest(\".k-upload-action\");\n                var icon = button.find(\".k-icon\");\n                var fileEntry = button.closest(\".k-file\");\n                var files = fileEntry.data(\"fileNames\");\n                var hasValidationErrors = that._filesContainValidationErrors(files);\n                var eventArgs = {\n                    files: files,\n                    headers: {}\n                };\n\n                that._retryClicked = false;\n\n                if (icon.hasClass(\"k-i-x\")) {\n                    if (!that.trigger(REMOVE, eventArgs)) {\n                        that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        that.element.trigger(\"focus\");\n                    }\n                } else if (icon.hasClass(\"k-i-cancel\")) {\n                    that.trigger(CANCEL, eventArgs);\n                    that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                    that._checkAllComplete();\n                    that._updateHeaderUploadStatus();\n                    that.element.trigger(\"focus\");\n                } else if (icon.hasClass(\"k-i-pause-sm\")) {\n                    that.trigger(PAUSE, eventArgs);\n                    that.pause(fileEntry);\n                    that._updateHeaderUploadStatus();\n                } else if (icon.hasClass(\"k-i-play-sm\")) {\n                    that.trigger(RESUME, eventArgs);\n                    that.resume(fileEntry);\n                } else if (icon.hasClass(\"k-i-retry\")) {\n                    $(\".k-i-warning\", fileEntry).remove();\n                    $(\".k-progressbar\", fileEntry).finish().show();\n                    that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                    that._retryClicked = true;\n                }\n\n                fileEntry.addClass(FOCUS_STATE);\n            }\n\n            return false;\n        },\n\n        _onUploadSelected: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            if (!wrapper.hasClass(\"k-disabled\")) {\n                this._module.onSaveSelected();\n            }\n\n            return false;\n        },\n\n        _onClearSelected: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            var clearEventArgs = { };\n            if (!wrapper.hasClass(\"k-disabled\") && !that.trigger(CLEAR, clearEventArgs)) {\n                that.clearAllFiles();\n            }\n\n            return false;\n        },\n\n        _onFileProgress: function(e, percentComplete) {\n            var progressPct;\n\n            if (percentComplete > 100) {\n                percentComplete = 100;\n            }\n\n            $(\".k-progressbar\", e.target).removeClass('k-hidden');\n\n            if (!this.options.template) {\n                progressPct = $(\".k-upload-pct\", e.target);\n\n                if (progressPct.length === 0) {\n                    $(\".k-upload-status\", e.target).prepend(\"<span class='k-upload-pct'></span>\");\n                }\n\n                if (percentComplete !== 100) {\n                    $(\".k-upload-pct\", e.target).text(percentComplete + \"%\");\n                } else {\n                     $(\".k-upload-pct\", e.target).remove();\n                }\n                $(\".k-progress\", e.target).width(percentComplete + \"%\");\n            } else {\n                $(\".k-progress\", e.target).width(percentComplete + \"%\");\n            }\n\n            this.trigger(PROGRESS, {\n                files: getFileEntry(e).data(\"fileNames\"),\n                percentComplete: percentComplete\n            });\n        },\n\n        _onUploadSuccess: function(e, response, xhr) {\n            var that = this;\n            var fileEntry = getFileEntry(e);\n            var files = fileEntry.data(\"fileNames\");\n            var fileInfo = fileEntry.find('.k-file-information');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            var prevented = that.trigger(SUCCESS, {\n                files: fileEntry.data(\"fileNames\"),\n                response: response,\n                operation: \"upload\",\n                XMLHttpRequest: xhr\n            });\n\n            if (prevented) {\n                that._setUploadErrorState(fileEntry);\n            } else {\n                that._fileState(fileEntry, \"uploaded\");\n                fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n\n                if (fileInfo.length > 0) {\n                    fileInfo.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message !k-text-success\">' + files.length + ' ' + that.localization.uploadSuccess + '</span>');\n                } else if (fileSize.length > 0) {\n                    fileSize.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message !k-text-success\">' + that.localization.uploadSuccess + '</span>');\n                }\n\n                that._updateHeaderUploadStatus();\n\n                if (that._supportsRemove()) {\n                    that._fileAction(fileEntry, REMOVE);\n                } else {\n                    that._clearFileAction(fileEntry);\n                }\n            }\n\n            that._hideUploadProgress(fileEntry);\n\n            that._checkAllComplete();\n        },\n\n        _onUploadError: function(e, xhr) {\n            var that = this;\n            var module = that._module;\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n\n            that._setUploadErrorState(fileEntry);\n\n            that.trigger(ERROR, {\n                operation: \"upload\",\n                files: fileEntry.data(\"fileNames\"),\n                XMLHttpRequest: xhr\n            });\n\n            logToConsole(\"Server response: \" + xhr.responseText);\n\n            if (!that.options.async.chunkSize) {\n                that._hideUploadProgress(fileEntry);\n            } else {\n                if (module._decreasePosition) {\n                    module._decreasePosition(fileUid);\n                }\n            }\n\n           that._checkAllComplete();\n\n            if (this.options.async.autoRetryAfter) {\n               this._autoRetryAfter(fileEntry);\n            }\n        },\n        _autoRetryAfter: function(fileEntry) {\n            var that = this;\n            var retries = this._module.retries;\n\n            if (!retries) {\n                return;\n            }\n\n            if (!retries[fileEntry.data(\"uid\")]) {\n                retries[fileEntry.data(\"uid\")] = 1;\n            }\n\n            if (retries[fileEntry.data(\"uid\")] <= this.options.async.maxAutoRetries) {\n                retries[fileEntry.data(\"uid\")]++;\n                setTimeout(function() {\n                    that._module.performUpload(fileEntry);\n                },this.options.async.autoRetryAfter);\n            }\n        },\n        _setUploadErrorState: function(fileEntry) {\n            var that = this,\n                uploadPercentage,\n                files = fileEntry.data(\"fileNames\"),\n                fileInfo = fileEntry.find('.k-file-information'),\n                fileSize = fileEntry.find('.k-file-size');\n\n            that._fileState(fileEntry, \"failed\");\n            fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n\n            if (fileInfo.length > 0) {\n                fileInfo.addClass('k-hidden')\n                    .after('<span class=\"k-file-validation-message !k-text-error\">' + files.length + ' ' + that.localization.uploadFail + '</span>');\n            } else if (fileSize.length > 0) {\n                fileSize.addClass('k-hidden')\n                    .after('<span class=\"k-file-validation-message !k-text-error\">' + that.localization.uploadFail + '</span>');\n            }\n\n            that._updateUploadProgress(fileEntry);\n\n            uploadPercentage = $('.k-upload-pct', fileEntry);\n\n            if (uploadPercentage.length > 0) {\n                uploadPercentage.remove();\n            }\n\n            this._updateHeaderUploadStatus();\n            this._fileAction(fileEntry, \"retry\");\n            this._fileAction(fileEntry, REMOVE, true);\n\n            if (that._retryClicked) {\n                fileEntry.trigger(\"focus\");\n            }\n        },\n\n       _updateUploadProgress: function(fileEntry) {\n            var that = this;\n\n            if (!that.options.async.chunkSize) {\n                $('.k-progress', fileEntry).width(\"100%\");\n            } else {\n                var fileUid = fileEntry.data(\"uid\");\n                if (that._module.metaData) {\n                    var fileMetaData = that._module.metaData[fileUid];\n\n                    if (fileMetaData) {\n                        var percentComplete = fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n\n                        that._onFileProgress({ target: $(fileEntry, that.wrapper) }, percentComplete);\n                    }\n                }\n            }\n        },\n\n        _hideUploadProgress: function(fileEntry) {\n            $(\".k-progressbar\", fileEntry)\n                .delay(PROGRESSHIDEDELAY)\n                .fadeOut(PROGRESSHIDEDURATION, function() {\n                    $(this).find('.k-progress').css(\"width\", \"0%\");\n                });\n        },\n\n        _showActionButtons: function() {\n            var that = this;\n            var actionsWrapper = $(\".k-action-buttons\", that.wrapper);\n            var uploadButton = $(\".k-upload-selected\", that.wrapper);\n            var clearButton = $(\".k-clear-selected\", that.wrapper);\n\n            if (uploadButton.length === 0) {\n                uploadButton = that._renderAction(\"\", this.localization.uploadSelectedFiles)\n                                   .addClass(\"k-upload-selected\")\n                                   .addClass(\"k-button-solid-primary\")\n                                   .removeClass(\"k-button-solid-base\");\n\n                clearButton = that._renderAction(\"\", this.localization.clearSelectedFiles)\n                                  .addClass(\"k-clear-selected\");\n            }\n\n            if (!actionsWrapper.length) {\n                actionsWrapper = $(\"<div />\")\n                    .addClass(\"k-action-buttons\")\n                    .append(clearButton, uploadButton);\n            }\n\n\n            this.wrapper.append(actionsWrapper);\n        },\n\n        _hideActionButtons: function() {\n            $(\".k-action-buttons\", this.wrapper).remove();\n        },\n\n        _showHeaderUploadStatus: function(isUploading) {\n            var that = this;\n            var localization = that.localization;\n            var dropZone = $(\".k-dropzone\", that.wrapper);\n            var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n\n            if (headerUploadStatus.length !== 0) {\n                headerUploadStatus.remove();\n            }\n\n            $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n\n            headerUploadStatus = '<strong class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></strong>';\n\n            if (isUploading) {\n                headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploading);\n                headerUploadStatus.find(\".k-icon\").addClass(headerStatusIcon.loading);\n            } else {\n                headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploaded);\n                headerUploadStatus.find(\".k-icon\").addClass(headerStatusIcon.warning);\n            }\n\n            if (dropZone.length > 0) {\n                dropZone.append(headerUploadStatus);\n            } else {\n                $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n            }\n        },\n\n        _updateHeaderUploadStatus: function() {\n            var that = this;\n            var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n            var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error, .k-file-invalid');\n            var currentlyInvalid = $('.k-file-invalid', that.wrapper);\n            var currentlyFailed = $('.k-file-error', that.wrapper);\n            var currentlyPaused = $('.k-file', that.wrapper).find(\".k-i-play-sm\");\n            var failedUploads, headerUploadStatusIcon;\n\n            if (currentlyPaused.length &&\n            (currentlyPaused.length === currentlyUploading.length || !that.options.async.concurrent)) {\n                headerUploadStatusIcon = $('.k-icon', headerUploadStatus)\n                                .removeClass()\n                                .addClass(\"k-icon\")\n                                .addClass(\"k-i-pause-sm\");\n\n                headerUploadStatus.html(headerUploadStatusIcon)\n                                  .append(that.localization.headerStatusPaused);\n            } else if (currentlyUploading.length === 0 || currentlyInvalid.length > 0 || currentlyFailed.length > 0) {\n                failedUploads = $('.k-file.k-file-error, .k-file.k-file-invalid', that.wrapper);\n\n                headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass().addClass(\"k-icon\")\n                                              .addClass(failedUploads.length !== 0 ? headerStatusIcon.warning : headerStatusIcon.success);\n\n                headerUploadStatus.html(headerUploadStatusIcon)\n                                  .append(that.localization.headerStatusUploaded);\n            }\n        },\n\n        _hideHeaderUploadstatus: function() {\n            var that = this,\n                dropZone = that.options.dropZone;\n\n            $('.k-upload-status-total', this.wrapper).remove();\n\n            if (dropZone === \"\") {\n                $('.k-dropzone-hint', that.wrapper).removeClass('k-hidden');\n            }\n        },\n\n        _onParentFormSubmit: function() {\n            var upload = this,\n                element = upload.element;\n\n            if (typeof this._module.onAbort !== 'undefined') {\n                this._module.onAbort();\n            }\n\n            if (!element.value) {\n                var input = $(element);\n\n                // Prevent submitting an empty input\n                input.attr(\"disabled\", \"disabled\");\n\n                window.setTimeout(function() {\n                    // Restore the input so the Upload remains functional\n                    // in case the user cancels the form submit\n                    input.prop(\"disabled\", false);\n                }, 0);\n            }\n        },\n\n        _onParentFormReset: function() {\n            $(\".k-upload-files\", this.wrapper).remove();\n        },\n\n        _supportsFormData: function() {\n            return typeof(FormData) != \"undefined\";\n        },\n\n        _supportsMultiple: function() {\n            var windows = this._userAgent().indexOf(\"Windows\") > -1;\n\n            return !kendo.support.browser.opera &&\n                   !(kendo.support.browser.safari && windows);\n        },\n\n        _supportsDrop: function() {\n            var userAgent = this._userAgent().toLowerCase();\n            var isChrome = /chrome/.test(userAgent);\n            var isSafari = !isChrome && /safari/.test(userAgent);\n            var isWindowsSafari = isSafari && /windows/.test(userAgent);\n\n            return !isWindowsSafari && this._supportsFormData() && (this.options.async.saveUrl);\n        },\n\n        _userAgent: function() {\n            return navigator.userAgent;\n        },\n\n        _setupDropZone: function() {\n            var that = this;\n\n            var ns = that._ns;\n            var dropZone = $(\".k-dropzone\", that.wrapper)\n\n                .on(\"dragenter\" + ns, stopEvent)\n                .on(\"dragover\" + ns, function(e) {\n                    if (e.originalEvent) {\n                        e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                    }\n                    e.preventDefault();\n                 })\n                .on(\"drop\" + ns, that._onDrop.bind(that));\n\n            if (!dropZone.find(\".k-dropzone-hint\").length) {\n                dropZone.append($(\"<em class='k-dropzone-hint'>\" + that.localization.dropFilesHere + \"</em>\"));\n            }\n\n            bindDragEventWrappers(dropZone, ns,\n                function() {\n                    if (!dropZone.closest('.k-upload').hasClass(\"k-disabled\")) {\n                        dropZone.addClass(\"k-dropzone-hovered\");\n                    }\n                },\n                function() { dropZone.removeClass(\"k-dropzone-hovered\"); });\n\n            that._bindDocumentDragEventWrappers(dropZone);\n        },\n\n        _setupCustomDropZone: function() {\n            var that = this;\n            var dropZone = $(that.options.dropZone);\n\n            if (!that.wrapper.find(\".k-dropzone-hint\").length) {\n                $(\".k-dropzone\", that.wrapper)\n                    .append($(\"<em class='k-dropzone-hint k-hidden'>\" + that.localization.dropFilesHere + \"</em>\"));\n            } else {\n                // Dropzone hint in upload should be hidden if customDropZone is used\n                $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n            }\n\n            var ns = that._ns;\n            dropZone.on(\"dragenter\" + ns, stopEvent)\n                    .on(\"dragover\" + ns, function(e) {\n                        if (e.originalEvent) {\n                            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                        }\n                        e.preventDefault();\n                    })\n                    .on(\"drop\" + ns, that._onDrop.bind(that));\n\n            bindDragEventWrappers(dropZone, ns,\n                function(e) {\n                    if (!that.wrapper.hasClass(\"k-disabled\")) {\n                        dropZone.removeClass(\"k-dropzone-hovered\");\n                        dropZone.addClass(\"k-dropzone-hovered\");\n                        $(e.target).addClass(\"k-dropzone-hovered\");\n                    }\n                },\n                function() {\n                    dropZone.removeClass(\"k-dropzone-hovered\");\n                    dropZone.find('.k-dropzone-hovered').removeClass(\"k-dropzone-hovered\");\n                }\n            );\n\n            that._bindDocumentDragEventWrappers(dropZone);\n        },\n\n        _bindDocumentDragEventWrappers: function(dropZone) {\n            var that = this;\n            var ns = that._ns;\n\n            bindDragEventWrappers($(document), ns,\n                function() {\n                    if (!that.wrapper.hasClass(\"k-disabled\")) {\n                        dropZone.addClass(\"k-dropzone-active\");\n                        dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                        dropZone.find('.k-dropzone-hint').removeClass('k-hidden');\n                    }\n                },\n                function() {\n                    dropZone.removeClass(\"k-dropzone-active\");\n                    dropZone.find('.k-dropzone-hint').addClass('k-hidden');\n                    if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                        dropZone.closest('.k-upload').addClass('k-upload-empty');\n                    }\n                }\n            );\n        },\n\n        _toggleDropZone: function() {\n            var that = this,\n                dropZone = that.options.dropZone;\n\n            if (!that._supportsDrop()) {\n                return;\n            }\n\n            $(dropZone).off(that._ns);\n            $(\".k-dropzone\", that.wrapper).off(that._ns);\n\n            if (dropZone !== \"\") {\n                that._setupCustomDropZone();\n            } else {\n                that._setupDropZone();\n            }\n        },\n\n        _supportsRemove: function() {\n            return !!this.options.async.removeUrl;\n        },\n\n        _submitRemove: function(fileNames, eventArgs, onSuccess, onError) {\n            var upload = this,\n                removeField = upload.options.async.removeField || \"fileNames\",\n                params = $.extend(eventArgs.data, antiForgeryTokens());\n\n            params[removeField] = fileNames;\n\n            jQuery.ajax({\n                  type: this.options.async.removeVerb,\n                  dataType: \"json\",\n                  dataFilter: normalizeJSON,\n                  url: this.options.async.removeUrl,\n                  traditional: true,\n                  data: params,\n                  headers: eventArgs.headers,\n                  success: onSuccess,\n                  error: onError,\n                  xhrFields: {\n                    withCredentials: this.options.async.withCredentials\n                  }\n            });\n        },\n\n        _wrapInput: function(input) {\n            var that = this;\n            var options = that.options;\n            var hasLabel = !!input.attr(\"id\") && $(\"[for='\" + input.attr(\"id\") + \"']\").length > 0;\n\n            input.wrap(\"<div class='k-widget k-upload'><div class='k-dropzone'><div class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button'></div></div></div>\");\n\n            if (!options.async.saveUrl) {\n                input.closest(\".k-upload\").addClass(\"k-upload-sync\");\n            } else {\n                input.closest(\".k-upload\").addClass(\"k-upload-async\");\n            }\n\n            input.closest(\".k-upload\").addClass(\"k-upload-empty\");\n\n            input.closest(\".k-button\")\n                .append(\"<span>\" + that.localization.select + \"</span>\");\n\n            if (!hasLabel && !input.attr(\"aria-label\")) {\n                input.attr(\"aria-label\", that.localization.select);\n            }\n\n            return input.closest(\".k-upload\");\n        },\n\n        _checkAllComplete: function() {\n            if ($(\".k-file.k-file-progress\", this.wrapper).length === 0) {\n                this.trigger(COMPLETE);\n            }\n        },\n\n        _inputFiles: function(sourceInput) {\n            return inputFiles(sourceInput);\n        }\n    });\n\n    // Synchronous upload module\n    var syncUploadModule = function(upload) {\n        this.name = \"syncUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.element\n            .closest(\"form\")\n                .attr(\"enctype\", \"multipart/form-data\")\n                .attr(\"encoding\", \"multipart/form-data\");\n    };\n\n    syncUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var sourceInput = $(e.target);\n            var filesContainErrors = upload._filesContainValidationErrors(files);\n\n            upload._addInput(sourceInput);\n\n            var fileData = { \"fileNames\": files };\n\n            if (filesContainErrors) {\n                sourceInput.remove();\n            } else {\n                fileData.relatedInput = sourceInput;\n            }\n\n            var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n            if (filesContainErrors) {\n                upload._hideUploadProgress(file);\n            }\n\n            upload._fileAction(file, REMOVE);\n        },\n\n        onRemove: function(e) {\n            var fileEntry = getFileEntry(e);\n            var relatedInput = fileEntry.data(\"relatedInput\");\n\n            if (relatedInput) {\n                relatedInput.remove();\n            }\n\n            this.upload._removeFileEntry(fileEntry);\n        }\n    };\n\n    var iframeUploadModule = function(upload) {\n        this.name = \"iframeUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.iframes = [];\n    };\n\n    Upload._frameId = 0;\n\n    iframeUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var sourceInput = $(e.target);\n            var hasValidationErrors = upload._filesContainValidationErrors(files);\n\n            var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n\n            if (upload.options.async.autoUpload) {\n                if (!hasValidationErrors) {\n                    this.performUpload(fileEntry);\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n                    upload._showHeaderUploadStatus(false);\n                }\n            } else {\n                upload._fileAction(fileEntry, REMOVE);\n\n                if (!hasValidationErrors) {\n                    upload._showActionButtons();\n                } else {\n                    upload._updateHeaderUploadStatus();\n                }\n            }\n\n            if (hasValidationErrors) {\n                upload._hideUploadProgress(fileEntry);\n            }\n        },\n\n        prepareUpload: function(sourceInput, files, hasValidationErrors) {\n            var upload = this.upload;\n            var activeInput = $(upload.element);\n            var name = upload.options.async.saveField || sourceInput.attr(\"name\");\n            var fileEntry, fileData, iframe, form;\n\n            upload._addInput(sourceInput);\n            sourceInput.attr(\"name\", name);\n\n            if (!hasValidationErrors) {\n                iframe = this.createFrame(upload.name + \"_\" + Upload._frameId++);\n                this.registerFrame(iframe);\n\n                form = this.createForm(upload.options.async.saveUrl, iframe.attr(\"name\"))\n                           .append(activeInput);\n\n                fileData = { \"frame\": iframe, \"relatedInput\": activeInput, \"fileNames\": files };\n            } else {\n                sourceInput.remove();\n\n                fileData = { \"fileNames\": files };\n            }\n\n            fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n            if (iframe) {\n                iframe.data({ \"form\": form, \"file\": fileEntry });\n            }\n\n            return fileEntry;\n        },\n\n        performUpload: function(fileEntry) {\n            var e = { files: fileEntry.data(\"fileNames\") };\n            var iframe = fileEntry.data(\"frame\");\n            var upload = this.upload;\n            var fileValidation = fileEntry.find('.k-file-validation-message');\n            var fileInfo = fileEntry.find('.k-file-information');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            if (!upload.trigger(UPLOAD, e)) {\n                upload._hideActionButtons();\n                upload._showHeaderUploadStatus(true);\n\n                iframe.appendTo(document.body);\n\n                var form = iframe.data(\"form\")\n                    .attr(\"action\", upload.options.async.saveUrl)\n                    .appendTo(document.body);\n\n                e.data = $.extend({ }, e.data, antiForgeryTokens());\n                for (var key in e.data) {\n                    var dataInput = form.find(\"input[name='\" + key + \"']\");\n                    if (dataInput.length === 0) {\n                        dataInput = $(\"<input>\", { type: \"hidden\", name: key })\n                            .prependTo(form);\n                    }\n                    dataInput.val(e.data[key]);\n                }\n\n                upload._fileAction(fileEntry, CANCEL);\n                upload._fileState(fileEntry, \"uploading\");\n                $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                if (fileValidation.length > 0) {\n                    fileValidation.remove();\n                }\n\n                if (fileInfo.length > 0) {\n                    fileInfo.removeClass('k-hidden');\n                } else if (fileSize.length > 0) {\n                    fileSize.removeClass('k-hidden');\n                }\n\n                iframe\n                    .one(\"load\", this.onIframeLoad.bind(this));\n\n                form[0].submit();\n            } else {\n                upload._removeFileEntry(iframe.data(\"file\"));\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n            }\n        },\n\n        onSaveSelected: function() {\n            var module = this;\n            var upload = module.upload;\n\n            $(\".k-file\", this.element).each(function() {\n                var fileEntry = $(this);\n                var started = isFileUploadStarted(fileEntry);\n                var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                if (!started && !hasValidationErrors) {\n                    module.performUpload(fileEntry);\n                }\n            });\n        },\n\n        onIframeLoad: function(e) {\n            var iframe = $(e.target),\n                responseText;\n\n            try {\n                responseText = iframe.contents().text();\n            } catch (ex) {\n                responseText = \"Error trying to get server response: \" + ex;\n            }\n\n            this.processResponse(iframe, responseText);\n        },\n\n        processResponse: function(iframe, responseText) {\n            var fileEntry = iframe.data(\"file\"),\n                module = this,\n                fakeXHR = {\n                    responseText: responseText\n                };\n            tryParseJSON(responseText,\n                function(jsonResult) {\n                    $.extend(fakeXHR, { statusText: \"OK\", status: \"200\" });\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n\n                    module.cleanupFrame(iframe);\n                    module.unregisterFrame(iframe);\n                },\n                function() {\n                    $.extend(fakeXHR, { statusText: \"error\", status: \"500\" });\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                }\n            );\n        },\n\n        onCancel: function(e) {\n            var iframe = $(e.target).data(\"frame\");\n\n            this.stopFrameSubmit(iframe);\n            this.cleanupFrame(iframe);\n            this.unregisterFrame(iframe);\n            this.upload._removeFileEntry(iframe.data(\"file\"));\n        },\n\n        onRetry: function(e) {\n            var fileEntry = getFileEntry(e);\n            this.performUpload(fileEntry);\n        },\n\n        onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n            var module = this;\n            var upload = module.upload;\n            var fileEntry = getFileEntry(e);\n            var iframe = fileEntry.data(\"frame\");\n\n            if (iframe) {\n                module.unregisterFrame(iframe);\n                upload._removeFileEntry(fileEntry);\n                module.cleanupFrame(iframe);\n            } else {\n                if (fileEntry.hasClass(\"k-file-success\")) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    upload._removeFileEntry(fileEntry);\n                }\n            }\n        },\n\n        onAbort: function() {\n            var element = this.element,\n                module = this;\n\n            $.each(this.iframes, function() {\n                $(\"input\", this.data(\"form\")).appendTo(element);\n                module.stopFrameSubmit(this[0]);\n                this.data(\"form\").remove();\n                this.remove();\n            });\n\n            this.iframes = [];\n        },\n\n        createFrame: function(id) {\n            return $(\n                \"<iframe\" +\n                \" name='\" + id + \"'\" +\n                \" id='\" + id + \"'\" +\n                \" style='display:none;' />\"\n            );\n        },\n\n        createForm: function(action, target) {\n            return $(\n                \"<form enctype='multipart/form-data' method='POST'\" +\n                \" action='\" + action + \"'\" +\n                \" target='\" + target + \"'\" +\n                \"/>\");\n        },\n\n        stopFrameSubmit: function(frame) {\n            if (typeof(frame.stop) != \"undefined\") {\n                frame.stop();\n            } else if (frame.document) {\n                frame.document.execCommand(\"Stop\");\n            }\n        },\n\n        registerFrame: function(frame) {\n            this.iframes.push(frame);\n        },\n\n        unregisterFrame: function(frame) {\n            this.iframes = $.grep(this.iframes, function(value) {\n                return value.attr(\"name\") != frame.attr(\"name\");\n            });\n        },\n\n        cleanupFrame: function(frame) {\n            var form = frame.data(\"form\");\n\n            frame.data(\"file\").data(\"frame\", null);\n\n            setTimeout(function() {\n                form.remove();\n                frame.remove();\n            }, 1);\n        }\n    };\n\n    // FormData upload module\n    var formDataUploadModule = function(upload) {\n        this.name = \"formDataUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.position = {};\n        this.metaData = {};\n        this.cancelled = {};\n        this.resume = {};\n        this.paused = {};\n        this.retries = {};\n    };\n\n    formDataUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var module = this;\n            var sourceElement = $(e.target);\n            var fileEntries = this.prepareUpload(sourceElement, files);\n            var hasValidationErrors;\n            var prev;\n\n            $.each(fileEntries, function(index) {\n                hasValidationErrors = upload._filesContainValidationErrors($(this.data(\"fileNames\")));\n\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        if (upload.options.async.chunkSize) {\n                            module.prepareChunk(this);\n                            prev = this.prev();\n\n                            if (upload.options.async.concurrent || (index === 0 && !prev.length) ||\n                             (index === 0 && prev.hasClass(\"k-file-success\"))) {\n                                module.performUpload(this);\n                            }\n                        } else {\n                            module.performUpload(this);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(this, REMOVE);\n\n                    if (!hasValidationErrors) {\n                        upload._showActionButtons();\n                        this.addClass(\"k-toupload\");\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(this);\n                }\n            });\n        },\n\n        prepareUpload: function(sourceElement, files) {\n            var fileEntries = this.enqueueFiles(files);\n\n            if (sourceElement.is(\"input\")) {\n                $.each(fileEntries, function() {\n                    $(this).data(\"relatedInput\", sourceElement);\n                });\n                sourceElement.data(\"relatedFileEntries\", fileEntries);\n                this.upload._addInput(sourceElement);\n            }\n\n            return fileEntries;\n        },\n\n        enqueueFiles: function(files) {\n            var upload = this.upload;\n            var name;\n            var i;\n            var filesLength = files.length;\n            var currentFile;\n            var fileEntry;\n            var fileEntries = [];\n\n            if (upload.options.async.batch === true) {\n                name = $.map(files, function(file) { return file.name; }).join(\", \");\n\n                if (upload.directory || upload.options.directoryDrop) {\n                    $(files).each(function() {\n                        if (this.rawFile.webkitRelativePath || this.rawFile.relativePath) {\n                            this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath;\n                        }\n                    });\n                }\n\n                fileEntry = upload._enqueueFile(name, { fileNames: files });\n                fileEntry.data(\"files\", files);\n\n                fileEntries.push(fileEntry);\n            } else {\n                for (i = 0; i < filesLength; i++) {\n                    currentFile = files[i];\n                    name = currentFile.name;\n                    if (upload.directory || upload.options.directoryDrop) {\n                        if (currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath) {\n                            currentFile.name = currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath;\n                        }\n                    }\n                    fileEntry = upload._enqueueFile(name, { fileNames: [ currentFile ] });\n                    fileEntry.data(\"files\", [ currentFile ]);\n\n                    fileEntries.push(fileEntry);\n                }\n            }\n\n            return fileEntries;\n        },\n\n        performUpload: function(fileEntry) {\n            var upload = this.upload,\n                formData = this.createFormData(),\n                xhr = this.createXHR(),\n                e = {\n                    files: fileEntry.data(\"fileNames\"),\n                    XMLHttpRequest: xhr\n                },\n                files;\n            var fileValidation = fileEntry.find('.k-file-validation-message');\n            var fileInfo = fileEntry.find('.k-file-information');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            if (!upload.trigger(UPLOAD, e)) {\n                if (fileEntry.find(\".k-i-cancel\").length === 0) {\n                    if (upload.options.async.chunkSize) {\n                        upload._fileAction(fileEntry, PAUSE);\n                    }\n                    upload._fileAction(fileEntry, CANCEL, upload.options.async.chunkSize);\n                }\n\n                if (!upload.wrapper.find(\".k-toupload\").length) {\n                    upload._hideActionButtons();\n                }\n\n                upload._showHeaderUploadStatus(true);\n\n                if (e.formData) {\n                    formData = e.formData;\n                } else {\n                    e.data = $.extend({ }, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        formData.append(key, e.data[key]);\n                    }\n\n                    files = fileEntry.data(\"files\");\n                    if (files) {\n                        this.populateFormData(formData, files);\n                    }\n                }\n\n                upload._fileState(fileEntry, \"uploading\");\n                $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                if (fileValidation.length > 0) {\n                    fileValidation.remove();\n                }\n\n                if (fileInfo.length > 0) {\n                    fileInfo.removeClass('k-hidden');\n                } else if (fileSize.length > 0) {\n                    fileSize.removeClass('k-hidden');\n                }\n\n                if (upload.options.async.useArrayBuffer && window.FileReader) {\n                    this._readFile(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                } else {\n                    this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                }\n            } else {\n                this.removeFileEntry(fileEntry);\n            }\n        },\n\n        _readFile: function(saveUrl, formData, fileEntry, xhr) {\n            var that = this;\n            var upload = that.upload;\n            var file = fileEntry.data(\"files\")[0];\n\n            var reader = new FileReader();\n            reader.onload = function(e) {\n                try {\n                    if (!that.fileArrayBuffer) {\n                        that.fileArrayBuffer = e.target.result;\n                    } else {\n                        that.fileArrayBuffer = that._appendBuffer(that.fileArrayBuffer, e.target.result);\n                    }\n                } catch (err) {\n                    upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                    return;\n                }\n\n                if (that.position[file.uid] > file.size) {\n                    that.postFormData(upload.options.async.saveUrl, that.fileArrayBuffer, fileEntry, xhr);\n                    that.fileArrayBuffer = null;\n                } else {\n                    that._readFile(saveUrl, formData, fileEntry, xhr);\n                }\n            };\n            reader.onerror = function() {\n                upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n            };\n            reader.readAsArrayBuffer(that._getCurrentChunk(file.rawFile, file.uid));\n        },\n\n        _appendBuffer: function(buffer1, buffer2) {\n            var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n\n            tmp.set(new Uint8Array(buffer1), 0);\n            tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n\n            return tmp.buffer;\n        },\n\n        onSaveSelected: function() {\n            var module = this;\n            var upload = module.upload;\n\n            $(\".k-toupload\", this.element).filter(function() {\n                var fileEntry = $(this);\n                var started = isFileUploadStarted(fileEntry);\n                var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                return !started && !hasValidationErrors;\n            }).each(function(index) {\n                var fileEntry = $(this);\n                var prevEntry = fileEntry.prev();\n\n                fileEntry.removeClass(\"k-toupload\");\n                if (upload.options.async.chunkSize) {\n                    module.prepareChunk(fileEntry);\n\n                    if (upload.options.async.concurrent || (index === 0 && !prevEntry.length) ||\n                        (index === 0 && prevEntry.hasClass(\"k-file-success\") || prevEntry.hasClass(\"k-file-error\"))) {\n                        module.performUpload(fileEntry);\n                    }\n                } else {\n                    module.performUpload(fileEntry);\n                }\n            });\n        },\n\n        onCancel: function(e) {\n            var fileEntry = getFileEntry(e);\n\n            if (this.upload.options.async.chunkSize) {\n                this.cancelled[fileEntry.data(\"uid\")] = true;\n            }\n            this.stopUploadRequest(fileEntry);\n            this.removeFileEntry(fileEntry);\n        },\n\n        onPause: function(e) {\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileUid] = async.maxAutoRetries + 1;\n                this.paused[fileUid] = true;\n                this.resume[fileUid] = false;\n            }\n        },\n\n        onResume: function(e) {\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n\n            if (this.upload.options.async.chunkSize) {\n                delete this.paused[fileUid];\n                this.resume[fileUid] = true;\n                this.retries[fileEntry.data(\"uid\")] = 1;\n                this._increaseChunkIndex(fileUid);\n                this.performUpload(fileEntry);\n            }\n        },\n\n        onRetry: function(e) {\n            var fileEntry = getFileEntry(e);\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n                delete this.paused[fileEntry.data(\"uid\")];\n            }\n\n            this.performUpload(fileEntry);\n        },\n\n        onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n            var module = this;\n            var upload = module.upload;\n            var fileEntry = getFileEntry(e);\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n            }\n\n            if (fileEntry.hasClass(\"k-file-success\")) {\n                removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n            } else {\n                module.removeFileEntry(fileEntry);\n            }\n        },\n\n        createXHR: function() {\n            return new XMLHttpRequest();\n        },\n\n        postFormData: function(url, data, fileEntry, xhr) {\n            var module = this;\n\n            fileEntry.data(\"request\", xhr);\n\n            xhr.addEventListener(\"load\", function(e) {\n                module.onRequestSuccess.call(module, e, fileEntry);\n            }, false);\n\n            xhr.addEventListener(ERROR, function(e) {\n                module.onRequestError.call(module, e, fileEntry);\n            }, false);\n\n            xhr.upload.addEventListener(\"progress\", function(e) {\n                module.onRequestProgress.call(module, e, fileEntry);\n            }, false);\n\n            xhr.open(\"POST\", url, true);\n            xhr.withCredentials = this.upload.options.async.withCredentials;\n\n            var accept = this.upload.options.async.accept;\n            if (accept) {\n                xhr.setRequestHeader(\"Accept\", accept);\n            }\n\n            xhr.send(data);\n        },\n\n        createFormData: function() {\n            return new FormData();\n        },\n\n        populateFormData: function(data, files) {\n            var chunk;\n            var i;\n            var length = files.length;\n            var uid;\n            var upload = this.upload;\n\n            if (upload.options.async.chunkSize) {\n                 uid = files[0].uid;\n                 chunk = this._getCurrentChunk(files[0].rawFile, uid);\n\n                data.append(\n                    upload.options.async.saveField || upload.name,\n                    chunk\n                );\n\n                var serializedMetaData = JSON.stringify(this.metaData[uid]);\n                data.append(\"metadata\", serializedMetaData);\n            } else {\n                 for (i = 0; i < length; i++) {\n                    data.append(\n                        upload.options.async.saveField || upload.name,\n                        files[i].rawFile\n                    );\n                 }\n            }\n\n            return data;\n        },\n\n        onRequestSuccess: function(e, fileEntry) {\n            var xhr = e.target,\n                module = this;\n\n            function raiseError() {\n                module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n            }\n\n            function parseSuccess(jsonResult) {\n                var batch = module.upload.options.async.batch;\n                var chunkSize = module.upload.options.async.chunkSize;\n                var concurrent = module.upload.options.async.concurrent;\n                var fileUid = jsonResult.fileUid;\n\n                if (module.paused[fileUid] || module.cancelled[fileUid]) {\n                    return;\n                }\n\n                delete module.retries[fileUid];\n\n                if (chunkSize && !batch && !jsonResult.uploaded) {\n\n                    module._increaseChunkIndex(fileUid);\n                    module.performUpload(fileEntry);\n                } else if (chunkSize && !batch && !concurrent && fileEntry.next().length && !fileEntry.next().hasClass(\"k-toupload\")) {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module._resetChunkIndex(fileUid);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n\n                        module.performUpload(fileEntry.next());\n                } else {\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                    module.cleanupFileEntry(fileEntry);\n                }\n            }\n\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                tryParseJSON(xhr.responseText,\n                    parseSuccess,\n                    raiseError\n                );\n            } else {\n                raiseError();\n            }\n        },\n\n        onRequestError: function(e, fileEntry) {\n            var xhr = e.target;\n\n            this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n        },\n\n        cleanupFileEntry: function(fileEntry) {\n            var relatedInput = fileEntry.data(\"relatedInput\"),\n                uploadComplete = true;\n\n            if (relatedInput) {\n                $.each(relatedInput.data(\"relatedFileEntries\") || [], function() {\n                    // Exclude removed file entries and self\n                    if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                        uploadComplete = uploadComplete && this.hasClass(\"k-file-success\");\n                    }\n                });\n\n                if (uploadComplete) {\n                    relatedInput.remove();\n                }\n            }\n        },\n\n        removeFileEntry: function(fileEntry) {\n            var chunkSize = this.upload.options.async.chunkSize;\n            var concurrent = this.upload.options.async.concurrent;\n            var isUploadButtonVisible = this.upload.wrapper.find(\".k-upload-selected\").length > 0;\n\n            this.cleanupFileEntry(fileEntry);\n            if (chunkSize && !concurrent && !isUploadButtonVisible) {\n                 if (fileEntry.next().length) {\n                     this.performUpload(fileEntry.next());\n                 }\n            }\n            this.upload._removeFileEntry(fileEntry);\n        },\n\n        onRequestProgress: function(e, fileEntry) {\n            var percentComplete = Math.round(e.loaded * 100 / e.total);\n            var fileUid = fileEntry.data(\"uid\");\n            var fileMetaData;\n\n            if (this.upload.options.async.chunkSize) {\n                fileMetaData = this.metaData[fileUid];\n                percentComplete = fileMetaData && fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n            }\n            this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n        },\n\n        stopUploadRequest: function(fileEntry) {\n            if (fileEntry.data(\"request\")) {\n                fileEntry.data(\"request\").abort();\n            }\n        },\n\n        prepareChunk: function(fileEntry) {\n            var file = fileEntry.data(\"files\")[0];\n            var rawFile = file.rawFile;\n            var uid = file.uid;\n            var chunkSize = this.upload.options.async.chunkSize;\n            this.position[uid] = 0;\n\n            this.metaData[uid] = {\n                chunkIndex: 0,\n                contentType: rawFile.type,\n                fileName: rawFile.name,\n                relativePath: file.name,\n                totalFileSize: rawFile.size,\n                totalChunks: Math.ceil(rawFile.size / chunkSize),\n                uploadUid: uid\n            };\n        },\n\n        _decreaseChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex--;\n        },\n\n        _increaseChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex++;\n        },\n\n        _resetChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex = 0;\n        },\n\n        _decreasePosition: function(uid) {\n            this.position[uid] -= this.upload.options.async.chunkSize;\n        },\n\n        _getCurrentChunk: function(file, uid) {\n            var oldPosition = this.position[uid];\n            var methodToInvoke;\n            var async = this.upload.options.async;\n            var chunkSize = async.chunkSize || async.bufferChunkSize;\n\n            if (!this.position[uid]) {\n                this.position[uid] = 0;\n            }\n            this.position[uid] += chunkSize;\n\n            if (!!(methodToInvoke = this._getChunker(file))) {\n                return file[methodToInvoke](oldPosition, this.position[uid]);\n            } else {\n                return file;\n            }\n        },\n\n        _getChunker: function(file) {\n            if (file.slice) {\n                return \"slice\";\n            } else if (file.mozSlice) {\n                return \"mozSlice\";\n            } else if (file.webkitSlice) {\n                    return \"webkitSlice\";\n            } else {\n                return null;\n            }\n        }\n    };\n\n    // Helper functions\n    function getFileName(input) {\n        return $.map(inputFiles(input), function(file) {\n            return file.name;\n        }).join(\", \");\n    }\n\n    function inputFiles($input) {\n        var input = $input[0];\n\n        if (input.files) {\n            return getAllFileInfo(input.files);\n        } else {\n            return [{\n                name: stripPath(input.value),\n                extension: getFileExtension(input.value),\n                size: null\n            }];\n        }\n    }\n\n    function getAllFileInfo(rawFiles) {\n        return $.map(rawFiles, function(file) {\n            return getFileInfo(file);\n        });\n    }\n\n    function getFileInfo(rawFile) {\n        // Older Firefox versions (before 3.6) use fileName and fileSize\n        var fileName = rawFile.name || rawFile.fileName;\n        return {\n            name: kendo.htmlEncode(fileName),\n            extension: getFileExtension(fileName),\n            size: typeof rawFile.size == \"number\" ? rawFile.size : rawFile.fileSize, //rawFile.size || rawFile.fileSize,\n            rawFile: rawFile\n        };\n    }\n\n    function getFileExtension(fileName) {\n        var matches = fileName.match(rFileExtension);\n        return matches ? matches[0] : \"\";\n    }\n\n    function stripPath(name) {\n        var slashIndex = name.lastIndexOf(\"\\\\\");\n        return (slashIndex != -1) ? name.substr(slashIndex + 1) : name;\n    }\n\n    function assignGuidToFiles(files, unique) {\n        var uid = kendo.guid();\n\n        return $.map(files, function(file) {\n            file.uid = unique ? kendo.guid() : uid;\n\n            return file;\n        });\n    }\n\n    function validateFiles(files, validationInfo) {\n        var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n        var maxFileSize = validationInfo.maxFileSize;\n        var minFileSize = validationInfo.minFileSize;\n\n        for (var i = 0; i < files.length; i++) {\n            validateFileExtension(files[i], allowedExtensions);\n            validateFileSize(files[i], minFileSize, maxFileSize);\n        }\n    }\n\n    function parseAllowedExtensions(extensions) {\n        var allowedExtensions = $.map(extensions, function(ext) {\n            var parsedExt = (ext.substring(0, 1) === \".\") ? ext : (\".\" + ext);\n            return parsedExt.toLowerCase();\n        });\n\n        return allowedExtensions;\n    }\n\n    function validateFileExtension(file, allowedExtensions) {\n        if (allowedExtensions.length > 0) {\n            if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDFILEEXTENSION);\n                }\n            }\n        }\n    }\n\n    function validateFileSize(file, minFileSize, maxFileSize) {\n        if (minFileSize !== 0 && file.size < minFileSize) {\n            file.validationErrors = file.validationErrors || [];\n            if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                file.validationErrors.push(INVALIDMINFILESIZE);\n            }\n        }\n\n        if (maxFileSize !== 0 && file.size > maxFileSize) {\n            file.validationErrors = file.validationErrors || [];\n            if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                file.validationErrors.push(INVALIDMAXFILESIZE);\n            }\n        }\n    }\n\n    function getTotalFilesSizeMessage(files) {\n        var totalSize = 0;\n\n        if (typeof files[0].size == \"number\") {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].size) {\n                    totalSize += files[i].size;\n                }\n            }\n        } else {\n            return \"\";\n        }\n\n        totalSize /= 1024;\n\n        if (totalSize < 1024) {\n            return totalSize.toFixed(2) + \" KB\";\n        } else {\n            return (totalSize / 1024).toFixed(2) + \" MB\";\n        }\n    }\n\n    function shouldRemoveFileEntry(upload) {\n        return !upload.multiple && $(\".k-file\", upload.wrapper).length > 1;\n    }\n\n    function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n        if (!upload._supportsRemove()) {\n            if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                upload._removeFileEntry(fileEntry);\n            }\n\n            return;\n        }\n\n        var files = fileEntry.data(\"fileNames\");\n        var fileNames = $.map(files, function(file) { return file.name; });\n\n        if (shouldSendRemoveRequest === false) {\n            upload._removeFileEntry(fileEntry);\n\n            return;\n        }\n\n        upload._submitRemove(fileNames, eventArgs,\n            function onSuccess(data, textStatus, xhr) {\n                var prevented = upload.trigger(SUCCESS, {\n                    operation: \"remove\",\n                    files: files,\n                    response: data,\n                    XMLHttpRequest: xhr\n                });\n\n                if (!prevented) {\n                    upload._removeFileEntry(fileEntry);\n                }\n            },\n\n            function onError(xhr) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n\n                upload.trigger(ERROR, {\n                    operation: \"remove\",\n                    files: files,\n                    XMLHttpRequest: xhr\n                });\n\n                logToConsole(\"Server response: \" + xhr.responseText);\n            }\n        );\n    }\n\n    function tryParseJSON(input, onSuccess, onError) {\n        var success = false,\n            json = \"\";\n\n        try {\n            json = JSON.parse(normalizeJSON(input));\n            success = true;\n        } catch (e) {\n            onError();\n        }\n\n        if (success) {\n            onSuccess(json);\n        }\n    }\n\n    function normalizeJSON(input) {\n        if (typeof input === \"undefined\" || input === \"\") {\n            input = \"{}\";\n        }\n\n        return input;\n    }\n\n    function stopEvent(e) {\n        if (e.originalEvent) {\n            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n        }\n        e.stopPropagation(); e.preventDefault();\n    }\n\n    function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n        var hideInterval, lastDrag;\n\n        element\n            .on(\"dragenter\" + namespace, function(e) {\n                onDragEnter(e);\n                lastDrag = new Date();\n\n                if (!hideInterval) {\n                    hideInterval = setInterval(function() {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            })\n            .on(\"dragover\" + namespace, function() {\n                lastDrag = new Date();\n            });\n    }\n\n    function isFileUploadStarted(fileEntry) {\n        return fileEntry.is(\".k-file-progress, .k-file-success, .k-file-error\");\n    }\n\n    function getFileEntry(e) {\n        return $(e.target).closest(\".k-file\");\n    }\n\n    kendo.ui.plugin(Upload);\n})(window.kendo.jQuery);\n"]}