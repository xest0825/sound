{"version":3,"file":"kendo.treeview.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","TreeView","subGroup","nodeContents","nodeIcon","spriteRe","kendo","window","ui","data","extend","template","isArray","Array","Widget","HierarchicalDataSource","keys","NS","TEMP_NS","SELECT","CHECK","NAVIGATE","CHANGE","ERROR","CHECKED","INDETERMINATE","DRAGSTART","DRAG","DROP","DRAGEND","DATABOUND","ITEMSLOADED","LOADCOMPLETED","REQUESTEND","CLICK","UNDEFINED","KSTATEHOVER","KTREEVIEW","NODE","STRING","ARIA_CHECKED","ARIA_SELECTED","ARIA_DISABLED","ARIA_EXPANDED","ARIA_ACTIVEDESCENDANT","ARIA_BUSY","DISABLED","bindings","text","url","spriteCssClass","imageUrl","isDomElement","o","HTMLElement","nodeType","nodeName","contentChild","filter","node","result","children","length","templateNoWith","code","useWithBlock","checkboxes","find","insertAction","indexOffset","nodeData","referenceNode","parentNode","group","closest","parent","is","this","_dataSourceMove","dataSource","model","referenceItem","dataItem","referenceNodeIndex","indexOf","index","_insert","updateNodeHtml","wrapper","toggleButton","checkbox","innerWrapper","hasClass","prependTo","remove","removeAttr","appendTo","append","eq","addClass","container","tmp","toLowerCase","nextSibling","nodeValue","trim","test","className","insertBefore","firstChild","appendChild","moveContents","DataBoundWidget","init","element","options","inferred","list","that","hasDataSource","loadOnDemand","prototype","call","_dataSourceUids","_animation","_accessors","_templates","root","_wrapper","_group","_applyCssClasses","_tabindex","attr","_dataSource","_attachEvents","_dragging","_syncHtmlAndDataSource","autoBind","_progress","fetch","_attemptLoadCompleted","bind","checkChildren","updateIndeterminate","_ariaId","format","guid","notify","clickableItems","MOUSEENTER","_clickHandler","_click","on","e","preventDefault","removeClass","_toggleButtonClick","_keydown","_keypress","_focus","_blur","_mousedown","_checkboxChange","_retryRequest","target","focus","i","item","uid","itemCheckbox","view","uidAttr","expandedAttr","checkboxesEnabled","items","expanded","hasChildren","checked","prop","next","animationOptions","animation","hasCollapseAnimation","collapse","expand","reverse","effects","hide","enabled","dragAndDrop","dragging","widget","HierarchicalDragAndDrop","reorderable","$angular","autoScroll","allowedContainers","itemSelector","hintText","_hintText","contains","source","destination","dropHintContainer","itemFromTarget","content","first","last","dropPositionFrom","dropHint","prevAll","dragstart","trigger","sourceNode","drag","originalEvent","dropTarget","pageY","pageX","statusClass","status","setStatusClass","setStatus","drop","navigationTarget","_tempPreventNavigation","destinationNode","valid","setValid","state","dropPosition","position","dragend","triggerDragEnd","current","insertAfter","destroy","ev","off","templates","dragClue","treeview","fieldAccessor","_fieldAccessor","_checkboxes","setAttributes","attributes","hasOwnProperty","wrapperCssClass","firstLevel","cssClass","groupLength","textClass","isLink","selected","toggleButtonClass","groupAttributes","groupCssClass","itemContent","itemElement","loading","retry","setDataSource","one","_bindDataSource","_refreshHandler","refresh","_errorHandler","_error","_loadCompletedHandler","_loadCompleted","_requestEndHandler","_dsRequestEnd","_loadedNodes","setTimeout","type","_loadCompletedFired","concat","nodes","_unbindDataSource","unbind","silentRead","fields","field","create","recursiveRead","_initChildren","events","duration","messages","requestFailed","dataTextField","size","textField","fieldName","fieldBindings","count","map","x","expr","join","setOptions","fn","_trigger","eventName","_setChecked","datasource","value","isFunction","_setCheckedValue","_setIndeterminate","siblings","all","indeterminate","subnodes","_bubbleIndeterminate","skipDownward","_skip","set","isChecked","_preventChange","currentTarget","toggle","browser","support","msie","edge","_clickTarget","_focusable","select","clickTarget","touch","_nextVisible","scrollContainer","containers","offsets","documentElement","document","scrollHeight","clientHeight","push","scrollTop","focusElement","_enabled","skipSelf","wrapperRe","itemRe","_expanded","nextParent","_previousVisible","lastChild","prev","key","keyCode","focused","rtl","isRtl","RIGHT","LEFT","DOWN","UP","HOME","END","ENTER","SPACEBAR","matchToFocus","focusedNode","get","_match","clearTimeout","_matchTimer","_matchNextByText","startIndex","contents","href","wrap","_getSelectedNode","groupElement","css","_nodes","groupData","each","_updateNodeClasses","defaultTemplate","html","renderCheckBox","rounded","replace","textWrap","_processNodes","callback","getByUid","_dataItem","_insertNode","insertCallback","collapsed","childrenData","updatedGroupLength","nodeHtml","_renderItem","angular","elements","_renderGroup","_updateNodes","nodeWrapper","isCollapsed","context","render","setCheckedState","findByUid","toggleClass","end","_toggle","ns","_appendItems","dataItems","viewItems","rootItems","_refreshChildren","child","empty","_refreshRoot","groupHtml","parentElement","_angularItems","action","level","bubble","_remove","_loaded","load","retryHtml","loaded","enable","arguments","_current","_updateActiveDescendant","direction","height","kendoStop","kendoAnimate","reset","complete","force","showProgress","loadingText","Math","min","_objectOrSelf","referenceDataItem","destTreeview","destDataSource","loadPromise","Deferred","resolve","promise","_toObservableData","obj","jQuery","ObservableArray","toJSON","splice","apply","success","loadModel","inserted","done","max","add","noop","keepData","prevSibling","detach","findByText","getAttribute","expandPath","path","nodeIds","slice","nodeElement","then","proceed","shift","_parentIds","parents","unshift","expandTo","Node","r","renderItems","len","cssProperties","registerPrefix","plugin"],"sources":["kendo.treeview.js"],"mappings":"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","sourcesContent":["import './kendo.data.js';\nimport './kendo.treeview.draganddrop.js';\nimport './kendo.html.input.js';\n\nvar __meta__ = {\n    id: \"treeview\",\n    name: \"TreeView\",\n    category: \"web\",\n    description: \"The TreeView widget displays hierarchical data in a traditional tree structure,with support for interactive drag-and-drop operations.\",\n    depends: [ \"data\", \"html.input\" ],\n    features: [{\n        id: \"treeview-dragging\",\n        name: \"Drag & Drop\",\n        description: \"Support for drag & drop\",\n        depends: [ \"treeview.draganddrop\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        data = kendo.data,\n        extend = $.extend,\n        template = kendo.template,\n        isArray = Array.isArray,\n        Widget = ui.Widget,\n        HierarchicalDataSource = data.HierarchicalDataSource,\n        keys = kendo.keys,\n        NS = \".kendoTreeView\",\n        TEMP_NS = \".kendoTreeViewTemp\",\n        SELECT = \"select\",\n        CHECK = \"check\",\n        NAVIGATE = \"navigate\",\n        EXPAND = \"expand\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        CHECKED = \"checked\",\n        INDETERMINATE = \"indeterminate\",\n        COLLAPSE = \"collapse\",\n        DRAGSTART = \"dragstart\",\n        DRAG = \"drag\",\n        DROP = \"drop\",\n        DRAGEND = \"dragend\",\n        DATABOUND = \"dataBound\",\n        ITEMSLOADED = \"itemsLoaded\",\n        LOADCOMPLETED = \"loadCompleted\",\n        REQUESTEND = \"requestEnd\",\n        CLICK = \"click\",\n        KENDOKEYDOWN = \"kendoKeydown\",\n        UNDEFINED = \"undefined\",\n        KSTATEHOVER = \"k-hover\",\n        KTREEVIEW = \"k-treeview\",\n        VISIBLE = \":visible\",\n        NODE = \".k-item\",\n        STRING = \"string\",\n        ARIA_CHECKED = \"aria-checked\",\n        ARIA_SELECTED = \"aria-selected\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ARIA_BUSY = \"aria-busy\",\n        DISABLED = \"k-disabled\",\n        TreeView,\n        subGroup, nodeContents, nodeIcon,\n        spriteRe,\n        bindings = {\n            text: \"dataTextField\",\n            url: \"dataUrlField\",\n            spriteCssClass: \"dataSpriteCssClassField\",\n            imageUrl: \"dataImageUrlField\"\n        },\n        isJQueryInstance = function(obj) {\n            return (obj instanceof kendo.jQuery) || (window.jQuery && obj instanceof window.jQuery);\n        },\n        isDomElement = function(o) {\n            return (\n                typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n                o && typeof o === \"object\" && o.nodeType === 1 && typeof o.nodeName === STRING\n            );\n        };\n\n    function contentChild(filter) {\n        return function(node) {\n            var result = node.children(\".k-animation-container\");\n\n            if (!result.length) {\n                result = node;\n            }\n\n            return result.children(filter);\n        };\n    }\n\n    function templateNoWith(code) {\n        return kendo.template(code, { useWithBlock: false });\n    }\n\n    subGroup = contentChild(\".k-group\");\n    nodeContents = contentChild(\".k-group,.k-content\");\n    nodeIcon = function(node) {\n        return node.children(\"div\").find(\".k-treeview-toggle > .k-icon\");\n    };\n\n    function checkboxes(node) {\n         return node.find(\".k-checkbox-wrapper:first input[type=checkbox]\");\n    }\n\n    function insertAction(indexOffset) {\n        return function(nodeData, referenceNode) {\n            referenceNode = referenceNode.closest(NODE);\n\n            var group = referenceNode.parent(),\n                parentNode;\n\n            if (group.parent().is(\"li\")) {\n                parentNode = group.parent();\n            }\n\n            return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model) {\n                var referenceItem = this.dataItem(referenceNode);\n                var referenceNodeIndex = referenceItem && referenceNode.parent().children().length !== referenceItem.parent().length ? referenceItem.parent().indexOf(referenceItem) : referenceNode.index();\n\n                return this._insert(dataSource.data(), model, referenceNodeIndex + indexOffset);\n            });\n        };\n    }\n\n    spriteRe = /k-sprite/;\n\n    function moveContents(node, container) {\n        var tmp;\n\n        while (node && node.nodeName.toLowerCase() != \"ul\") {\n            tmp = node;\n            node = node.nextSibling;\n\n            if (tmp.nodeType == 3) {\n                tmp.nodeValue = kendo.trim(tmp.nodeValue);\n            }\n\n            if (spriteRe.test(tmp.className)) {\n                container.insertBefore(tmp, container.firstChild);\n            } else {\n                container.appendChild(tmp);\n            }\n        }\n    }\n\n    function updateNodeHtml(node) {\n        var wrapper = node.children(\"div\"),\n            group = node.children(\"ul\"),\n            toggleButton = wrapper.find(\".k-treeview-toggle > .k-icon\"),\n            checkbox = node.children(\"input[type=checkbox]\"),\n            innerWrapper = wrapper.children(\".k-in\");\n\n        if (node.hasClass(\"k-treeview\")) {\n            return;\n        }\n\n        if (!wrapper.length) {\n            wrapper = $(\"<div />\").prependTo(node);\n        }\n\n        if (!toggleButton.length && group.length) {\n            toggleButton = $(\"<span class='k-treeview-toggle'><span class='k-icon' /></span>\").prependTo(wrapper);\n        } else if (!group.length || !group.children().length) {\n            toggleButton.parent().remove();\n            group.remove();\n            node.removeAttr(ARIA_EXPANDED);\n        }\n\n        if (checkbox.length) {\n            $(\"<span class='k-checkbox-wrapper' />\").appendTo(wrapper).append(checkbox);\n        }\n\n        if (!innerWrapper.length) {\n            innerWrapper = node.children(\"a\").eq(0).addClass(\"k-in k-link\");\n\n            if (!innerWrapper.length) {\n                innerWrapper = $(\"<span class='k-treeview-leaf k-in' />\");\n            }\n\n            innerWrapper.appendTo(wrapper);\n\n            if (wrapper.length) {\n                moveContents(wrapper[0].nextSibling, innerWrapper[0]);\n            }\n        }\n    }\n\n    TreeView = kendo.ui.DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this,\n                inferred = false,\n                hasDataSource = options && !!options.dataSource,\n                list;\n\n            if (isArray(options)) {\n                options = { dataSource: options };\n            }\n\n            if (options && typeof options.loadOnDemand == UNDEFINED && isArray(options.dataSource)) {\n                options.loadOnDemand = false;\n            }\n\n            Widget.prototype.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n\n            that._dataSourceUids = {};\n\n            list = (element.is(\"ul\") && element) ||\n                   (element.hasClass(KTREEVIEW) && element.children(\"ul\"));\n\n            inferred = !hasDataSource && list.length;\n\n            if (inferred) {\n                options.dataSource.list = list;\n            }\n\n            that._animation();\n\n            that._accessors();\n\n            that._templates();\n\n            // render treeview if it's not already rendered\n            if (!element.hasClass(KTREEVIEW)) {\n                that._wrapper();\n\n                if (list) {\n                    that.root = element;\n                    that._group(that.wrapper);\n                }\n            } else {\n                // otherwise just initialize properties\n                that.wrapper = element;\n                that.root = element.children(\"ul\").eq(0);\n            }\n\n            that._applyCssClasses();\n            that._tabindex();\n\n            that.wrapper.attr(\"role\", \"tree\");\n            that.wrapper.find(\">ul\").attr(\"role\", \"none\");\n\n            that._dataSource(inferred);\n\n            that._attachEvents();\n\n            that._dragging();\n\n            if (!inferred) {\n                if (options.autoBind) {\n                    that._progress(true);\n                    that.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n                }\n            } else {\n                that._syncHtmlAndDataSource();\n            }\n\n            if (options.checkboxes && options.checkboxes.checkChildren) {\n                that.updateIndeterminate();\n            }\n\n            if (that.element[0].id) {\n                that._ariaId = kendo.format(\"{0}_tv_active\", that.element[0].id);\n            } else {\n                that._ariaId = kendo.guid() + \"_tv_active\";\n            }\n\n            kendo.notify(that);\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                clickableItems = \".k-in:not(.k-selected,.k-disabled)\",\n                MOUSEENTER = \"mouseenter\";\n\n            that._clickHandler = that._click.bind(that);\n\n            that.wrapper\n                .on(MOUSEENTER + NS, \".k-in.k-selected\", function(e) { e.preventDefault(); })\n                .on(MOUSEENTER + NS, clickableItems, function() { $(this).addClass(KSTATEHOVER); })\n                .on(\"mouseleave\" + NS, clickableItems, function() { $(this).removeClass(KSTATEHOVER); })\n                .on(CLICK + NS, clickableItems, that._clickHandler)\n                .on(\"dblclick\" + NS, \".k-in:not(.k-disabled)\", that._toggleButtonClick.bind(that))\n                .on(CLICK + NS, \".k-i-expand,.k-i-collapse\", that._toggleButtonClick.bind(that))\n                .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                .on(\"keypress\" + NS, that._keypress.bind(that))\n                .on(\"focus\" + NS, that._focus.bind(that))\n                .on(\"blur\" + NS, that._blur.bind(that))\n                .on(\"mousedown\" + NS, \".k-in,.k-checkbox-wrapper :checkbox,.k-i-expand,.k-i-collapse\", that._mousedown.bind(that))\n                .on(\"change\" + NS, \".k-checkbox-wrapper :checkbox\", that._checkboxChange.bind(that))\n                .on(\"click\" + NS, \".k-request-retry\", that._retryRequest.bind(that))\n                .on(\"click\" + NS, \".k-link.k-disabled\", function(e) { e.preventDefault(); })\n                .on(\"click\" + NS, function(e) {\n                    var target = $(e.target);\n\n                    if (!target.is(\":kendoFocusable\") && !target.find(\"input,select,textarea,button,object\").is(\":kendoFocusable\")) {\n                        that.focus();\n                    }\n                });\n        },\n\n        _syncHtmlAndDataSource: function(root, dataSource) {\n            root = root || this.root;\n            dataSource = dataSource || this.dataSource;\n            var data = dataSource.view(),\n                uidAttr = kendo.attr(\"uid\"),\n                expandedAttr = kendo.attr(\"expanded\"),\n                checkboxesEnabled = this.options.checkboxes,\n                items = root.children(\"li\"),\n                i,\n                item,\n                dataItem,\n                uid,\n                itemCheckbox;\n\n            for (i = 0; i < items.length; i++) {\n                dataItem = data[i];\n                uid = dataItem.uid;\n                item = items.eq(i);\n                item.attr(\"role\", \"treeitem\")\n                    .attr(uidAttr, uid)\n                    .attr(ARIA_SELECTED, item.hasClass(\"k-selected\"));\n\n                dataItem.expanded = item.attr(expandedAttr) === \"true\";\n\n                if (dataItem.hasChildren) {\n                    item.attr(ARIA_EXPANDED, dataItem.expanded);\n                }\n\n                if (checkboxesEnabled) {\n                    itemCheckbox = checkboxes(item);\n                    dataItem.checked = itemCheckbox.prop(CHECKED);\n                    itemCheckbox.attr(\"id\", \"_\" + uid);\n                    itemCheckbox.next(\".k-checkbox-label\").attr(\"for\", \"_\" + uid);\n\n                    item.attr(ARIA_CHECKED, item.checked);\n                }\n\n                this._syncHtmlAndDataSource(item.children(\"ul\"), dataItem.children);\n            }\n        },\n\n        _animation: function() {\n            var options = this.options,\n                animationOptions = options.animation,\n                hasCollapseAnimation = animationOptions.collapse && \"effects\" in animationOptions.collapse,\n                collapse = extend({}, animationOptions.expand, animationOptions.collapse);\n\n            if (!hasCollapseAnimation) {\n                collapse = extend(collapse, { reverse: true });\n            }\n\n            if (animationOptions === false) {\n                animationOptions = {\n                    expand: { effects: {} },\n                    collapse: { hide: true, effects: {} }\n                };\n            }\n\n            animationOptions.collapse = extend(collapse, { hide: true });\n            options.animation = animationOptions;\n        },\n\n        _dragging: function() {\n            var enabled = this.options.dragAndDrop;\n            var dragging = this.dragging;\n\n            if (enabled && !dragging) {\n                var widget = this;\n\n                this.dragging = new ui.HierarchicalDragAndDrop(this.element, {\n                    reorderable: true,\n                    $angular: this.options.$angular,\n                    autoScroll: this.options.autoScroll,\n                    filter: \"div:not(.k-disabled) .k-in\",\n                    allowedContainers: \".k-treeview\",\n                    itemSelector: \".k-treeview .k-item\",\n                    hintText: this._hintText.bind(this),\n                    contains: function(source, destination) {\n                        return $.contains(source, destination);\n                    },\n                    dropHintContainer: function(item) {\n                        return item;\n                    },\n                    itemFromTarget: function(target) {\n                        var item = target.closest(\".k-treeview-top,.k-treeview-mid,.k-treeview-bot\");\n                        return {\n                            item: item,\n                            content: target.closest(\".k-in\"),\n                            first: item.hasClass(\"k-treeview-top\"),\n                            last: item.hasClass(\"k-treeview-bot\")\n                        };\n                    },\n                    dropPositionFrom: function(dropHint) {\n                        return dropHint.prevAll(\".k-in\").length > 0 ? \"after\" : \"before\";\n                    },\n                    dragstart: function(source) {\n                        widget.wrapper.attr(kendo.attr(\"scrollable\"), false);\n                        return widget.trigger(DRAGSTART, { sourceNode: source[0] });\n                    },\n                    drag: function(options) {\n                        widget.trigger(DRAG, {\n                            originalEvent: options.originalEvent,\n                            sourceNode: options.source[0],\n                            dropTarget: options.target[0],\n                            pageY: options.pageY,\n                            pageX: options.pageX,\n                            statusClass: options.status,\n                            setStatusClass: options.setStatus\n                        });\n                    },\n                    drop: function(options) {\n                        var dropTarget = $(options.dropTarget);\n                        var navigationTarget = dropTarget.closest(\"a\");\n\n                        if (navigationTarget && navigationTarget.attr(\"href\")) {\n                            widget._tempPreventNavigation(navigationTarget);\n                        }\n\n                        return widget.trigger(DROP, {\n                            originalEvent: options.originalEvent,\n                            sourceNode: options.source,\n                            destinationNode: options.destination,\n                            valid: options.valid,\n                            setValid: function(state) {\n                                this.valid = state;\n                                options.setValid(state);\n                            },\n                            dropTarget: options.dropTarget,\n                            dropPosition: options.position\n                        });\n                    },\n                    dragend: function(options) {\n                        var source = options.source;\n                        var destination = options.destination;\n                        var position = options.position;\n\n                        widget.wrapper.removeAttr(kendo.attr(\"scrollable\"));\n\n                        function triggerDragEnd(source) {\n                            if (widget.options.checkboxes && widget.options.checkboxes.checkChildren) {\n                                widget.updateIndeterminate();\n                            }\n\n                            widget.current(source);\n                            widget.element.focus();\n\n                            widget.trigger(DRAGEND, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: source && source[0],\n                                destinationNode: destination[0],\n                                dropPosition: position\n                            });\n                        }\n\n                        // perform reorder / move\n                        // different handling is necessary because append might be async in remote bound tree\n                        if (position == \"over\") {\n                            widget.append(source, destination, triggerDragEnd);\n                        } else {\n                            if (position == \"before\") {\n                                source = widget.insertBefore(source, destination);\n                            } else if (position == \"after\") {\n                                source = widget.insertAfter(source, destination);\n                            }\n\n                            triggerDragEnd(source);\n                        }\n                    }\n                });\n            } else if (!enabled && dragging) {\n                dragging.destroy();\n                this.dragging = null;\n            }\n        },\n\n        _tempPreventNavigation: function(node) {\n            node.on(CLICK + NS + TEMP_NS, function(ev) {\n                ev.preventDefault();\n                node.off(CLICK + NS + TEMP_NS);\n            });\n        },\n\n        _hintText: function(node) {\n            return this.templates.dragClue({\n                item: this.dataItem(node),\n                treeview: this.options\n            });\n        },\n\n        _templates: function() {\n            var that = this,\n                options = that.options,\n                fieldAccessor = that._fieldAccessor.bind(that);\n\n            if (options.template && typeof options.template == STRING) {\n                options.template = template(options.template);\n            } else if (!options.template) {\n                options.template = templateNoWith(\n                    \"# var text = \" + fieldAccessor(\"text\") + \"(data.item); #\" +\n                    \"# if (typeof data.item.encoded != 'undefined' && data.item.encoded === false) {#\" +\n                        \"<span class='k-treeview-leaf-text'>#= text #</span>\" +\n                    \"# } else { #\" +\n                        \"<span class='k-treeview-leaf-text'>#: text #</span>\" +\n                    \"# } #\"\n                );\n            }\n\n            that._checkboxes();\n\n            that.templates = {\n                setAttributes: function(item) {\n                    var result = \"\";\n                    var attributes = item.attr || {};\n\n                    for (var attr in attributes) {\n                        if (attributes.hasOwnProperty(attr) && attr !== \"class\") {\n                            result += attr + \"=\\\"\" + attributes[attr] + \"\\\" \";\n                        }\n                    }\n\n                    return result;\n                },\n                wrapperCssClass: function(group, item) {\n                    var result = \"k-item k-treeview-item\",\n                        index = item.index;\n\n                    if (group.firstLevel && index === 0) {\n                        result += \" k-first\";\n                    }\n\n                    if (index == group.length - 1) {\n                        result += \" k-last\";\n                    }\n\n                    return result;\n                },\n                cssClass: function(group, item) {\n                    var result = \"\",\n                        index = item.index,\n                        groupLength = group.length - 1;\n\n                    if (group.firstLevel && index === 0) {\n                        result += \"k-treeview-top \";\n                    }\n\n                    if (index === 0 && index != groupLength) {\n                        result += \"k-treeview-top\";\n                    } else if (index == groupLength) {\n                        result += \"k-treeview-bot\";\n                    } else {\n                        result += \"k-treeview-mid\";\n                    }\n\n                    return result;\n                },\n                textClass: function(item, isLink) {\n                    var result = \"k-treeview-leaf k-in\";\n\n                    if (isLink) {\n                        result += \" k-link\";\n                    }\n\n                    if (item.enabled === false) {\n                        result += \" k-disabled\";\n                    }\n\n                    if (item.selected === true) {\n                        result += \" k-selected\";\n                    }\n\n                    return result;\n                },\n                toggleButtonClass: function(item) {\n                    var result = \"k-icon\";\n\n                    if (item.expanded !== true) {\n                        result += \" k-i-expand\";\n                    } else {\n                        result += \" k-i-collapse\";\n                    }\n\n                    return result;\n                },\n                groupAttributes: function(group) {\n                    var attributes = \"\";\n\n                    if (!group.firstLevel) {\n                        attributes = \"role='group'\";\n                    }\n\n                    return attributes + (group.expanded !== true ? \" style='display:none'\" : \"\");\n                },\n                groupCssClass: function(group) {\n                    var cssClass = \"k-group k-treeview-group\";\n\n                    if (group.firstLevel) {\n                        cssClass += \" k-treeview-lines\";\n                    }\n\n                    return cssClass;\n                },\n                dragClue: templateNoWith(\n                    \"#= data.treeview.template(data) #\"\n                ),\n                group: templateNoWith(\n                    \"<ul class='#= data.r.groupCssClass(data.group) #'#= data.r.groupAttributes(data.group) #>\" +\n                        \"#= data.renderItems(data) #\" +\n                    \"</ul>\"\n                ),\n                itemContent: templateNoWith(\n                    \"# var imageUrl = \" + fieldAccessor(\"imageUrl\") + \"(data.item); #\" +\n                    \"# var spriteCssClass = \" + fieldAccessor(\"spriteCssClass\") + \"(data.item); #\" +\n                    \"# if (imageUrl) { #\" +\n                        \"<img class='k-image' alt='' src='#= imageUrl #'>\" +\n                    \"# } #\" +\n\n                    \"# if (spriteCssClass) { #\" +\n                        \"<span class='k-sprite #= spriteCssClass #'></span>\" +\n                    \"# } #\" +\n\n                    \"#= data.treeview.template(data) #\"\n                ),\n                itemElement: templateNoWith(\n                    \"# var item = data.item, r = data.r; #\" +\n                    \"# var url = \" + fieldAccessor(\"url\") + \"(item); #\" +\n                    \"<div class='#= r.cssClass(data.group, item) #'>\" +\n                        \"# if (item.hasChildren) { #\" +\n                            \"<span class='k-treeview-toggle'>\" +\n                                \"<span class='#= r.toggleButtonClass(item) #'></span>\" +\n                            \"</span>\" +\n                        \"# } #\" +\n\n                        \"# if (data.treeview.checkboxes) { #\" +\n                            \"<span class='k-checkbox-wrapper' role='presentation'>\" +\n                                \"#= data.treeview.checkboxes.template(data) #\" +\n                            \"</span>\" +\n                        \"# } #\" +\n\n                        \"# var tag = url ? 'a' : 'span'; #\" +\n                        \"# var textAttr = url ? ' href=\\\\'' + url + '\\\\'' : ''; #\" +\n\n                        \"<#=tag# class='#= r.textClass(item, !!url) #'#= textAttr #>\" +\n                            \"#= r.itemContent(data) #\" +\n                        \"</#=tag#>\" +\n                    \"</div>\"\n                ),\n                item: templateNoWith(\n                    \"# var item = data.item, r = data.r; #\" +\n                    \"<li role='treeitem' class='#= r.wrapperCssClass(data.group, item) #'\" +\n                        kendo.attr(\"uid\") + \"='#= item.uid #' \" +\n                        \"#= r.setAttributes(item.toJSON ? item.toJSON() : item) # \" +\n                        \"# if (data.treeview.checkboxes) { #\" +\n                            \"aria-checked='#= item.checked ? \\\"true\\\" : \\\"false\\\" #' \" +\n                        \"# } #\" +\n                        \"aria-selected='#= item.selected ? \\\"true\\\" : \\\"false\\\" #' \" +\n                        \"#=item.enabled === false ? \\\"aria-disabled='true'\\\" : ''#\" +\n                        \"# if (item.hasChildren) { #\" +\n                            \"aria-expanded='#= item.expanded ? \\\"true\\\" : \\\"false\\\" #' \" +\n                        \"# } #\" +\n                        \"data-expanded='#= item.expanded ? \\\"true\\\" : \\\"false\\\" #' \" +\n                    \">\" +\n                        \"#= r.itemElement(data) #\" +\n                    \"</li>\"\n                ),\n                loading: templateNoWith(\n                    \"<div class='k-icon k-i-loading'></div> #: data.messages.loading #\"\n                ),\n                retry: templateNoWith(\n                    \"#: data.messages.requestFailed # \" +\n                    \"<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-request-retry'><span class='k-button-text'>#: data.messages.retry #</span></button>\"\n                )\n            };\n        },\n\n        items: function() {\n            return this.element.find(\".k-item > div:first-child\");\n        },\n\n        setDataSource: function(dataSource) {\n            var options = this.options;\n\n            options.dataSource = dataSource;\n\n            this._dataSourceUids = {};\n\n            this._dataSource();\n\n            if (options.checkboxes && options.checkboxes.checkChildren) {\n                this.dataSource.one(\"change\", this.updateIndeterminate.bind(this, null));\n            }\n\n            if (this.options.autoBind) {\n                this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n            }\n        },\n\n        _bindDataSource: function() {\n            var that = this;\n\n            that._refreshHandler = that.refresh.bind(that);\n            that._errorHandler = that._error.bind(that);\n            that._loadCompletedHandler = that._loadCompleted.bind(that);\n            that._requestEndHandler = that._dsRequestEnd.bind(that);\n            that._loadedNodes = [];\n\n            that.dataSource.bind(CHANGE, that._refreshHandler);\n            that.dataSource.bind(ERROR, that._errorHandler);\n\n            that.dataSource.bind(ITEMSLOADED, that._loadCompletedHandler);\n            that.dataSource.bind(REQUESTEND, that._requestEndHandler);\n        },\n\n        _dsRequestEnd: function(e) {\n            var that = this;\n\n            setTimeout(function() {\n                if (e.type === \"read\" && !that._loadCompletedFired) {\n                    that._attemptLoadCompleted();\n                }\n            });\n        },\n\n        _loadCompleted: function(e) {\n            var that = this;\n            that._loadedNodes = that._loadedNodes.concat(e.nodes);\n\n            if (!that.dataSource.loading() && that.options.loadOnDemand === false) {\n                that.trigger(LOADCOMPLETED, { nodes: that._loadedNodes });\n                that._loadedNodes = [];\n            }\n        },\n\n        _attemptLoadCompleted: function() { // If there are no items to be loaded ensure event is triggered on dataBound\n            var that = this,\n                items = that.dataSource.view(),\n                current, i;\n\n            if (that.options.loadOnDemand === false) {\n                for (i = 0; i < items.length; i++) {\n                    current = items[i];\n                    if (current.hasChildren && (!current.children || !current.children.data() || current.children.data().length === 0)) {\n                        return;\n                    }\n                }\n\n                that._loadCompletedFired = true;\n                that.trigger(LOADCOMPLETED, { nodes: [] });\n            }\n        },\n\n        _unbindDataSource: function() {\n            var dataSource = this.dataSource;\n\n            if (dataSource) {\n                dataSource.unbind(CHANGE, this._refreshHandler);\n                dataSource.unbind(ERROR, this._errorHandler);\n                dataSource.unbind(ITEMSLOADED, this._loadCompletedHandler);\n                dataSource.unbind(REQUESTEND, this._requestEndHandler);\n            }\n        },\n\n        _dataSource: function(silentRead) {\n            var that = this,\n                options = that.options,\n                dataSource = options.dataSource;\n\n            function recursiveRead(data) {\n                for (var i = 0; i < data.length; i++) {\n                    data[i]._initChildren();\n\n                    data[i].children.fetch();\n\n                    recursiveRead(data[i].children.view());\n                }\n            }\n\n            dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            that._unbindDataSource();\n\n            if (!dataSource.fields) {\n                dataSource.fields = [\n                    { field: \"text\" },\n                    { field: \"url\" },\n                    { field: \"spriteCssClass\" },\n                    { field: \"imageUrl\" }\n                ];\n            }\n\n            that.dataSource = dataSource = HierarchicalDataSource.create(dataSource);\n\n            if (silentRead) {\n                dataSource.fetch();\n\n                recursiveRead(dataSource.view());\n            }\n\n            that._bindDataSource();\n        },\n\n        events: [\n            DRAGSTART,\n            DRAG,\n            DROP,\n            DRAGEND,\n\n            DATABOUND,\n            LOADCOMPLETED,\n\n            EXPAND,\n            COLLAPSE,\n            SELECT,\n            CHANGE,\n            NAVIGATE,\n            CHECK,\n            KENDOKEYDOWN\n        ],\n\n        options: {\n            name: \"TreeView\",\n            dataSource: {},\n            animation: {\n                expand: {\n                    effects: \"expand:vertical\",\n                    duration: 200\n                }, collapse: {\n                    duration: 100\n                }\n            },\n            messages: {\n                loading: \"Loading...\",\n                requestFailed: \"Request failed.\",\n                retry: \"Retry\"\n            },\n            dragAndDrop: false,\n            checkboxes: false,\n            autoBind: true,\n            autoScroll: false,\n            loadOnDemand: true,\n            template: \"\",\n            dataTextField: null,\n            size: \"medium\"\n        },\n\n        _accessors: function() {\n            var that = this,\n                options = that.options,\n                i, field, textField,\n                element = that.element;\n\n            for (i in bindings) {\n                field = options[bindings[i]];\n                textField = element.attr(kendo.attr(i + \"-field\"));\n\n                if (!field && textField) {\n                    field = textField;\n                }\n\n                if (!field) {\n                    field = i;\n                }\n\n                if (!isArray(field)) {\n                    field = [field];\n                }\n\n                options[bindings[i]] = field;\n            }\n        },\n\n        // generates accessor function for a given field name, honoring the data*Field arrays\n        _fieldAccessor: function(fieldName) {\n            var fieldBindings = this.options[bindings[fieldName]],\n                count = fieldBindings.length,\n                result = \"(function(item) {\";\n\n            if (count === 0) {\n                result += \"return item['\" + fieldName + \"'];\";\n            } else {\n                result += \"var levels = [\" +\n                            $.map(fieldBindings, function(x) {\n                                return \"function(d){ return \" + kendo.expr(x) + \"}\";\n                            }).join(\",\") + \"];\";\n\n                result += \"return levels[Math.min(item.level(), \" + count + \"-1)](item)\";\n            }\n\n            result += \"})\";\n\n            return result;\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._animation();\n\n            this._dragging();\n\n            this._templates();\n        },\n\n        _trigger: function(eventName, node) {\n            return this.trigger(eventName, {\n                node: node.closest(NODE)[0]\n            });\n        },\n\n        _setChecked: function(datasource, value) {\n            if (!datasource || !kendo.isFunction(datasource.view)) {\n                return;\n            }\n\n            for (var i = 0, nodes = datasource.view(); i < nodes.length; i++) {\n                if (nodes[i].enabled !== false) {\n                    this._setCheckedValue(nodes[i], value);\n                }\n\n                if (nodes[i].children) {\n                    this._setChecked(nodes[i].children, value);\n                }\n            }\n        },\n\n        _setCheckedValue: function(node, value) {\n            node[CHECKED] = value;\n        },\n\n        _setIndeterminate: function(node) {\n            var group = subGroup(node),\n                siblings, length,\n                all = true,\n                i;\n\n            if (!group.length) {\n                return;\n            }\n\n            siblings = checkboxes(group.children());\n\n            length = siblings.length;\n\n            if (!length) {\n                return;\n            } else if (length > 1) {\n                for (i = 1; i < length; i++) {\n                    if (siblings[i].checked != siblings[i - 1].checked ||\n                        siblings[i].indeterminate || siblings[i - 1].indeterminate) {\n                        all = false;\n                        break;\n                    }\n                }\n            } else {\n                all = !siblings[0].indeterminate;\n            }\n\n            node.attr(ARIA_CHECKED, all ? siblings[0].checked : \"mixed\");\n\n            return checkboxes(node)\n                .data(INDETERMINATE, !all)\n                .prop(INDETERMINATE, !all)\n                .prop(CHECKED, all && siblings[0].checked);\n        },\n\n        updateIndeterminate: function(node) {\n            // top-down update of inital indeterminate state for all nodes\n            node = node || this.wrapper;\n\n            var subnodes = subGroup(node).children();\n            var i;\n            var checkbox;\n            var dataItem;\n\n            if (subnodes.length) {\n                for (i = 0; i < subnodes.length; i++) {\n                    this.updateIndeterminate(subnodes.eq(i));\n                }\n\n                if (node.is(\".k-treeview\")) {\n                    return;\n                }\n\n                checkbox = this._setIndeterminate(node);\n\n                dataItem = this.dataItem(node);\n\n                if (checkbox && checkbox.prop(CHECKED)) {\n                    dataItem.checked = true;\n                } else {\n                    if (dataItem) {\n                        delete dataItem.checked;\n                    }\n                }\n            }\n        },\n\n        _bubbleIndeterminate: function(node, skipDownward) {\n            // bottom-up setting of indeterminate state of parent nodes\n            if (!node.length) {\n                return;\n            }\n\n            if (!skipDownward) {\n                //update the indeterminate state of the node itself\n                this.updateIndeterminate(node);\n            }\n\n            var parentNode = this.parent(node),\n                checkbox;\n\n            if (parentNode.length) {\n                this._setIndeterminate(parentNode);\n\n                checkbox = parentNode.children(\"div\").find(\".k-checkbox-wrapper input[type=checkbox]\");\n\n                this._skip = true;\n                if (checkbox.prop(INDETERMINATE) === false) {\n                    this.dataItem(parentNode).set(CHECKED, checkbox.prop(CHECKED));\n                } else {\n                    // delete this.dataItem(parentNode).checked;\n                    this.dataItem(parentNode).set(CHECKED, false);\n                }\n\n                this._skip = false;\n\n                this._bubbleIndeterminate(parentNode, true);\n            }\n        },\n\n        _checkboxChange: function(e) {\n            var that = this;\n            var checkbox = $(e.target);\n            var isChecked = checkbox.prop(CHECKED);\n            var node = checkbox.closest(NODE);\n            var dataItem = this.dataItem(node);\n\n            if (this._preventChange) {\n                return;\n            }\n\n            if (dataItem.checked != isChecked) {\n                dataItem.set(CHECKED, isChecked);\n                node.attr(ARIA_CHECKED, isChecked);\n                this._trigger(CHECK, node);\n            }\n\n            if (checkbox.is(\":focus\")) {\n                that._trigger(NAVIGATE, node);\n                that.focus();\n            }\n        },\n\n        _toggleButtonClick: function(e) {\n            var node = $(e.currentTarget).closest(NODE);\n\n            if (node.is(\"[aria-disabled='true']\")) {\n                return;\n            }\n\n            this.toggle(node);\n        },\n\n        _mousedown: function(e) {\n            var that = this;\n            var currentTarget = $(e.currentTarget);\n            var node = $(e.currentTarget).closest(NODE);\n            var browser = kendo.support.browser;\n\n            if (node.is(\"[aria-disabled='true']\")) {\n                return;\n            }\n\n            //IE does not trigger change for indeterminate checkboxes\n            if ((browser.msie || browser.edge) && currentTarget.is(\":checkbox\")) {\n                if (currentTarget.prop(INDETERMINATE)) {\n                    that._preventChange = false;\n\n                    currentTarget.prop(CHECKED, !currentTarget.prop(CHECKED));\n                    currentTarget.trigger(CHANGE);\n\n                    currentTarget.on(CLICK + NS, function(e) {\n                        e.preventDefault();\n                    });\n\n                    that._preventChange = true;\n                } else {\n                    currentTarget.off(CLICK + NS);\n                    that._preventChange = false;\n                }\n            }\n\n            that._clickTarget = node;\n            that.current(node);\n        },\n\n        _focusable: function(node) {\n            return node && node.length && node.is(\":visible\") && !node.find(\".k-in\").first().hasClass(DISABLED);\n        },\n\n        _focus: function() {\n            var current = this.select(),\n                clickTarget = this._clickTarget;\n\n            // suppress initial focus state on touch devices (until keyboard is used)\n            if (kendo.support.touch) {\n                return;\n            }\n\n            if (clickTarget && clickTarget.length) {\n                current = clickTarget;\n            }\n\n            if (!this._focusable(current)) {\n                current = this.current();\n            }\n\n            if (!this._focusable(current)) {\n                current = this._nextVisible($());\n            }\n\n            this.current(current);\n        },\n\n        focus: function() {\n            var wrapper = this.wrapper,\n                scrollContainer = wrapper[0],\n                containers = [],\n                offsets = [],\n                documentElement = document.documentElement,\n                i;\n\n            do {\n                scrollContainer = scrollContainer.parentNode;\n\n                if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                    containers.push(scrollContainer);\n                    offsets.push(scrollContainer.scrollTop);\n                }\n            } while (scrollContainer != documentElement);\n\n            kendo.focusElement(wrapper);\n\n            for (i = 0; i < containers.length; i++) {\n                containers[i].scrollTop = offsets[i];\n            }\n        },\n\n        _blur: function() {\n            this.current().find(\".k-in\").first().removeClass(\"k-focus\");\n        },\n\n        _enabled: function(node) {\n            return !node.children(\"div\").children(\".k-in\").hasClass(DISABLED);\n        },\n\n        parent: function(node) {\n            var wrapperRe = /\\bk-treeview\\b(?!-)/,\n                itemRe = /\\bk-item\\b/,\n                result,\n                skipSelf;\n\n            if (typeof node == STRING) {\n                node = this.element.find(node);\n            }\n\n            if (!isDomElement(node)) {\n                node = node[0];\n            }\n\n            skipSelf = itemRe.test(node.className);\n\n            do {\n                node = node.parentNode;\n\n                if (itemRe.test(node.className)) {\n                    if (skipSelf) {\n                        result = node;\n                    } else {\n                        skipSelf = true;\n                    }\n                }\n            } while (!wrapperRe.test(node.className) && !result);\n\n            return $(result);\n        },\n\n        _nextVisible: function(node) {\n            var that = this,\n                expanded = that._expanded(node),\n                result;\n\n            function nextParent(node) {\n                while (node.length && !node.next().length) {\n                    node = that.parent(node);\n                }\n\n                if (node.next().length) {\n                    return node.next();\n                } else {\n                    return node;\n                }\n            }\n\n            if (!node.length || !node.is(\":visible\")) {\n                result = that.root.children().eq(0);\n            } else if (expanded) {\n                result = subGroup(node).children().first();\n\n                // expanded node with no children\n                if (!result.length) {\n                    result = nextParent(node);\n                }\n            } else {\n                result = nextParent(node);\n            }\n\n            return result;\n        },\n\n        _previousVisible: function(node) {\n            var that = this,\n                lastChild,\n                result;\n\n            if (!node.length || node.prev().length) {\n                if (node.length) {\n                    result = node.prev();\n                } else {\n                    result = that.root.children().last();\n                }\n\n                while (that._expanded(result)) {\n                    lastChild = subGroup(result).children().last();\n\n                    if (!lastChild.length) {\n                        break;\n                    }\n\n                    result = lastChild;\n                }\n            } else {\n                result = that.parent(node) || node;\n            }\n\n            return result;\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                target,\n                focused = that.current(),\n                expanded = that._expanded(focused),\n                checkbox = focused.find(\".k-checkbox-wrapper\").first().find(\":checkbox\"),\n                rtl = kendo.support.isRtl(that.element);\n\n            if (e.target != e.currentTarget) {\n                return;\n            }\n\n            if ((!rtl && key == keys.RIGHT) || (rtl && key == keys.LEFT)) {\n                if (expanded) {\n                    target = that._nextVisible(focused);\n                } else if (!focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                    that.expand(focused);\n                }\n            } else if ((!rtl && key == keys.LEFT) || (rtl && key == keys.RIGHT)) {\n                if (expanded && !focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                    that.collapse(focused);\n                } else {\n                    target = that.parent(focused);\n\n                    if (!that._enabled(target)) {\n                        target = undefined$1;\n                    }\n                }\n            } else if (key == keys.DOWN) {\n                target = that._nextVisible(focused);\n            } else if (key == keys.UP) {\n                target = that._previousVisible(focused);\n            } else if (key == keys.HOME) {\n                target = that._nextVisible($());\n            } else if (key == keys.END) {\n                target = that._previousVisible($());\n            } else if (key == keys.ENTER && !focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                if (!focused.find(\".k-in\").first().hasClass(\"k-selected\")) {\n                    if (!that._trigger(SELECT, focused)) {\n                        that.select(focused);\n                    }\n                }\n            } else if (key == keys.SPACEBAR && checkbox.length) {\n                if (!focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                    checkbox.prop(CHECKED, !checkbox.prop(CHECKED))\n                        .data(INDETERMINATE, false)\n                        .prop(INDETERMINATE, false);\n\n                    that._checkboxChange({ target: checkbox });\n                }\n                target = focused;\n            }\n\n            if (target) {\n                e.preventDefault();\n\n                if (focused[0] != target[0]) {\n                    that._trigger(NAVIGATE, target);\n                    that.current(target);\n                }\n            }\n        },\n\n        _keypress: function(e) {\n            var that = this;\n            var delay = 300;\n            var focusedNode = that.current().get(0);\n            var matchToFocus;\n            var key = e.key;\n            var isPrintable = key.length === 1;\n\n            if (!isPrintable) {\n                return;\n            }\n\n            if (!that._match) {\n                that._match = \"\";\n            }\n\n            that._match += key;\n            clearTimeout(that._matchTimer);\n            that._matchTimer = setTimeout(function() {\n                that._match = \"\";\n            }, delay);\n\n            matchToFocus = focusedNode &&\n                            that._matchNextByText(\n                                Array.prototype.indexOf.call(that.element.find(\".k-item\"),\n                                focusedNode), that._match\n                            );\n\n            if (!matchToFocus.length) {\n                matchToFocus = that._matchNextByText(-1, that._match);\n            }\n\n            if (matchToFocus.get(0) && matchToFocus.get(0) !== focusedNode) {\n                that._trigger(NAVIGATE, matchToFocus);\n                that.current(matchToFocus);\n            }\n        },\n\n        _matchNextByText: function(startIndex, text) {\n            var element = this.element;\n            var textNodes = element.find(\".k-in\").filter(function(i, element) {\n                return (i > startIndex &&\n                        $(element).is(\":visible\") &&\n                        $(element).text().toLowerCase().indexOf(text) === 0);\n            });\n\n            return textNodes.eq(0).closest(NODE);\n        },\n\n        _click: function(e) {\n            var that = this,\n                node = $(e.currentTarget),\n                contents = nodeContents(node.closest(NODE)),\n                href = node.attr(\"href\"),\n                shouldNavigate;\n\n            if (href) {\n                shouldNavigate = href == \"#\" || href.indexOf(\"#\" + this.element.id + \"-\") >= 0;\n            } else {\n                shouldNavigate = contents.length && !contents.children().length;\n            }\n\n            if (shouldNavigate) {\n                e.preventDefault();\n            }\n\n            if (!node.hasClass(\".k-selected\") && !that._trigger(SELECT, node)) {\n                that.select(node);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper, root,\n                wrapperClasses = \"k-treeview\";\n\n            if (element.is(\"ul\")) {\n                wrapper = element.wrap('<div />').parent();\n                root = element;\n            } else {\n                wrapper = element;\n                root = wrapper.children(\"ul\").eq(0);\n            }\n\n            that.wrapper = wrapper.addClass(wrapperClasses);\n            that.root = root;\n        },\n\n        _getSelectedNode: function() {\n            return this.element.find(\".k-selected\").closest(NODE);\n        },\n\n        _group: function(item) {\n            var that = this,\n                firstLevel = item.hasClass(KTREEVIEW),\n                group = {\n                    firstLevel: firstLevel,\n                    expanded: firstLevel || that._expanded(item)\n                },\n                groupElement = item.children(\"ul\");\n\n            groupElement\n                .addClass(that.templates.groupCssClass(group))\n                .css(\"display\", group.expanded ? \"\" : \"none\");\n\n            if (!firstLevel) {\n                groupElement.attr(\"role\", \"group\");\n            }\n\n            that._nodes(groupElement, group);\n        },\n\n        _nodes: function(groupElement, groupData) {\n            var that = this,\n                nodes = groupElement.children(\"li\"),\n                nodeData;\n\n            groupData = extend({ length: nodes.length }, groupData);\n\n            nodes.each(function(i, node) {\n                node = $(node);\n\n                nodeData = { index: i, expanded: that._expanded(node) };\n\n                updateNodeHtml(node);\n\n                that._updateNodeClasses(node, groupData, nodeData);\n\n                // iterate over child nodes\n                that._group(node);\n            });\n        },\n\n        _checkboxes: function() {\n            var options = this.options;\n            var checkboxes = options.checkboxes;\n            var defaultTemplate, checkbox;\n\n            if (checkboxes) {\n                checkbox = \"<input id='_#= item.uid #' aria-hidden='true' type='checkbox' tabindex='-1'\";\n\n\n                if (checkboxes.name) {\n                    checkbox += \" name='\" + checkboxes.name + \"'\";\n                }\n\n                checkbox += \" />\";\n\n                defaultTemplate = kendo.html.renderCheckBox($(checkbox), $.extend({}, options, {\n                    rounded: \"medium\"\n                }));\n                defaultTemplate = defaultTemplate.replace(/(<input[^/>]*)/, \"$1 #= (item.enabled === false) ? 'disabled' : '' # #= item.checked ? 'checked' : '' #\");\n\n                checkboxes = extend({\n                    template: defaultTemplate\n                }, options.checkboxes);\n\n                if (typeof checkboxes.template == STRING) {\n                    checkboxes.template = template(checkboxes.template);\n                }\n\n                options.checkboxes = checkboxes;\n            }\n        },\n\n        _updateNodeClasses: function(node, groupData, nodeData) {\n            var wrapper = node.children(\"div\"),\n                group = node.children(\"ul\"),\n                templates = this.templates;\n\n            if (node.hasClass(\"k-treeview\")) {\n                return;\n            }\n\n            nodeData = nodeData || {};\n            nodeData.expanded = typeof nodeData.expanded != UNDEFINED ? nodeData.expanded : this._expanded(node);\n            nodeData.index = typeof nodeData.index != UNDEFINED ? nodeData.index : node.index();\n            nodeData.enabled = typeof nodeData.enabled != UNDEFINED ? nodeData.enabled : !wrapper.children(\".k-in\").hasClass(\"k-disabled\");\n\n            groupData = groupData || {};\n            groupData.firstLevel = typeof groupData.firstLevel != UNDEFINED ? groupData.firstLevel : node.parent().parent().hasClass(KTREEVIEW);\n            groupData.length = typeof groupData.length != UNDEFINED ? groupData.length : node.parent().children().length;\n\n            // li\n            node.removeClass(\"k-first k-last\")\n                .addClass(templates.wrapperCssClass(groupData, nodeData));\n\n            // div\n            wrapper.removeClass(\"k-treeview-top k-treeview-mid k-treeview-bot\")\n                   .addClass(templates.cssClass(groupData, nodeData));\n\n            // span / a\n            var textWrap = wrapper.children(\".k-in\");\n            var isLink = textWrap[0] && textWrap[0].nodeName.toLowerCase() == \"a\";\n            textWrap.removeClass(\"k-in k-link k-disabled\")\n                .addClass(templates.textClass(nodeData, isLink));\n\n            // toggle button\n            if (group.length || node.attr(\"data-hasChildren\") == \"true\") {\n                wrapper.find(\".k-treeview-toggle > .k-icon\").removeClass(\"k-i-expand k-i-collapse\")\n                    .addClass(templates.toggleButtonClass(nodeData));\n\n                group.addClass(\"k-group k-treeview-group\");\n            }\n        },\n\n\n        _processNodes: function(nodes, callback) {\n            var that = this;\n            var items = that.element.find(nodes);\n            for (var i = 0; i < items.length; i++) {\n                callback.call(that, i, $(items[i]).closest(NODE));\n            }\n        },\n\n        dataItem: function(node) {\n            var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                dataSource = this.dataSource;\n\n            return dataSource && dataSource.getByUid(uid);\n        },\n\n        _dataItem: function(node) {\n            var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                dataSource = this.dataSource;\n\n            return dataSource && this._dataSourceUids[uid];\n        },\n\n        _insertNode: function(nodeData, index, parentNode, insertCallback, collapsed) {\n            var that = this,\n                group = subGroup(parentNode),\n                updatedGroupLength = group.children().length + 1,\n                childrenData,\n                groupData = {\n                    firstLevel: parentNode.hasClass(KTREEVIEW),\n                    expanded: !collapsed,\n                    length: updatedGroupLength\n                }, node, i, item, nodeHtml = \"\", firstChild, lastChild,\n                append = function(item, group) {\n                    item.appendTo(group);\n                };\n\n            for (i = 0; i < nodeData.length; i++) {\n                item = nodeData[i];\n\n                item.index = index + i;\n\n                nodeHtml += that._renderItem({\n                    group: groupData,\n                    item: item\n                });\n            }\n\n            node = $(nodeHtml);\n\n            if (!node.length) {\n                return;\n            }\n\n            that.angular(\"compile\", function() {\n                return {\n                    elements: node.get(),\n                    data: nodeData.map(function(item) {\n                        return { dataItem: item };\n                    })\n                };\n            });\n\n            if (!group.length) {\n                group = $(that._renderGroup({\n                    group: groupData\n                })).appendTo(parentNode);\n\n                parentNode.attr(ARIA_EXPANDED, true);\n            }\n\n            insertCallback(node, group);\n\n            if (parentNode.hasClass(\"k-item\")) {\n                updateNodeHtml(parentNode);\n                that._updateNodeClasses(parentNode, groupData, { expanded: !collapsed });\n            }\n\n            firstChild = node.prev().first();\n            lastChild = node.next().last();\n\n            that._updateNodeClasses(firstChild, {}, { expanded: firstChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n            that._updateNodeClasses(lastChild, {}, { expanded: lastChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n\n            // render sub-nodes\n            for (i = 0; i < nodeData.length; i++) {\n                item = nodeData[i];\n\n                if (item.hasChildren) {\n                    childrenData = item.children.data();\n\n                    if (childrenData.length) {\n                        that._insertNode(childrenData, item.index, node.eq(i), append, !item.expanded);\n                    }\n                }\n            }\n\n            return node;\n        },\n\n        _updateNodes: function(items, field) {\n            var that = this;\n            var i, node, nodeWrapper, item, isChecked, isCollapsed, kin;\n            var context = { treeview: that.options, item: item };\n            var render = field != \"expanded\" && field != \"checked\";\n\n            function setCheckedState(root, state) {\n                if (root.is(\".k-group\")) {\n                    root.find(\".k-item:not([aria-disabled])\").attr(ARIA_CHECKED, state);\n                }\n\n                root.find(\".k-checkbox-wrapper input[type=checkbox]:not([disabled])\")\n                    .prop(CHECKED, state)\n                    .data(INDETERMINATE, false)\n                    .prop(INDETERMINATE, false);\n            }\n\n            if (field == \"selected\") {\n                item = items[0];\n\n                node = that.findByUid(item.uid);\n                kin = node.find(\".k-in\").first();\n\n                kin.removeClass(\"k-hover\")\n                    .toggleClass(\"k-selected\", item[field])\n                    .end();\n\n                if (item[field]) {\n                    that.current(node);\n                }\n\n                node.attr(ARIA_SELECTED, !!item[field]);\n            } else {\n                var elements = $.map(items, function(item) {\n                    return that.findByUid(item.uid).children(\"div\");\n                });\n\n                if (render) {\n                    that.angular(\"cleanup\", function() { return { elements: elements }; });\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    context.item = item = items[i];\n                    nodeWrapper = elements[i];\n                    node = nodeWrapper.parent();\n\n                    if (render) {\n                        if (kendo.unbind) {\n                            kendo.unbind(nodeWrapper);\n                        }\n                        nodeWrapper.children(\".k-in\")\n                            .html(that.templates.itemContent(context));\n                    }\n\n                    if (field == CHECKED) {\n                        isChecked = item[field];\n\n                        setCheckedState(nodeWrapper, isChecked);\n\n                        node.attr(ARIA_CHECKED, isChecked);\n\n                        if (that.options.checkboxes.checkChildren) {\n                            setCheckedState(node.children(\".k-group\"), isChecked);\n\n                            that._setChecked(item.children, isChecked);\n\n                            that._bubbleIndeterminate(node);\n                        }\n                    } else if (field == \"expanded\") {\n                        that._toggle(node, item, item[field]);\n                    } else if (field == \"enabled\") {\n                        node.find(\".k-checkbox-wrapper input[type=checkbox]\").prop(\"disabled\", !item[field]);\n\n                        isCollapsed = !nodeContents(node).is(VISIBLE);\n\n                        node.removeAttr(ARIA_DISABLED);\n\n                        if (!item[field]) {\n                            if (item.selected) {\n                                item.set(\"selected\", false);\n                            }\n\n                            if (item.expanded) {\n                                item.set(\"expanded\", false);\n                            }\n\n                            isCollapsed = true;\n                            node.attr(ARIA_SELECTED, false)\n                                .attr(ARIA_DISABLED, true);\n                        }\n\n                        that._updateNodeClasses(node, {}, { enabled: item[field], expanded: !isCollapsed });\n                    }\n\n                    if (nodeWrapper.length) {\n                        this.trigger(\"itemChange\", { item: nodeWrapper, data: item, ns: ui });\n                    }\n                }\n\n                if (render) {\n                    that.angular(\"compile\", function() {\n                        return {\n                            elements: elements,\n                            data: $.map(items, function(item) {\n                                return [{ dataItem: item }];\n                            })\n                        };\n                    });\n                }\n            }\n        },\n\n        _appendItems: function(index, items, parentNode) {\n            var group = subGroup(parentNode);\n            var children = group.children();\n            var collapsed = !this._expanded(parentNode);\n\n            if (this.element === parentNode) {\n                var dataItems = this.dataSource.data();\n                var viewItems = this.dataSource.view();\n                var rootItems = viewItems.length < dataItems.length ? viewItems : dataItems;\n                index = rootItems.indexOf(items[0]);\n            } else if (items.length) {\n                index = items[0].parent().indexOf(items[0]);\n            }\n\n            if (typeof index == UNDEFINED) {\n                index = children.length;\n            }\n\n            this._insertNode(items, index, parentNode, function(item, group) {\n                // insert node into DOM\n                if (index >= children.length) {\n                    item.appendTo(group);\n                } else {\n                    item.insertBefore(children.eq(index));\n                }\n            }, collapsed);\n\n            if (!collapsed) {\n                this._updateNodeClasses(parentNode, {}, { expanded: !collapsed });\n                subGroup(parentNode).css(\"display\", \"block\");\n            }\n        },\n\n        _refreshChildren: function(parentNode, items, index) {\n            var i, children, child;\n            var options = this.options;\n            var loadOnDemand = options.loadOnDemand;\n            var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n\n            subGroup(parentNode).empty();\n\n            if (!items.length) {\n                updateNodeHtml(parentNode);\n            } else {\n                this._appendItems(index, items, parentNode);\n\n                children = subGroup(parentNode).children();\n\n                if (loadOnDemand && checkChildren) {\n                    this._bubbleIndeterminate(children.last());\n                }\n\n                for (i = 0; i < children.length; i++) {\n                    child = children.eq(i);\n                    this.trigger(\"itemChange\", {\n                        item: child.children(\"div\"),\n                        data: items[i],\n                        ns: ui\n                    });\n                }\n            }\n        },\n\n        _refreshRoot: function(items) {\n            var groupHtml = this._renderGroup({\n                    items: items,\n                    group: {\n                        firstLevel: true,\n                        expanded: true\n                    }\n                });\n\n            if (this.root.length && this.root[0].parentElement) {\n                this._angularItems(\"cleanup\");\n\n                var group = $(groupHtml);\n\n                this.root\n                    .attr(\"class\", group.attr(\"class\"))\n                    .html(group.html());\n            } else {\n                this.root = this.wrapper.html(groupHtml).children(\"ul\");\n            }\n\n            var elements = this.root.children(\".k-item\");\n            for (var i = 0; i < items.length; i++) {\n                this.trigger(\"itemChange\", {\n                    item: elements.eq(i),\n                    data: items[i],\n                    ns: ui\n                });\n            }\n            this._angularItems(\"compile\");\n        },\n\n        refresh: function(e) {\n            var node = e.node;\n            var action = e.action;\n            var items = e.items;\n            var parentNode = this.wrapper;\n            var options = this.options;\n            var loadOnDemand = options.loadOnDemand;\n            var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n            var i;\n\n            if (this._skip) {\n                return;\n            }\n\n            for (i = 0; i < items.length; i++) {\n                this._dataSourceUids[items[i].uid] = items[i];\n            }\n\n            if (e.field) {\n                if (!items[0] || !items[0].level) {\n                    return;\n                }\n\n                return this._updateNodes(items, e.field);\n            }\n\n            if (node) {\n                parentNode = this.findByUid(node.uid);\n                this._progress(parentNode, false);\n            }\n\n            if (checkChildren && action != \"remove\") {\n                var bubble = false;\n\n                for (i = 0; i < items.length; i++) {\n                    if (\"checked\" in items[i]) {\n                        bubble = true;\n                        break;\n                    }\n                }\n\n                if (!bubble && node && node.checked) {\n                    for (i = 0; i < items.length; i++) {\n                        items[i].checked = true;\n                    }\n                }\n            }\n\n            if (action == \"add\") {\n                this._appendItems(e.index, items, parentNode);\n            } else if (action == \"remove\") {\n                this._remove(this.findByUid(items[0].uid), false);\n            } else if (action == \"itemchange\") {\n                this._updateNodes(items);\n            } else if (action == \"itemloaded\") {\n                this._refreshChildren(parentNode, items, e.index);\n            } else {\n                this._refreshRoot(items);\n                this.element.attr(ARIA_BUSY, false);\n            }\n\n            if (action != \"remove\") {\n                for (i = 0; i < items.length; i++) {\n                    if (!loadOnDemand || items[i].expanded || items[i]._loaded) {\n                        items[i].load();\n                    }\n                }\n            }\n\n            this.wrapper.find(\">ul\").attr(\"role\", \"none\");\n\n\n            this.trigger(DATABOUND, { node: node ? parentNode : undefined$1 });\n            if (this.dataSource.filter() && this.options.checkboxes.checkChildren) {\n                this.updateIndeterminate(parentNode);\n            }\n        },\n\n        _error: function(e) {\n            var node = e.node && this.findByUid(e.node.uid);\n            var retryHtml = this.templates.retry({ messages: this.options.messages });\n\n            if (node) {\n                this._progress(node, false);\n                this._expanded(node, false);\n                nodeIcon(node).addClass(\"k-i-reload\");\n                e.node.loaded(false);\n            } else {\n                this._progress(false);\n                this.dataSource.data([]);\n                this.element.html(retryHtml);\n            }\n        },\n\n        _retryRequest: function(e) {\n            e.preventDefault();\n\n            this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n        },\n\n        expand: function(nodes) {\n            this._processNodes(nodes, function(index, item) {\n                this.toggle(item, true);\n            });\n        },\n\n        collapse: function(nodes) {\n            this._processNodes(nodes, function(index, item) {\n                this.toggle(item, false);\n            });\n        },\n\n        enable: function(nodes, enable) {\n            if (typeof nodes === \"boolean\") {\n                enable = nodes;\n                nodes = this.items();\n            } else {\n                enable = arguments.length == 2 ? !!enable : true;\n            }\n\n            this._processNodes(nodes, function(index, item) {\n                this.dataItem(item).set(\"enabled\", enable);\n            });\n        },\n\n        current: function(node) {\n            var that = this,\n                current = that._current,\n                element = that.element;\n\n            if (arguments.length > 0 && node && node.length) {\n                if (current) {\n                    current.find(\".k-in\").first().removeClass(\"k-focus\");\n                }\n\n                current = that._current = $(node, element).closest(NODE);\n                current.find(\".k-in\").first().addClass(\"k-focus\");\n                that._updateActiveDescendant();\n\n                return;\n            }\n\n            if (!current) {\n                current = that._nextVisible($());\n            }\n\n            return current;\n        },\n\n        _updateActiveDescendant: function() {\n            var current = this._current,\n                id = current[0].id || this._ariaId,\n                prev = this.element.find(\"#\" + this._ariaId);\n\n            if (prev.length > 0) {\n                prev.removeAttr(\"id\");\n            }\n\n            this.wrapper.removeAttr(ARIA_ACTIVEDESCENDANT);\n            current.attr(\"id\", id);\n            this.wrapper.attr(ARIA_ACTIVEDESCENDANT, id);\n        },\n\n        select: function(node) {\n            var that = this,\n                element = that.element;\n\n            if (!arguments.length) {\n                return element.find(\".k-selected\").closest(NODE);\n            }\n\n            node = $(node, element).closest(NODE);\n\n            element.find(\".k-selected\").each(function() {\n                var dataItem = that.dataItem(this);\n                if (dataItem) {\n                    dataItem.set(\"selected\", false);\n                    delete dataItem.selected;\n                } else {\n                    $(this).removeClass(\"k-selected\");\n                }\n            });\n\n            if (node.length) {\n                that.dataItem(node).set(\"selected\", true);\n                that._clickTarget = node;\n            }\n\n            that.trigger(CHANGE);\n        },\n\n        _toggle: function(node, dataItem, expand) {\n            var options = this.options;\n            var contents = nodeContents(node);\n            var direction = expand ? \"expand\" : \"collapse\";\n            var loaded;\n\n            if (contents.data(\"animating\")) {\n                return;\n            }\n\n            loaded = dataItem && dataItem.loaded();\n\n            if (expand && !loaded) {\n                if (options.loadOnDemand) {\n                    this._progress(node, true);\n                }\n\n                contents.remove();\n                dataItem.load();\n            } else {\n                this._updateNodeClasses(node, {}, { expanded: expand });\n\n                if (!expand) {\n                    contents.css(\"height\", contents.height()).css(\"height\");\n                }\n\n                contents\n                    .kendoStop(true, true)\n                    .kendoAnimate(extend(\n                        { reset: true },\n                        options.animation[direction],\n                        { complete: function() {\n                            if (expand) {\n                                contents.css(\"height\", \"\");\n                            }\n                        } }\n                    ));\n            }\n\n        },\n\n        toggle: function(node, expand) {\n            node = $(node);\n\n            if (!nodeIcon(node).is(\".k-i-expand, .k-i-collapse\")) {\n                return;\n            }\n\n            if (arguments.length == 1) {\n                expand = !this._expanded(node);\n            }\n\n            this._expanded(node, expand);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.wrapper.off(NS);\n            that.wrapper.find(\".k-checkbox-wrapper :checkbox\").off(NS);\n            that._clickHandler = null;\n\n            that._unbindDataSource();\n\n            if (that.dragging) {\n                that.dragging.destroy();\n            }\n\n            that._dataSourceUids = {};\n\n            kendo.destroy(that.element);\n\n            that.root = that.wrapper = that.element = null;\n        },\n\n        _expanded: function(node, value, force) {\n            var expandedAttr = kendo.attr(\"expanded\");\n            var dataItem;\n            var expanded = value;\n            var direction = expanded ? \"expand\" : \"collapse\";\n\n            if (arguments.length == 1) {\n                dataItem = this._dataItem(node);\n                return node.attr(expandedAttr) === \"true\" || (dataItem && dataItem.expanded);\n            }\n\n            dataItem = this.dataItem(node);\n\n            if (nodeContents(node).data(\"animating\")) {\n                return;\n            }\n\n            if (force || !this._trigger(direction, node)) {\n                if (expanded) {\n                    node.attr(expandedAttr, \"true\");\n                    node.attr(ARIA_EXPANDED, \"true\");\n                } else {\n                    node.removeAttr(expandedAttr);\n                    node.attr(ARIA_EXPANDED, \"false\");\n                }\n\n                if (dataItem) {\n                    dataItem.set(\"expanded\", expanded);\n                    // necessary when expanding an item yields an error and the item is not expanded as a result\n                    expanded = dataItem.expanded;\n                }\n            }\n        },\n\n        _progress: function(node, showProgress) {\n            var element = this.element;\n            var loadingText = this.templates.loading({ messages: this.options.messages });\n\n            if (arguments.length == 1) {\n                showProgress = node;\n\n                if (showProgress) {\n                    element.html(loadingText);\n                } else {\n                    element.empty();\n                }\n\n                element.attr(ARIA_BUSY, showProgress);\n            } else {\n                nodeIcon(node).toggleClass(\"k-i-loading\", showProgress).removeClass(\"k-i-reload\");\n                node.attr(ARIA_BUSY, showProgress);\n            }\n        },\n\n        text: function(node, text) {\n            var dataItem = this.dataItem(node),\n                fieldBindings = this.options[bindings.text],\n                level = dataItem.level(),\n                length = fieldBindings.length,\n                field = fieldBindings[Math.min(level, length - 1)];\n\n            if (text) {\n                dataItem.set(field, text);\n            } else {\n                return dataItem[field];\n            }\n        },\n\n        _objectOrSelf: function(node) {\n            return $(node).closest(\"[data-role=treeview]\").data(\"kendoTreeView\") || this;\n        },\n\n        _dataSourceMove: function(nodeData, group, parentNode, callback) {\n            var referenceDataItem,\n                destTreeview = this._objectOrSelf(parentNode || group),\n                destDataSource = destTreeview.dataSource;\n            var loadPromise = $.Deferred().resolve().promise();\n\n            if (parentNode && parentNode[0] != destTreeview.element[0]) {\n                referenceDataItem = destTreeview.dataItem(parentNode);\n\n                if (!referenceDataItem.loaded()) {\n                    destTreeview._progress(parentNode, true);\n                    loadPromise = referenceDataItem.load();\n                }\n\n                if (parentNode != this.root) {\n                    destDataSource = referenceDataItem.children;\n\n                    if (!destDataSource || !(destDataSource instanceof HierarchicalDataSource)) {\n                        referenceDataItem._initChildren();\n                        referenceDataItem.loaded(true);\n                        destDataSource = referenceDataItem.children;\n                    }\n                }\n            }\n\n            nodeData = this._toObservableData(nodeData);\n\n            return callback.call(destTreeview, destDataSource, nodeData, loadPromise);\n        },\n\n        _toObservableData: function(node) {\n            var dataItem = node, dataSource, uid;\n\n            if (isJQueryInstance(node) || isDomElement(node)) {\n                dataSource = this._objectOrSelf(node).dataSource;\n                uid = $(node).attr(kendo.attr(\"uid\"));\n                dataItem = dataSource.getByUid(uid);\n\n                if (dataItem) {\n                    dataItem = dataSource.remove(dataItem);\n                }\n            }\n\n            return dataItem;\n        },\n\n        _insert: function(data, model, index) {\n            if (!(model instanceof kendo.data.ObservableArray)) {\n                if (!isArray(model)) {\n                    model = [model];\n                }\n            } else {\n                // items will be converted to new Node instances\n                model = model.toJSON();\n            }\n\n            var parentNode = data.parent();\n\n            if (parentNode && parentNode._initChildren) {\n                parentNode.hasChildren = true;\n                parentNode._initChildren();\n            }\n\n            data.splice.apply(data, [ index, 0 ].concat(model));\n\n            return this.findByUid(data[index].uid);\n        },\n\n        insertAfter: insertAction(1),\n\n        insertBefore: insertAction(0),\n\n        append: function(nodeData, parentNode, success) {\n            var group = this.root;\n\n            if (parentNode && nodeData instanceof jQuery && parentNode[0] === nodeData[0]) {\n                return;\n            }\n\n            parentNode = parentNode && parentNode.length ? parentNode : null;\n\n            if (parentNode) {\n                group = subGroup(parentNode);\n            }\n\n            return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model, loadModel) {\n                var inserted;\n                var that = this;\n\n                function add() {\n                    if (parentNode) {\n                        that._expanded(parentNode, true, true);\n                    }\n\n                    var data = dataSource.data(),\n                        index = Math.max(data.length, 0);\n\n                    return that._insert(data, model, index);\n                }\n\n                loadModel.done(function() {\n                    inserted = add();\n                    success = success || $.noop;\n                    success(inserted);\n                });\n\n                return inserted || null;\n            });\n        },\n\n        _remove: function(node, keepData) {\n            var that = this,\n                parentNode,\n                prevSibling, nextSibling;\n\n            node = $(node, that.element);\n\n            if (node.attr(\"id\") === that.element.attr(ARIA_ACTIVEDESCENDANT)) {\n                that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n            }\n\n            this.angular(\"cleanup\", function() {\n                return { elements: node.get() };\n            });\n\n            parentNode = node.parent().parent();\n            prevSibling = node.prev();\n            nextSibling = node.next();\n\n            node[keepData ? \"detach\" : \"remove\"]();\n\n            if (parentNode.hasClass(\"k-item\")) {\n                updateNodeHtml(parentNode);\n                that._updateNodeClasses(parentNode);\n            }\n\n            that._updateNodeClasses(prevSibling);\n            that._updateNodeClasses(nextSibling);\n\n            return node;\n        },\n\n        remove: function(node) {\n            var dataItem = this.dataItem(node);\n            if (dataItem) {\n                this.dataSource.remove(dataItem);\n            }\n        },\n\n        detach: function(node) {\n            return this._remove(node, true);\n        },\n\n        findByText: function(text) {\n            return $(this.element).find(\".k-in\").filter(function(i, element) {\n                return $(element).text() == text;\n            }).closest(NODE);\n        },\n\n        findByUid: function(uid) {\n            var items = this.element.find(\".k-item\");\n            var uidAttr = kendo.attr(\"uid\");\n            var result;\n\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].getAttribute(uidAttr) == uid) {\n                    result = items[i];\n                    break;\n                }\n            }\n\n            return $(result);\n        },\n\n        expandPath: function(path, complete) {\n            var treeview = this;\n            var nodeIds = path.slice(0);\n            var callback = complete || $.noop;\n\n            function proceed() {\n                nodeIds.shift();\n\n                if (nodeIds.length) {\n                    expand(nodeIds[0]).then(proceed);\n                } else {\n                    callback.call(treeview);\n                }\n            }\n\n            function expand(id) {\n                var result = $.Deferred();\n                var node = treeview.dataSource.get(id);\n                var expandedAttr = kendo.attr(\"expanded\");\n                var nodeElement;\n\n                if (node) {\n                    nodeElement = treeview.findByUid(node.uid);\n\n                    if (node.loaded()) {\n                        node.set(\"expanded\", true);\n                        nodeElement.attr(expandedAttr, true);\n                        nodeElement.attr(ARIA_EXPANDED, true);\n                        result.resolve();\n                    } else {\n                        // manually show progress of the node\n                        // should be moved to `refresh`\n                        // if the datasource starts triggering a `requestStart` event for nodes\n                        treeview._progress(nodeElement, true);\n\n                        node.load().then(function() {\n                            node.set(\"expanded\", true);\n                            nodeElement.attr(expandedAttr, true);\n                            nodeElement.attr(ARIA_EXPANDED, true);\n                            result.resolve();\n                        });\n                    }\n                } else {\n                    result.resolve();\n                }\n\n                return result.promise();\n            }\n\n            // expand async nodes\n            expand(nodeIds[0]).then(proceed);\n        },\n\n        _parentIds: function(node) {\n            var parent = node && node.parentNode();\n            var parents = [];\n            while (parent && parent.parentNode) {\n                parents.unshift(parent.id);\n                parent = parent.parentNode();\n            }\n\n            return parents;\n        },\n\n        expandTo: function(node) {\n            if (!(node instanceof kendo.data.Node)) {\n                node = this.dataSource.get(node);\n            }\n\n            var parents = this._parentIds(node);\n\n            this.expandPath(parents);\n        },\n\n        _renderItem: function(options) {\n            if (!options.group) {\n                options.group = {};\n            }\n\n            options.treeview = this.options;\n\n            options.r = this.templates;\n\n            return this.templates.item(options);\n        },\n\n        _renderGroup: function(options) {\n            var that = this;\n\n            options.renderItems = function(options) {\n                    var html = \"\",\n                        i = 0,\n                        items = options.items,\n                        len = items ? items.length : 0,\n                        group = options.group;\n\n                    group.length = len;\n\n                    for (; i < len; i++) {\n                        options.group = group;\n                        options.item = items[i];\n                        options.item.index = i;\n                        html += that._renderItem(options);\n                    }\n\n                    return html;\n                };\n\n            options.r = that.templates;\n\n            return that.templates.group(options);\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"TreeView\", \"k-treeview-\");\n\n    ui.plugin(TreeView);\n})(window.kendo.jQuery);\n"]}