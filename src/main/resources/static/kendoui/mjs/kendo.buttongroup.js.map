{"version":3,"file":"kendo.buttongroup.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","ui","Widget","ToggleButton","Button","keys","NS","SELECTED","DISABLED","SELECT","ARIA_DISABLED","DOT","NONE","SINGLE","MULTIPLE","FOCUS","ButtonGroup","extend","init","element","options","that","this","fn","call","wrapper","_buttons","_renderItems","items","selectedIndices","addClass","KWIDGET","attr","_enable","enable","enabled","forEach","b","selection","select","index","_attachEvents","events","preventKeyNav","badge","item","value","badgeEl","button","isNaN","find","getKendoToggleButton","getKendoButton","validValue","_badge","text","htmlEncode","destroy","empty","remove","current","off","each","i","el","component","toggleClass","focused","hasClass","is","removeAttr","trigger","nodeType","length","idx","toggle","_toggleIndex","_resetIndexes","_addButton","selected","btn","bind","_select","on","_keyDown","e","buttonGroup","focusableItems","focusedElement","currentIndex","isRtl","support","keyCode","LEFT","RIGHT","eq","preventDefault","children","buttons","image","disabled","attrValue","icon","push","encoded","url","attributes","appendTo","indices","target","indexOf","splice","plugin","jQuery"],"sources":["kendo.buttongroup.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.togglebutton.js';\nimport './kendo.button.js';\n\nvar __meta__ = {\n    id: \"buttongroup\",\n    name: \"ButtonGroup\",\n    category: \"web\",\n    description: \"The Kendo ButtonGroup widget is a linear set of grouped buttons.\",\n    depends: [ \"core\", \"togglebutton\", \"button\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var ToggleButton = ui.ToggleButton;\n    var Button = ui.Button;\n    var keys = kendo.keys;\n    var NS = \".kendoButtonGroup\";\n    var KWIDGET = \"k-widget\";\n    var KBUTTONGROUP = \"k-button-group\";\n    var KBUTTON = \"k-button\";\n    var SELECTED = \"k-selected\";\n    var DISABLED = \"k-disabled\";\n    var KFOCUS = \"k-focus\";\n    var SELECT = \"select\";\n    var KEYDOWN = \"keydown\";\n    var ARIA_DISABLED = \"aria-disabled\";\n    var EMPTY = \" \";\n    var DOT = \".\";\n    var NONE = \"none\";\n    var SINGLE = \"single\";\n    var MULTIPLE = \"multiple\";\n    var TOGGLE = \"toggle\";\n    var FOCUS = \"focus\";\n\n    var ButtonGroup = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n\n            that._buttons = that._renderItems(that.options.items);\n\n            that.selectedIndices = [];\n\n            that.element\n                .addClass(KWIDGET + EMPTY + KBUTTONGROUP)\n                .attr(\"role\", \"group\");\n\n            that._enable = true;\n\n            if (!that.options.enable || !that.options.enabled) {\n                that._enable = false;\n                that.element\n                        .attr(ARIA_DISABLED, true)\n                        .addClass(DISABLED);\n\n                that._buttons.forEach((b) => {\n                    b.enable(false);\n                });\n            }\n\n            if (that.options.selection !== NONE) {\n                that.select(that.options.index);\n            }\n\n            that._attachEvents();\n        },\n\n        events: [\n            SELECT\n        ],\n\n        options: {\n            name: \"ButtonGroup\",\n            selection: SINGLE,\n            index: -1,\n            enable: true,\n            enabled: true,\n            preventKeyNav: false\n        },\n\n        badge: function(item, value) {\n            var that = this,\n                element = that.element,\n                button = !isNaN(item) ? that._buttons[item] : element.find(item).getKendoToggleButton() || element.find(item).getKendoButton(),\n                validValue = value || value === 0,\n                badge, badgeEl;\n\n            if (!button) {\n                return;\n            }\n\n            badge = button.badge;\n\n            if (!badge && validValue) {\n                button._badge({ text: kendo.htmlEncode(value) });\n                return kendo.htmlEncode(value);\n            }\n\n            if (validValue) {\n                badge.text(kendo.htmlEncode(value));\n            } else if (value === false) {\n                button.badge = null;\n                badgeEl = badge.element;\n                badge.destroy();\n                badgeEl.empty().remove();\n                return;\n            }\n\n            return badge ? badge.text() : null;\n        },\n\n        current: function() {\n            return this.element.find(DOT + SELECTED);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n\n            that.element.find(DOT + KBUTTON).each(function(i, el) {\n                var component = $(el).getKendoToggleButton() || $(el).getKendoButton();\n\n                if (component) {\n                    component.destroy();\n                }\n            });\n\n            Widget.fn.destroy.call(that);\n        },\n\n        enable: function(enable) {\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            this.element\n                    .attr(ARIA_DISABLED, !enable)\n                    .toggleClass(DISABLED, !enable);\n\n            this._buttons.forEach((b) => {\n                var focused = b.element.hasClass(KFOCUS) || b.element.is(\":focus\");\n\n                b.enable(enable);\n\n                if (focused) {\n                    b.element.removeAttr(\"disabled\").addClass(\"k-focus\").trigger(\"focus\");\n                }\n            });\n\n            this._enable = this.options.enable = enable;\n        },\n\n        select: function(el) {\n            var that = this,\n                button,\n                index = -1;\n\n            if (this.options.selection === NONE || el === undefined$1 || el === -1) {\n                return;\n            }\n\n            if (typeof el === \"number\") {\n                index = el;\n            } else if (el.nodeType) {\n                el = $(el);\n                index = el.index();\n            } else {\n                index = el.index();\n            }\n\n            button = that._buttons[index];\n\n            if (!button) {\n                return;\n            }\n\n            if (that.options.selection === MULTIPLE) {\n                if (el.length > 1) {\n                    el.each((i, element) => {\n                        var idx = $(element).index();\n\n                        that._buttons[idx].toggle();\n                        that._toggleIndex(idx);\n                    });\n                } else {\n                    that._buttons[index].toggle();\n                    that._toggleIndex(index);\n                }\n            } else {\n                that._resetIndexes(index);\n            }\n        },\n\n        _addButton: function(el, options) {\n            if (this.options.selection === NONE) {\n                delete options.selected;\n\n                return new Button(el, options);\n            } else {\n                var btn = new ToggleButton(el, options);\n\n                btn.bind(TOGGLE, this._select.bind(this, el));\n\n                return btn;\n            }\n        },\n\n        _attachEvents: function() {\n            if (!this.options.preventKeyNav) {\n                this.element.on(KEYDOWN + NS, this._keyDown.bind(this));\n            }\n        },\n\n        _keyDown: function(e) {\n            var that = this,\n                buttonGroup = $(that.element),\n                focusableItems = buttonGroup.find(DOT + KBUTTON),\n                focusedElement = buttonGroup.find(\":focus\"),\n                currentIndex = focusableItems.index(focusedElement),\n                isRtl = kendo.support.isRtl(that.element),\n                itemToFocus;\n\n            if ((e.keyCode === keys.LEFT && !isRtl) || (e.keyCode === keys.RIGHT && isRtl)) {\n                itemToFocus = currentIndex === 0 ? focusableItems.eq(focusableItems.length - 1) : $(focusableItems[currentIndex - 1]);\n                itemToFocus.trigger(FOCUS);\n                e.preventDefault();\n            } else if ((e.keyCode === keys.LEFT && isRtl) || (e.keyCode === keys.RIGHT && !isRtl)) {\n                itemToFocus = currentIndex + 1 === focusableItems.length ? focusableItems.eq(0) : $(focusableItems[currentIndex + 1]);\n                itemToFocus.trigger(FOCUS);\n                e.preventDefault();\n            }\n        },\n\n        _renderItems: function(items) {\n            var that = this,\n                children = that.element.children(),\n                buttons = [];\n\n            if (children.length > 0) {\n                children.each(function() {\n                    var el = $(this),\n                        image = el.find(\"img\").addClass(\"k-image\"),\n                        disabled = el.is(\"[disabled]\") || el.hasClass(DISABLED),\n                        options = {\n                            badge: kendo.attrValue(el, \"badge\"),\n                            icon: !image[0] ? kendo.attrValue(el, \"icon\") : null,\n                            disabled: disabled,\n                            selected: !disabled ? el.is(DOT + SELECTED) : false\n                        };\n\n                    buttons.push(that._addButton(el, options));\n                });\n            }\n\n            if (!items) {\n                return buttons;\n            }\n\n            items.forEach(function(item) {\n                var text = item.text ? item.encoded === false ? item.text : kendo.htmlEncode(item.text) : \"\",\n                    el = item.url ? $(\"<a href=\" + item.url + \">\") : $(\"<button>\");\n\n                el.text(text);\n\n                if (item.attributes) {\n                    el.attr(item.attributes);\n                }\n\n                el.appendTo(that.element);\n                buttons.push(that._addButton(el, item));\n            });\n\n            return buttons;\n        },\n\n        _resetIndexes: function(index) {\n            this.selectedIndices = [];\n            this._buttons.forEach((b) => {\n                b.toggle(false);\n            });\n\n            this._buttons[index].toggle(true);\n            this.selectedIndices.push(index);\n        },\n\n        _select: function(button) {\n            var selection = this.options.selection,\n                index = button.index();\n\n            if (!this._enable || button.is(DOT + DISABLED)) {\n                return;\n            }\n\n            if (selection === MULTIPLE) {\n                this._toggleIndex(index);\n            } else if (selection === SINGLE) {\n                this._resetIndexes(index);\n            }\n\n            this.trigger(SELECT, { indices: this.selectedIndices, target: button });\n        },\n\n        _toggleIndex: function(index) {\n            if (this.selectedIndices.indexOf(index) === -1) {\n                this.selectedIndices.push(index);\n            } else {\n                this.selectedIndices.splice(this.selectedIndices.indexOf(index), 1);\n            }\n        }\n    });\n\n    ui.plugin(ButtonGroup);\n})(window.kendo.jQuery);\n"]}