{"version":3,"file":"kendo.mediaplayer.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","END","PAUSE","PLAY","READY","TIMECHANGE","VOLUMECHANGE","FULLSCREEN_ENTER","FULLSCREEN_EXIT","MUTE","LOW_VOLUME","HIGH_VOLUME","VIDEO_QUALITY","STATE_PLAY","STATE_PAUSE","TITLEBAR","TOOLBAR","SLIDER","VOLUME_SLIDER","MEDIA","OVERLAY","YTPLAYER","DOT","ui","ns","baseTime","Date","timeZoneSec","getTimezoneOffset","Widget","isArray","Array","timeFormats","template","keys","templates","htmlPlayer","titleBar","toolBar","youtubePlayer","toolBarTime","slider","volumeSlider","qualityDropDown","toolTip","MediaPlayer","extend","init","element","options","this","wrapper","fn","call","addClass","_currentIndex","_createTitlebar","_createToolbar","_createDropDown","_createSlider","_createVolumeSlider","_timers","_aria","_navigatable","fullScreen","media","notify","events","autoPlay","autoRepeat","volume","mute","navigatable","forwardSeek","messages","pause","play","unmute","quality","fullscreen","_msToTime","ms","time","getTime","setSeconds","_timeToSec","_titleBar","find","length","append","sliderElement","_slider","_sliderDragChangeHandler","_sliderDragChange","bind","_sliderDraggingHandler","_sliderDragging","Slider","smallStep","tickPlacement","showButtons","change","slide","tooltip","dragHandleTitle","volumeSliderElement","_volumeSlider","_volumeDraggingHandler","_volumeDragging","_volumeChangeHandler","_volumeChange","width","min","max","value","enabled","_resetTime","_youTubeVideo","_ytmedia","seekTo","_media","currentTime","_mediaTimeUpdate","grep","_toolBar","items","e","_currentUrl","source","url","_isYouTubeUrl","match","_setPlayerUrl","oldPlayer","stop","toggle","initialized","_initializePlayer","_videoOverlay","hide","loadVideoById","_getMediaId","_playStateToggle","cueVideoById","show","remove","attr","toolBarElement","_toolbarClickHandler","_toolbarClick","ToolBar","click","resizable","type","attributes","class","icon","fillMode","off","before","_volumeButton","_fullscreenButton","_currentTimeElement","_durationElement","_playButton","_playButtonSpan","support","cssFlexbox","wrapAll","dropDownElement","data","_dropDownSelectHandler","_dropDownSelect","_dropDown","DropDownList","dataTextField","dataValueField","popup","position","origin","appendTo","animation","open","effects","duration","select","setDataSource","removeClass","list","item","index","target","children","first","isPaused","hasClass","_isInFullScreen","muted","_isDragging","that","sender","tzOffset","_sliderChangeFired","_seekBarLastPosition","setTimeout","trigger","_preventPlay","_changeVolumeButtonImage","volumeButton","volumeElement","cssClass","substring","lastIndexOf","getCurrentTime","timeInMs","text","toString","_timeFormat","isPlaying","is","_mediaEnded","_mediaPlay","_mediaReady","_mediaDurationChange","durationTime","getDuration","getHours","setOptions","_isFirstRun","_createYoutubePlayer","_mediaTimeUpdateHandler","_mediaDurationChangeHandler","prepend","_ytPlayer","css","height","YT","Player","_configurePlayer","onYouTubeIframeAPIReadyRegister","getScript","onYouTubeIframeAPIReady","i","_youtubeApiReady","_poll","callback","interval","context","clearTimeout","callLater","vars","autoplay","wmode","controls","rel","showinfo","_onYouTubePlayerReady","onYouTubePlayerReady","_onPlayerStateChangeHandler","_onPlayerStateChange","onPlayerStateChange","videoId","playerVars","onReady","onStateChange","event","getIframe","style","_updateTitle","titlebar","title","_paused","setVolume","_uiDisplay","result","_mouseClick","_mouseMoveHandler","_mouseMove","_mouseInHandler","_mouseIn","_mouseOutHandler","_mouseOut","on","_createHtmlPlayer","_mouseClickHanlder","_mediaEndedHandler","_mediaCanPlayHandler","_mediaPlayHandler","after","ontimeupdate","ondurationchange","oncanplay","onplay","onended","loop","_mouseIdle","state","animationSpeed","uiElements","add","parent","fadeIn","fadeOut","destroy","_keyDownHandler","_fullscreenHandler","_youtubeApiReadyHandler","src","_mouseMoveTimer","seek","seconds","playVideo","mobileOS","stopVideo","pauseVideo","toolbar","dropdown","enterFullScreen","get","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","document","cancelFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msCancelFullscreen","exitFullscreen","msExitFullscreen","resize","_volume","currentState","isMuted","unMute","getVolume","isEnded","getPlayerState","ended","_mediaData","_fullscreen","_keyDown","isFullScreen","mozFullScreen","webkitIsFullScreen","preventDefault","fsButton","keyCode","SPACEBAR","ENTER","ESC","_error","_progress","plugin","jQuery"],"sources":["kendo.mediaplayer.js"],"mappings":"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","sourcesContent":["import './kendo.slider.js';\nimport './kendo.toolbar.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.tooltip.js';\n\nvar __meta__ = {\n        id: \"mediaplayer\",\n        name: \"MediaPlayer\",\n        category: \"web\",\n        description: \"\",\n        depends: [\"slider\", \"toolbar\", \"dropdownlist\", \"tooltip\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            END = \"end\",\n            PAUSE = \"pause\",\n            PLAY = \"play\",\n            READY = \"ready\",\n            TIMECHANGE = \"timeChange\",\n            VOLUMECHANGE = \"volumeChange\",\n            FULLSCREEN_ENTER = \"k-i-full-screen\",\n            FULLSCREEN_EXIT = \"k-i-full-screen-exit\",\n            MUTE = \"k-i-volume-off\",\n            LOW_VOLUME = \"k-i-volume-down\",\n            HIGH_VOLUME = \"k-i-volume-up\",\n            VIDEO_QUALITY = \"k-mediaplayer-quality\",\n            STATE_PLAY = \"k-i-play\",\n            STATE_PAUSE = \"k-i-pause\",\n            TITLEBAR = \"k-mediaplayer-titlebar\",\n            TITLE = \"k-title\",\n            TOOLBARWRAP = \"k-mediaplayer-toolbar-wrap\",\n            TOOLBAR = \"k-mediaplayer-toolbar\",\n            SLIDER = \"k-mediaplayer-seekbar\",\n            VOLUME_SLIDER = \"k-mediaplayer-volume\",\n            MEDIA = \"k-mediaplayer-media\",\n            OVERLAY = \"k-mediaplayer-overlay\",\n            YTPLAYER = \"k-mediaplayer-yt\",\n            DOT = \".\",\n            ui = kendo.ui,\n            ns = \".kendoMediaPlayer\",\n            baseTime = new Date(1970, 0, 1),\n            timeZoneSec = baseTime.getTimezoneOffset() * 60,\n            Widget = kendo.ui.Widget,\n            isArray = Array.isArray,\n            timeFormats = {\n                shortTime: \"mm:ss\",\n                longTime: \"HH:mm:ss\"\n            },\n            template = kendo.template,\n            keys = kendo.keys,\n            templates = {\n                htmlPlayer: \"<video class='\" + MEDIA + \"'> </video>\",\n                titleBar: template(\"<div class='\" + TITLEBAR + \"'><span class='\" + TITLE + \"'>Video Title</span></div>\"),\n                toolBar: \"<div class='\" + TOOLBARWRAP + \"'><div class='\" + TOOLBAR + \"'></div></div>\",\n                youtubePlayer: \"<div class='\" + YTPLAYER + \"'> </div>\",\n                toolBarTime: \"<span class='k-mediaplayer-currenttime'>00:00:00</span> / <span class='k-mediaplayer-duration'>00:00:00</span>\",\n                slider: \"<input class='\" + SLIDER + \"' value='0' title='seekbar' />\",\n                volumeSlider: \"<input class='\" + VOLUME_SLIDER + \"' title='volume'/>\",\n                qualityDropDown: \"<input class='\" + VIDEO_QUALITY + \"' title='video quality' />\",\n                toolTip: \"#= kendo.toString(new Date(value), 'HH:mm:ss') #\"\n            };\n\n        var MediaPlayer = Widget.extend({\n            init: function(element, options) {\n                this.wrapper = $(element);\n\n                Widget.fn.init.call(this, element, options);\n\n                this.wrapper.addClass(\"k-mediaplayer k-widget\");\n\n                options = this.options;\n\n                this._currentIndex = 0;\n\n                this._createTitlebar();\n\n                this._createToolbar();\n\n                this._createDropDown();\n\n                this._createSlider();\n\n                this._createVolumeSlider();\n\n                this._timers = {};\n\n                this._aria();\n\n                this._navigatable();\n\n                if (options.fullScreen) {\n                    this.fullScreen(true);\n                }\n\n                if (options.media) {\n                    this.media(this.options.media);\n                }\n\n                kendo.notify(this);\n            },\n\n            events: [\n                END,\n                PAUSE,\n                PLAY,\n                READY,\n                TIMECHANGE,\n                VOLUMECHANGE\n            ],\n\n            options: {\n                name: \"MediaPlayer\",\n                autoPlay: false,\n                autoRepeat: false,\n                volume: 100,\n                fullScreen: false,\n                mute: false,\n                navigatable: false,\n                forwardSeek: true,\n                media: null,\n                messages: {\n                    \"pause\": \"Pause\",\n                    \"play\": \"Play\",\n                    \"mute\": \"Mute\",\n                    \"unmute\": \"Unmute\",\n                    \"quality\": \"Quality\",\n                    \"fullscreen\": \"Full Screen\"\n                }\n            },\n\n            _msToTime: function(ms) {\n                var time = new Date(baseTime.getTime());\n                time.setSeconds(ms);\n                return time;\n            },\n\n            _timeToSec: function(time) {\n                var curTime = new Date(time).getTime();\n                return curTime / 1000;\n            },\n\n            _createTitlebar: function() {\n                this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                if (this._titleBar.length === 0) {\n                    this.wrapper.append(templates.titleBar);\n                    this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                }\n            },\n\n            _createSlider: function() {\n                var sliderElement = this.wrapper.find(DOT + SLIDER);\n                if (!this._slider) {\n                    this._sliderDragChangeHandler = this._sliderDragChange.bind(this);\n                    this._sliderDraggingHandler = this._sliderDragging.bind(this);\n                    sliderElement = this.wrapper.find(DOT + SLIDER);\n\n                    this._slider = new ui.Slider(sliderElement[0], {\n                        smallStep: 1000,\n                        tickPlacement: \"none\",\n                        showButtons: false,\n                        change: this._sliderDragChangeHandler,\n                        slide: this._sliderDraggingHandler,\n                        tooltip: {\n                            template: templates.toolTip\n                        },\n                        dragHandleTitle: this.options.messages.time\n                    });\n                }\n            },\n\n            _createVolumeSlider: function() {\n                var volumeSliderElement = this.wrapper.find(DOT + VOLUME_SLIDER);\n                if (!this._volumeSlider) {\n                    this._volumeDraggingHandler = this._volumeDragging.bind(this);\n                    this._volumeChangeHandler = this._volumeChange.bind(this);\n                    volumeSliderElement.width(87);\n                    this._volumeSlider = new ui.Slider(volumeSliderElement[0], {\n                        smallStep: 1,\n                        min: 0,\n                        max: 100,\n                        value: this.options.volume,\n                        slide: this._volumeDraggingHandler,\n                        change: this._volumeChangeHandler,\n                        tickPlacement: \"none\",\n                        showButtons: false,\n                        tooltip: { enabled: false },\n                        dragHandleTitle: this.options.messages.volume\n                    });\n                }\n            },\n\n            _resetTime: function() {\n                if (this._youTubeVideo) {\n                    this._ytmedia.seekTo(0, true);\n                } else {\n                    this._media.currentTime = 0;\n                }\n\n                this._mediaTimeUpdate();\n                $.grep(this._toolBar.options.items, function(e) { return !!e.template; }).template = templates.toolBarTime;\n            },\n\n            _currentUrl: function() {\n                var media = this.media();\n                return isArray(media.source) ? media.source[this._currentIndex].url : media.source;\n            },\n\n            _isYouTubeUrl: function() {\n                return !!this._currentUrl().match(\"youtube.com/|youtu.be/\");\n            },\n\n            _setPlayerUrl: function() {\n                var oldPlayer = this._youTubeVideo;\n                this.stop();\n\n                this._youTubeVideo = this._isYouTubeUrl();\n\n                if (oldPlayer !== this._youTubeVideo) {\n                    this.wrapper.find(DOT + YTPLAYER).toggle();\n                    this.wrapper.find(DOT + MEDIA).toggle();\n                }\n\n                var initialized = this._media || this._ytmedia;\n\n                this._initializePlayer();\n\n                if (initialized) { //mute and volume settings should be persisted when switching between html and youtube players\n                    this.mute(this.mute());\n                    this.volume(this.volume());\n                }\n\n                if (!this._youTubeVideo) {\n                    this._videoOverlay.show();\n                    this.wrapper.find(DOT + MEDIA + \" > source\").remove();\n                    this.wrapper.find(DOT + MEDIA).attr(\"src\", this._currentUrl());\n\n                    if (this.options.autoPlay) {\n                        this.play();\n                    }\n                }\n                else if (this._ytmedia) {\n                    if (this._videoOverlay) {\n                        this._videoOverlay.hide();\n                    }\n                    if (this.options.autoPlay) {\n                        this._ytmedia.loadVideoById(this._getMediaId());\n                        this._playStateToggle(true);\n                    }\n                    else {\n                        this._ytmedia.cueVideoById(this._getMediaId());\n                        this._playStateToggle(true);\n                    }\n                }\n            },\n\n            _createToolbar: function() {\n                var toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                if (toolBarElement.length === 0) {\n                    this._toolbarClickHandler = this._toolbarClick.bind(this);\n                    this.wrapper.append(templates.toolBar);\n                    toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                    toolBarElement.width(this.wrapper.find(DOT + MEDIA).width());\n                    this._toolBar = new ui.ToolBar(toolBarElement, {\n                        click: this._toolbarClickHandler,\n                        resizable: false,\n                        items: [\n                            {\n                                type: \"button\",\n                                attributes: { \"class\": \"k-play-button\" },\n                                icon: \"play\",\n                                fillMode: \"flat\"\n                            },\n                            {\n                                template: templates.toolBarTime,\n                                attributes: { \"class\": \"k-mediaplayer-currenttime-wrap\" }\n                            },\n                            {\n                                type: \"spacer\"\n                            },\n                            {\n                                type: \"button\",\n                                attributes: { \"class\": \"k-volume-button\" },\n                                icon: \"volume-up\",\n                                fillMode: \"flat\"\n                            },\n                            {\n                                template: templates.volumeSlider,\n                                attributes: { \"class\": \"k-mediaplayer-volume-wrap\" }\n                            },\n                            {\n                                template: templates.qualityDropDown,\n                                attributes: { \"class\": \"k-mediaplayer-quality-wrap\" }\n                            },\n                            {\n                                type: \"button\",\n                                attributes: { \"class\": \"k-fullscreen-button\" },\n                                icon: \"full-screen\",\n                                fillMode: \"flat\"\n                            }\n                        ]\n                    });\n\n                    this._toolBar.wrapper.off(\"keydown\");\n                    toolBarElement.before(templates.slider);\n\n                    this._volumeButton = toolBarElement.find(\".k-volume-button\");\n                    this._fullscreenButton = toolBarElement.find(\".k-fullscreen-button\");\n                    this._volumeButton.attr(\"title\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                    this._volumeButton.attr(\"aria-label\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                    this._fullscreenButton.attr(\"title\", this.options.messages.fullscreen);\n                    this._fullscreenButton.attr(\"aria-label\", this.options.messages.fullscreen);\n\n                    toolBarElement.width(\"auto\");\n                    this._currentTimeElement = toolBarElement.find(\".k-mediaplayer-currenttime\");\n                    this._durationElement = toolBarElement.find(\".k-mediaplayer-duration\");\n                    this._playButton = toolBarElement.find(\".k-play-button\");\n                    this._playButtonSpan = this._playButton.find(\".k-i-play\");\n\n                    if (this.options.autoPlay) {\n                        this._playStateToggle(true);\n                    }\n\n                    if ( kendo.support.cssFlexbox === false ) {\n                        $([\n                            this._volumeButton[0],\n                            toolBarElement.find(\".k-mediaplayer-volume-wrap\")[0],\n                            toolBarElement.find(\".k-mediaplayer-quality-wrap\")[0],\n                            this._fullscreenButton[0]\n                        ]).wrapAll(\"<div class='k-align-right' />\");\n                    }\n                }\n            },\n\n            _createDropDown: function() {\n                var dropDownElement = this.wrapper.find(DOT + VIDEO_QUALITY);\n                var media = this.media();\n                if (typeof dropDownElement.data(\"kendoDropDownList\") === \"undefined\") {\n                    this._dropDownSelectHandler = this._dropDownSelect.bind(this);\n                    this._dropDown = new ui.DropDownList(dropDownElement, {\n                        dataTextField: \"quality\",\n                        dataValueField: \"url\",\n                        popup: {\n                            position: \"bottom\",\n                            origin: \"top\",\n                            appendTo: this.wrapper\n                        },\n                        animation: {\n                            open: {\n                                effects: \"slideIn:up\",\n                                duration: 1\n                            }\n                        },\n                        select: this._dropDownSelectHandler\n                    });\n\n                    if (media && isArray(media.source)) {\n                        this._dropDown.setDataSource(media.source);\n                        this._dropDown.select(0);\n                    }\n\n                    this._dropDown.wrapper.addClass(\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n                    this._dropDown.wrapper.attr(\"title\", this.options.messages.quality).hide();\n                    this._dropDown.wrapper.find(\"span.k-i-arrow-s\")\n                        .removeClass('k-i-arrow-s')\n                        .addClass('k-icon k-i-hd');\n                    this._dropDown.list.addClass(\"k-quality-list\");\n                }\n            },\n\n            _dropDownSelect: function(e) {\n                if (this._currentIndex !== e.item.index()) {\n                    this._currentIndex = e.item.index();\n                    this._setPlayerUrl();\n                }\n            },\n\n            _toolbarClick: function(e) {\n                var target = $(e.target).children().first();\n                var isPaused = target.hasClass(STATE_PLAY);\n\n                if (!this.media()) {\n                    return;\n                }\n\n                if (target.hasClass(STATE_PLAY) || target.hasClass(STATE_PAUSE)) {\n                    if (isPaused) {\n                        this.play();\n                    }\n                    else {\n                        this.pause();\n                    }\n                }\n\n                if (target.hasClass(FULLSCREEN_ENTER) || target.hasClass(FULLSCREEN_EXIT)) {\n                    if (this._isInFullScreen) {\n                        target\n                            .removeClass(FULLSCREEN_EXIT)\n                            .addClass(FULLSCREEN_ENTER);\n                        this.fullScreen(false);\n                    } else {\n                        target\n                            .removeClass(FULLSCREEN_ENTER)\n                            .addClass(FULLSCREEN_EXIT);\n                        this.fullScreen(true);\n                    }\n                }\n\n                if (target.hasClass(MUTE) || target.hasClass(LOW_VOLUME) || target.hasClass(HIGH_VOLUME)) {\n                    var muted = this.mute();\n                    this.mute(!muted);\n                }\n            },\n\n            _sliderDragging: function() {\n                if (!this.media()) {\n                    return;\n                }\n\n                this._isDragging = true;\n            },\n\n            _sliderDragChange: function(e) {\n                var that = this;\n                var slider = e.sender;\n                var tzOffset = timeZoneSec * 1000;\n\n                if (!this.media()) {\n                    return;\n                }\n\n                that._sliderChangeFired = true;\n                that._isDragging = false;\n\n                if (!this.options.forwardSeek && slider.value() > this._seekBarLastPosition) {\n                    setTimeout(function() {\n                        slider.value(that._seekBarLastPosition);\n                    }, 1);\n                } else if (this._youTubeVideo) {\n                    that._ytmedia.seekTo(that._timeToSec(e.value - tzOffset));\n                } else {\n                    that._media.currentTime = that._timeToSec(e.value - tzOffset);\n                }\n                that.trigger(TIMECHANGE);\n                that._preventPlay = true;\n            },\n\n            _changeVolumeButtonImage: function(volume) {\n                var volumeButton = this._volumeButton;\n                var volumeElement = volumeButton.find(\"span\");\n                var cssClass = volumeElement.attr(\"class\");\n                cssClass = cssClass.substring(0, cssClass.lastIndexOf(\" \"));\n\n                if (volume === 0) {\n                    volumeElement.attr(\"class\", cssClass + \" \" + MUTE);\n                    volumeButton.attr(\"title\", this.options.messages.unmute);\n                    volumeButton.attr(\"aria-label\", this.options.messages.unmute);\n                } else if (volume > 0 && volume < 51) {\n                    volumeElement.attr(\"class\", cssClass + \" \" + LOW_VOLUME);\n                    volumeButton.attr(\"title\", this.options.messages.mute);\n                    volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                } else {\n                    volumeElement.attr(\"class\", cssClass + \" \" + HIGH_VOLUME);\n                    volumeButton.attr(\"title\", this.options.messages.mute);\n                    volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                }\n            },\n\n            _volumeDragging: function(e) {\n                if (!this.media()) {\n                    return;\n                }\n                this.volume(e.value);\n                this._changeVolumeButtonImage(e.value);\n                this.trigger(VOLUMECHANGE);\n            },\n\n            _volumeChange: function(e) {\n                if (!this.media()) {\n                    return;\n                }\n                this.volume(e.value);\n                this._changeVolumeButtonImage(e.value);\n                this.trigger(VOLUMECHANGE);\n            },\n\n            _mediaTimeUpdate: function() {\n                var currentTime = (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : this._media.currentTime;\n                currentTime = currentTime ? currentTime : 0;\n                var timeInMs = this._msToTime(currentTime);\n                this._currentTimeElement.text(kendo.toString(timeInMs, this._timeFormat));\n                if (!this._isDragging) {\n                    this._seekBarLastPosition = (currentTime + timeZoneSec) * 1000;\n                    this._slider.value(this._seekBarLastPosition);\n                }\n\n                return this.isPlaying();\n            },\n\n            _playStateToggle: function(play) {\n                if (typeof play === \"undefined\") {\n                    play = this._playButtonSpan.is(DOT + STATE_PLAY);\n                }\n\n                if (play) {\n                    this._playButtonSpan\n                        .removeClass(STATE_PLAY)\n                        .addClass(STATE_PAUSE);\n                    this._playButton.attr(\"title\", this.options.messages.pause);\n                    this._playButton.attr(\"aria-label\", this.options.messages.pause);\n                }\n                else {\n                    this._playButtonSpan\n                        .removeClass(STATE_PAUSE)\n                        .addClass(STATE_PLAY);\n                    this._playButton.attr(\"title\", this.options.messages.play);\n                    this._playButton.attr(\"aria-label\", this.options.messages.play);\n                }\n            },\n\n            _mediaEnded: function() {\n                this._playStateToggle(false);\n                this._currentTimeElement.text(kendo.toString(this._msToTime(0), this._timeFormat));\n                this._slider.value((0 + timeZoneSec) * 1000);\n                this.trigger(END);\n            },\n\n            _mediaPlay: function() {\n                this.trigger(PLAY);\n            },\n\n            _mediaReady: function() {\n                this.trigger(READY);\n            },\n\n            _mediaDurationChange: function() {\n                var durationTime = this._msToTime((this._youTubeVideo) ? this._ytmedia.getDuration() : this._media.duration);\n\n                this._timeFormat = durationTime.getHours() === 0 ? timeFormats.shortTime : timeFormats.longTime;\n\n                this._durationElement.text(kendo.toString(durationTime, this._timeFormat));\n                this._slider.setOptions({\n                    min: baseTime.getTime(),\n                    max: durationTime.getTime()\n                });\n\n                if (!this._isFirstRun) {\n                    this._resetTime();\n                    this._isFirstRun = true;\n                }\n            },\n\n            _createYoutubePlayer: function() {\n                this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n\n                this.wrapper.prepend(templates.youtubePlayer);\n                this._ytPlayer = this.wrapper.find(DOT + YTPLAYER)[0];\n                $(this._ytPlayer)\n                    .css({\n                        width: this.wrapper.width(),\n                        height: this.wrapper.height()\n                    });\n\n                if (!window.YT || !window.YT.Player) {\n                    if (!window.onYouTubeIframeAPIReadyRegister) {\n                        window.onYouTubeIframeAPIReadyRegister = [];\n                        $.getScript(\"https://www.youtube.com/iframe_api\");\n                        window.onYouTubeIframeAPIReady =\n                            function() {\n                                if (window.onYouTubeIframeAPIReadyRegister) {\n                                    for (var i = 0; i < window.onYouTubeIframeAPIReadyRegister.length; i++) {\n                                        window.onYouTubeIframeAPIReadyRegister[i]._youtubeApiReady();\n                                    }\n                                }\n                                window.onYouTubeIframeAPIReadyRegister.length = 0;\n                                window.onYouTubeIframeAPIReadyRegister = undefined$1;\n                            };\n                    }\n                    window.onYouTubeIframeAPIReadyRegister[window.onYouTubeIframeAPIReadyRegister.length] = this;\n                }\n                else {\n                    this._configurePlayer();\n                }\n            },\n\n            _poll: function(name, callback, interval, context) {\n                var that = this;\n\n                if (that._timers[name] !== null) {\n                    clearTimeout(that._timers[name]);\n                }\n\n                that._timers[name] = setTimeout((function(context) {\n                    return function callLater() {\n                        if (callback.call(context)) {\n                            that._timers[name] = setTimeout(callLater, interval);\n                        }\n                    };\n                })(context), interval);\n\n                return that._timers[name];\n            },\n\n            _youtubeApiReady: function() {\n                this._configurePlayer();\n            },\n\n            _configurePlayer: function() {\n                var vars = {\n                    'autoplay': +this.options.autoPlay,\n                    'wmode': 'transparent',\n                    'controls': 0,\n                    'rel': 0,\n                    'showinfo': 0\n                };\n\n                this._onYouTubePlayerReady = this._onYouTubePlayerReady.bind(this);\n                window.onYouTubePlayerReady = this._onYouTubePlayerReady;\n                this._onPlayerStateChangeHandler = this._onPlayerStateChange.bind(this);\n                window.onPlayerStateChange = this._onPlayerStateChange;\n\n\n                var player = new window.YT.Player(this.wrapper.find(DOT + YTPLAYER)[0], {\n                    height: this.wrapper.height(),\n                    width: this.wrapper.width(),\n                    videoId: this._getMediaId(),\n                    playerVars: vars,\n                    events: {\n                        'onReady': this._onYouTubePlayerReady,\n                        'onStateChange': this._onPlayerStateChangeHandler\n                    }\n                });\n            },\n\n            _onYouTubePlayerReady: function(event) {\n                this._ytmedia = event.target;\n                this._ytmedia.getIframe().style.width = \"100%\";\n                this._ytmedia.getIframe().style.height = \"100%\";\n                this._youTubeVideo = true;\n                this._mediaDurationChangeHandler();\n\n                if (this.options.autoPlay) {\n                    this._playStateToggle(true);\n                    this._ytmedia.loadVideoById(this._getMediaId());\n                }\n                else {\n                    this._ytmedia.cueVideoById(this._getMediaId());\n                }\n\n                if (this.options.mute) {\n                    this.mute(true);\n                }\n\n                this.trigger(READY);\n            },\n\n            _updateTitle: function() {\n                this.titlebar().text(this.media().title || this.media().source);\n            },\n\n            _onPlayerStateChange: function(event) {\n\n                if (event.data === 0) {\n                    this._slider.value(0);\n                    this._paused = false;\n                    this._playStateToggle(true);\n                    this.trigger(END);\n                    if (this.options.autoRepeat) {\n                        this.play();\n                    }\n                }\n                else if (event.data === 1) {\n                    this._mediaDurationChange();\n                    this._ytmedia.setVolume(this.volume());\n                    if (this._sliderChangeFired) {\n                        this._sliderChangeFired = false;\n                    } else {\n                        this._uiDisplay(false);\n                    }\n                    this.trigger(PLAY);\n                    this._playStateToggle(true);\n\n                    this._poll(\"progress\", this._mediaTimeUpdate, 500, this);\n                    this._paused = false;\n                }\n                else if (event.data === 2) {\n                    if (!this._paused) {\n                        this._uiDisplay(true);\n                        this._playStateToggle(false);\n                        this.trigger(PAUSE);\n                        this._paused = true;\n                    }\n                }\n            },\n\n            _getMediaId: function() {\n                var result = this._currentUrl();\n                var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n                var match = result.match(regExp);\n\n                if (match && match[7].length === 11) {\n                    result = match[7];\n                }\n\n                return result;\n            },\n\n            _mouseClick: function() {\n                if (this.isPaused()) {\n                    this.play();\n                } else {\n                    this.pause();\n                }\n            },\n\n            _initializePlayer: function() {\n                if (!this._mouseMoveHandler) {\n                    this._mouseMoveHandler = this._mouseMove.bind(this);\n                    this._mouseInHandler = this._mouseIn.bind(this);\n                    this._mouseOutHandler = this._mouseOut.bind(this);\n\n                    $(this.wrapper)\n                        .on(\"mouseenter\" + ns, this._mouseInHandler)\n                        .on(\"mouseleave\" + ns, this._mouseOutHandler)\n                        .on(\"mousemove\" + ns, this._mouseMoveHandler);\n                }\n\n                if (!this._ytmedia && this._youTubeVideo) {\n                    this._createYoutubePlayer();\n                }\n                else if (!this._media && !this._youTubeVideo) {\n                    this._createHtmlPlayer();\n                }\n            },\n\n            _createHtmlPlayer: function() {\n                if (!this._videoOverlay) {\n                    this._mouseClickHanlder = this._mouseClick.bind(this);\n                    this.wrapper.append(\"<div class='\" + OVERLAY + \"'></div>\");\n                    this._videoOverlay = this.wrapper.find(\".k-mediaplayer-overlay\")\n                        .on(\"click\" + ns, this._mouseClickHanlder);\n                }\n\n                this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n                this._mediaEndedHandler = this._mediaEnded.bind(this);\n                this._mediaCanPlayHandler = this._mediaReady.bind(this);\n                this._mediaPlayHandler = this._mediaPlay.bind(this);\n                this._videoOverlay.after(templates.htmlPlayer);\n                this._media = this.wrapper.find(DOT + MEDIA)[0];\n                $(this._media)\n                    .css({\n                        width: \"100%\",\n                        height: \"100%\"\n                    });\n\n                if (this.options.mute) {\n                    this.mute(true);\n                }\n\n                this._media.ontimeupdate = this._mediaTimeUpdateHandler;\n                this._media.ondurationchange = this._mediaDurationChangeHandler;\n                this._media.oncanplay = this._mediaCanPlayHandler;\n                this._media.onplay = this._mediaPlayHandler;\n                this._media.onended = this._mediaEndedHandler;\n                this._media.loop = this.options.autoRepeat;\n            },\n\n            _mouseIn: function() {\n                this._uiDisplay(true);\n            },\n\n            _mouseOut: function() {\n                this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n            },\n\n            _mouseIdle: function() {\n                this._uiDisplay(false);\n                return false;\n            },\n\n            _mouseMove: function() {\n                if (!(this._titleBar.is(':animated') || this._toolBar.element.is(':animated') || this._slider.wrapper.is(':animated'))) {\n                    this._uiDisplay(true);\n                }\n                this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n            },\n\n            _uiDisplay: function(state) {\n                var animationSpeed = 'slow';\n                var uiElements = this._titleBar\n                    .add(this._toolBar.element.parent());\n\n                if (state) {\n                    uiElements.fadeIn(animationSpeed);\n                }\n                else {\n                    uiElements.fadeOut(animationSpeed);\n                    if (this.options.navigatable) {\n                        this.wrapper.trigger(\"focus\");\n                    }\n                }\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                if (!this.isPaused()) {\n                    this.pause();\n                }\n\n                this.element.off(ns);\n                this.element.find(DOT + OVERLAY).off(ns);\n                this._timers = null;\n                this._mouseMoveHandler = null;\n                this._mouseOutHandler = null;\n                this._mouseInHandler = null;\n                this._mouseClickHanlder = null;\n                this._keyDownHandler = null;\n                this._fullscreenHandler = null;\n\n                this._toolbarClickHandler = null;\n                this._sliderDragChangeHandler = null;\n                this._sliderDraggingHandler = null;\n                this._volumeDraggingHandler = null;\n                this._volumeChangeHandler = null;\n                this._youtubeApiReadyHandler = null;\n                this._onYouTubePlayerReady = null;\n                this._onPlayerStateChangeHandler = null;\n                this._dropDownSelectHandler = null;\n\n                if (this._youTubeVideo) {\n                    this._ytmedia.destroy();\n                }\n                else {\n                    this._media.ontimeupdate = this._mediaTimeUpdateHandler = null;\n                    this._media.ondurationchange = this._mediaDurationChangeHandler = null;\n                    this._media.oncanplay = this._mediaCanPlayHandler = null;\n                    this._media.onplay = this._mediaPlayHandler = null;\n                    this._media.onended = this._mediaEndedHandler = null;\n                    this._media.src = \"\";\n                    this._media.remove();\n                }\n\n                this._mouseMoveTimer = null;\n                clearTimeout(this._mouseMoveTimer);\n\n                kendo.destroy(this.element);\n            },\n\n            seek: function(ms) {\n                if (typeof ms === 'undefined') {\n                    return 1000 * (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : (this._media ? this._media.currentTime : 0);\n                }\n                var seconds = ms / 1000;\n                if (this._youTubeVideo) {\n                    if (seconds + 3 >= this._ytmedia.getDuration() | 0) {\n                        //avoid infinite bad request loop in youtube player.\n                        this._ytmedia.seekTo(this._ytmedia.getDuration() - 3 | 0, true);\n                    } else {\n                        this._ytmedia.seekTo(seconds, true);\n                    }\n                } else {\n                    this._media.currentTime = seconds;\n                }\n\n                return this;\n            },\n\n            play: function() {\n                if (this._youTubeVideo) {\n                    this._ytmedia.playVideo();\n                } else {\n                    if (kendo.support.mobileOS) {\n                        this._uiDisplay(false);\n                    }\n                    this._media.play();\n                }\n                this._paused = false;\n\n                this._playStateToggle(true);\n\n                return this;\n            },\n\n            stop: function() {\n                if (this._youTubeVideo && this._ytmedia) {\n                    this._ytmedia.stopVideo();\n                } else if (this._media && !this._youTubeVideo) {\n                    if (kendo.support.mobileOS) {\n                        this._uiDisplay(true);\n                    }\n                    this._media.pause();\n                    this._media.currentTime = 0;\n                }\n                this._paused = true;\n\n                this._playStateToggle(false);\n                return this;\n            },\n\n            pause: function() {\n                if (this._youTubeVideo) {\n                    this._ytmedia.pauseVideo();\n                } else {\n                    if (kendo.support.mobileOS) {\n                        this._uiDisplay(true);\n                    }\n                    this._media.pause();\n                }\n                this._paused = true;\n                this._playStateToggle(false);\n                this.trigger(PAUSE);\n                return this;\n            },\n\n            toolbar: function() {\n                return this._toolBar;\n            },\n\n            dropdown: function() {\n                return this._dropDown;\n            },\n\n            titlebar: function() {\n                return this._titleBar;\n            },\n\n            fullScreen: function(enterFullScreen) {\n                if (typeof enterFullScreen === 'undefined') {\n                    return this._isInFullScreen || false;\n                }\n                var element = this.element.get(0);\n                if (enterFullScreen) {\n                    // Handles the case when the action is triggered by code and not by user iteraction\n                    this.element.addClass(\"k-mediaplayer-fullscreen\");\n                    if (element.requestFullscreen) {\n                        element.requestFullscreen();\n                    } else if (element.webkitRequestFullscreen) {\n                        element.webkitRequestFullscreen();\n                    } else if (element.mozRequestFullScreen) {\n                        element.mozRequestFullScreen();\n                    } else if (element.msRequestFullscreen) {\n                        element.msRequestFullscreen();\n                    }\n                    this._isInFullScreen = true;\n                } else {\n\n                    if (document.cancelFullscreen) {\n                        document.cancelFullscreen();\n                    } else if (document.webkitCancelFullScreen) {\n                        document.webkitCancelFullScreen();\n                    } else if (document.mozCancelFullScreen) {\n                        document.mozCancelFullScreen();\n                    } else if (document.msCancelFullscreen) {\n                        document.msCancelFullscreen();\n                    } else if (document.exitFullscreen) {\n                        document.exitFullscreen();\n                    } else if (document.msExitFullscreen) {\n                        document.msExitFullscreen();\n                    }\n                    // Handles the case when the action is triggered by code and not by user iteraction\n                    this.element.removeClass(\"k-mediaplayer-fullscreen\");\n                    this._isInFullScreen = false;\n                }\n                this._slider.resize();\n            },\n\n            volume: function(value) {\n                if (typeof value === 'undefined') {\n                    return (typeof this._volume !== 'undefined') ? this._volume : this._volume = this.options.volume;\n                }\n                this._volume = value;\n                this.mute(value <= 0);\n\n                if (this._youTubeVideo) {\n                    this._ytmedia.setVolume(this._volume);\n                } else {\n                    this._media.volume = this._volume / 100;\n                }\n\n                this._volumeSlider.value(value);\n            },\n\n            mute: function(muted) {\n                var currentState = this._youTubeVideo ? (this._ytmedia && this._ytmedia.isMuted()) : (this._media && this._media.muted);\n                if (typeof muted === 'undefined' || muted === currentState) {\n                    return currentState;\n                }\n                if (this._youTubeVideo) {\n                    if (muted) {\n                        this._ytmedia.mute();\n                    }\n                    else {\n                        this._ytmedia.unMute();\n                    }\n                }\n                else {\n                    this._media.muted = muted;\n                }\n\n                if (muted) {\n                    this._volumeSlider.value(0);\n                }\n                else {\n                    this._volumeSlider.value((this._media && this._media.volume * 100) || (this._ytmedia && this._ytmedia.getVolume()));\n                }\n                this.trigger(VOLUMECHANGE);\n                this._changeVolumeButtonImage(this._volumeSlider.value());\n            },\n\n            isEnded: function() {\n                if (this._youTubeVideo) {\n                    return this._ytmedia.getPlayerState() === 0;\n                } else {\n                    return this._media.ended;\n                }\n            },\n\n            media: function(value) {\n                var dropdown = this.dropdown();\n                if (typeof value === 'undefined') {\n                    return (typeof this._mediaData !== 'undefined') ? this._mediaData : this._mediaData = this.options.media;\n                }\n\n                if (isArray(value.source)) {\n                    dropdown.setDataSource(value.source);\n                    dropdown.wrapper.show();\n                }\n                else {\n                    dropdown.wrapper.hide();\n                }\n\n                this._mediaData = value;\n\n                this._updateTitle();\n\n                this._setPlayerUrl();\n            },\n\n            isPaused: function() {\n                return this._paused;\n            },\n\n            isPlaying: function() {\n                return !this.isEnded() && !this._paused;\n            },\n\n            _aria: function() {\n                this.wrapper.attr(\"role\", \"region\");\n                //this.wrapper.attr(\"aria-labelledby\", \"mediaplayerTitleBar\");\n                //add onfocus with aria active descendant\n            },\n\n            _navigatable: function() {\n                this._fullscreenHandler = this._fullscreen.bind(this);\n                $(document)\n                    .on(\"webkitfullscreenchange mozfullscreenchange fullscreenchange\" + ns, this._fullscreenHandler);\n\n                if (this.options.navigatable) {\n                    this.wrapper.attr(\"tabIndex\", 0);\n                    this._keyDownHandler = this._keyDown.bind(this);\n                    this.wrapper\n                        .on(\"keydown\" + ns, this._keyDownHandler);\n                }\n            },\n\n            _fullscreen: function() {\n                var isFullScreen = document.fullScreen ||\n                    document.mozFullScreen ||\n                    document.webkitIsFullScreen;\n\n                this._uiDisplay(true);\n                this._slider.resize();\n\n                if (!isFullScreen) {\n                    this.wrapper.find('span[class*=\"k-i-fullscreen\"]')\n                        .removeClass(FULLSCREEN_EXIT)\n                        .addClass(FULLSCREEN_ENTER);\n                    this.fullScreen(false);\n                }\n            },\n\n            _keyDown: function(e) {\n                e.preventDefault();\n                var fsButton = this.wrapper.find('span[class*=\"k-i-fullscreen\"]');\n                if (e.keyCode === keys.SPACEBAR) {\n                    if (this.isPlaying()) {\n                        this.pause();\n                    }\n                    else {\n                        this.play();\n                    }\n                }\n                else if (e.keyCode === keys.ENTER && !this._isInFullScreen) {\n                    fsButton\n                        .removeClass(FULLSCREEN_ENTER)\n                        .addClass(FULLSCREEN_EXIT);\n                    this.fullScreen(true);\n                }\n                else if (e.keyCode === 77) {\n                    var muted = this.mute();\n                    this.mute(!muted);\n                }\n                else if (e.keyCode === keys.ESC && this._isInFullScreen) {\n                    fsButton\n                        .removeClass(FULLSCREEN_EXIT)\n                        .addClass(FULLSCREEN_ENTER);\n                    this.fullScreen(false);\n                }\n            },\n\n            _error: function() {\n            },\n\n            _progress: function() {\n            }\n\n        });\n\n        ui.plugin(MediaPlayer);\n\n    })(window.kendo.jQuery);\n"]}