{"version":3,"file":"kendo.scheduler.monthview.js","names":["__meta__","id","name","category","description","depends","hidden","$","kendo","window","ui","SchedulerView","NS","extend","getDate","date","MS_PER_DAY","INVERSE_COLOR_CLASS","DAY_TEMPLATE","template","EVENT_TEMPLATE","MORE_BUTTON_TEMPLATE","MonthGroupedView","Class","init","view","this","_view","_verticalRowCountForLevel","level","_rowCountForLevel","_horizontalGroupCountForLevel","_columnCountForLevel","_getCalendarRowsLength","cellsPerRow","cellCount","_createRows","start","startIdx","horizontalGroupCount","verticalGroupIndex","isVerticallyGrouped","_isVerticallyGrouped","html","groupIdx","_createRow","_adjustStartDate","addDays","_getContent","content","startDate","resources","_getTimeSlotByPosition","x","y","groupIndex","groups","daySlotByPosition","_nextSlotStartDate","nextDay","_createRowsLayout","rows","groupHeaderTemplate","_createVerticalColumnsLayout","columns","_createColumnsLayout","_verticalGroupCount","_horizontalGroupCount","_columnOffsetForResource","_positionMobileEvent","event","group","range","rangeCount","end","rangeIndex","endDate","occurrence","clone","Date","head","tail","_createEventElement","_positionEvent","_addDaySlotCollections","groupCount","tableRows","rowMultiplier","rowIndex","collection","addDaySlotCollection","cells","children","cellMultiplier","cellIndex","cell","addDaySlot","_changePeriodGroupIndex","reverse","length","_createResizeHint","left","startSlot","offsetLeft","top","offsetTop","width","innerWidth","height","clientHeight","hint","fn","call","_appendResizeHint","_createMoveHint","endSlot","css","firstChildHeight","options","eventHeight","index","addClass","inverseColor","_appendMoveHint","MonthGroupedByDateView","dateIdx","verticalStart","_groupCount","isLastRow","NUMBER_OF_COLUMNS","cellIdx","_createDateLayout","resource","configuration","data","dataSource","dataIndex","value","getter","dataValueField","obj","text","htmlEncode","dataTextField","color","dataColorField","field","title","className","slice","push","subColumns","startIndex","endIndex","i","currentSlot","_slots","dateRange","daySlotRanges","dateIndex","currentGroupIndex","_daySlotCollections","vertical","selectionGroupIndex","offsetWidth","offsetHeight","slotIdx","slot","isInDateRange","min","max","msValue","scheduler","MonthView","element","that","eventsPerDay","moreButtonHeight","adaptiveSlotHeight","_groupedView","_getGroupedView","isGroupedByDate","_isGroupedByDate","Error","_templates","_editable","_renderLayout","_groups","_updateDirection","selection","ranges","multiple","isSameSlot","isSameCollection","collectionIndex","backward","_changeDate","previous","collections","_getCollections","daySlotCollectionCount","_getNextHorizontalRange","method","horizontalRange","isVertical","_getNextVerticalRange","verticalRange","_changeViewPeriod","newStart","newEnd","pad","_isInRange","events","_continuousSlot","continuousSlot","_changeGroupContinuously","lastGroupIndex","_normalizeHorizontalSelection","_normalizeVerticalSelection","settings","Template","templateSettings","eventTemplate","_eventTmpl","dayTemplate","dateForTitle","format","selectedDateFormat","_firstDayOfMonth","_lastDayOfMonth","shortDateForTitle","selectedShortDateFormat","mobileDateForTitle","selectedMobileDateFormat","nextDate","previousDate","previousDay","_startDate","_endDate","firstDayOfMonth","lastDayOfMonth","calendarInfo","firstDay","firstVisibleDay","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","getDay","setTime","firstVisibleMonthDay","createLayout","_layout","_content","_initSlotHeight","refreshLayout","_isVirtualized","_tryRenderContent","on","e","offset","currentTarget","_slotByPosition","preventDefault","trigger","_footer","editable","_isMobile","_touchEditable","_mouseEditable","uid","closest","attr","create","resourceInfo","_resourceBySlot","eventInfo","isAllDay","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","target","selectionByElement","columnLevel","columnLevels","rowLevel","rowLevels","verticalGroupCount","groupedView","groupedResources","verticalGroupIdx","_createCalendar","_cachedGroupIndex","find","_virtualContent","append","_calcSlotHeight","dateHeader","eventSpacing","firstCell","firstChild","Math","round","rowHeight","isMobile","table","_adjustSlotHeight","_canAdjustSlotHeight","weeks","forEach","week","_events","eventIndex","slots","firstSlot","weekOffsetTop","weekHeight","eventMeta","actualEventCount","slotIndex","meta","adjSlot","adjMeta","indexOf","dirty","sort","first","second","order","slotHeight","firstChildTop","style","more","parentNode","weekStartDates","_slotIndices","calendarRowsLength","rowIdx","_weekStartDates","classes","isToday","getTime","names","array","idx","concat","shiftArray","days","namesShort","map","inner","showDelete","destroy","resizable","resize","ns","eventResources","messages","ariaLabel","_formatEventAriaLabel","angular","elements","dataItem","_isInDateSlot","slotStart","slotEnd","lastSlot","startTime","toUtcTime","endTime","_slotIndex","slotRange","tableEl","contentEl","collidingEvents","createRows","at","container","_isRtl","clientWidth","scrollWidth","appendChild","addEvent","_continuousEvents","eventCount","rightOffset","rowEvents","eventTop","j","eventLength","parseInt","appendTo","_inverseEventColor","_collectionIndex","_startSlotIndex","_startSlot","outerHeight","scrollTop","scrollLeft","ceil","_resizeHint","add","_updateResizeHint","_removeResizeHint","toString","timezone","toLocalDate","last","_updateMoveHint","distance","duration","_removeMoveHint","_moveHint","getElementsByTagName","_addResourceView","MS_PER_HOUR","render","remove","_cachedEvents","Query","dir","toArray","bind","_renderGroups","_renderEvents","slotRanges","rangeStart","rangeEnd","setDate","middle","parentValue","item","itemParentValue","dataParentValueField","itemIdx","_resourceValue","tmp","operator","groupEqFilter","removeClass","off","jQuery"],"sources":["kendo.scheduler.monthview.js"],"mappings":"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","sourcesContent":["import './kendo.scheduler.view.js';\n\nvar __meta__ = {\n    id: \"scheduler.monthview\",\n    name: \"Scheduler Month View\",\n    category: \"web\",\n    description: \"The Scheduler Month View\",\n    depends: [ \"scheduler.view\" ],\n    hidden: true\n};\n\n(function($) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        SchedulerView = ui.SchedulerView,\n        NS = \".kendoMonthView\",\n        extend = $.extend,\n        getDate = kendo.date.getDate,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        NUMBER_OF_ROWS = 6,\n        NUMBER_OF_COLUMNS = 7,\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        DAY_TEMPLATE = kendo.template('<span class=\"k-link k-nav-day\">#:kendo.toString(date, \"dd\")#</span>'),\n        EVENT_WRAPPER_STRING = '<div role=\"button\" data-#=ns#uid=\"#=uid#\"' +\n                'aria-label=\"#: ariaLabel #\" ' +\n                '#if (resources[0]) { #' +\n                    'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' +\n                    'class=\"k-event\"' +\n                '#} else {#' +\n                    'class=\"k-event\"' +\n                '#}#' +\n                '>' +\n                '<span class=\"k-event-actions\">' +\n                    '# if (data.tail || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-left\"></span>' +\n                    '#}#' +\n                    '# if (data.isException()) {#' +\n                        '<span class=\"k-icon k-i-non-recurrence\"></span>' +\n                    '# } else if (data.isRecurring()) {#' +\n                        '<span class=\"k-icon k-i-reload\"></span>' +\n                    '#}#' +\n                '</span>' +\n                '{0}' +\n                '<span class=\"k-event-actions\">' +\n                    '#if (showDelete) {#' +\n                        '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' +\n                    '#}#' +\n                    '# if (data.head || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-right\"></span>' +\n                    '#}#' +\n                '</span>' +\n                '# if (resizable && !data.tail && !data.middle) {#' +\n                '<span class=\"k-resize-handle k-resize-w\"></span>' +\n                '#}#' +\n                '# if (resizable && !data.head && !data.middle) {#' +\n                '<span class=\"k-resize-handle k-resize-e\"></span>' +\n                '#}#' +\n                '</div>',\n        EVENT_TEMPLATE = kendo.template('<div title=\"#=title.replace(/\"/g,\"&\\\\#34;\")#\">' +\n                    '<div class=\"k-event-template\">#:title#</div>' +\n                '</div>');\n\n    var CELL_INNER_SPACING = 2;\n\n    var MORE_BUTTON_TEMPLATE = kendo.template(\n        '<div style=\"width:#=width#px;left:#=left#px;top:#=top#px\" class=\"k-more-events k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\"><span class=\"k-button-icon k-icon k-i-more-horizontal\"></span></div>'\n    );\n\n    var MonthGroupedView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _verticalRowCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalGroupCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _getCalendarRowsLength: function(cellsPerRow, cellCount) {\n            return cellCount / cellsPerRow;\n        },\n\n        _createRows: function(start, startIdx, horizontalGroupCount, verticalGroupIndex) {\n            var view = this._view;\n            var cellsPerRow = NUMBER_OF_COLUMNS;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n            var html = \"\";\n\n            for (var groupIdx = 0; groupIdx < horizontalGroupCount; groupIdx++) {\n                html += view._createRow(start, startIdx, cellsPerRow, isVerticallyGrouped ? verticalGroupIndex : groupIdx);\n            }\n\n            return html;\n        },\n\n        _adjustStartDate: function(start) {\n            return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n        },\n\n        _getContent: function(content, startDate, resources) {\n            return content({ date: startDate, resources: resources });\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.daySlotByPosition(x, y);\n        },\n\n        _nextSlotStartDate: function(startDate) {\n            return kendo.date.nextDay(startDate);\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n\n            return columns;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n        },\n\n        _verticalGroupCount: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalGroupCount: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level) / view._columnOffsetForResource(level);\n        },\n\n        _positionMobileEvent: function(event, group, range, rangeCount, start, end, rangeIndex) {\n            var view = this._view;\n\n            if (rangeCount > 1) {\n                if (rangeIndex === 0) {\n                    end = range.end.endDate();\n                } else if (rangeIndex == rangeCount - 1) {\n                    start = range.start.startDate();\n                } else {\n                    start = range.start.startDate();\n                    end = range.end.endDate();\n                }\n            }\n\n            var occurrence = event.clone({ start: new Date(start), end: new Date(end), head: range.head, tail: range.tail });\n\n            view._positionMobileEvent(range, view._createEventElement(occurrence), group);\n        },\n\n        _positionEvent: function(event, group, range, rangeCount, start, end, rangeIndex) {\n            var view = this._view;\n\n            if (rangeCount > 1) {\n                if (rangeIndex === 0) {\n                    end = range.end.endDate();\n                } else if (rangeIndex == rangeCount - 1) {\n                    start = range.start.startDate();\n                } else {\n                    start = range.start.startDate();\n                    end = range.end.endDate();\n                }\n            }\n\n            var occurrence = event.clone({ start: start, end: end, head: range.head, tail: range.tail });\n\n            view._positionEvent(range, view._createEventElement(occurrence), group);\n        },\n\n        _addDaySlotCollections: function(groupCount, tableRows, startDate) {\n            var view = this._view;\n            var columnCount = NUMBER_OF_COLUMNS;\n            var rowCount = NUMBER_OF_ROWS;\n\n            for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                var cellCount = 0;\n                var rowMultiplier = 0;\n\n                if (view._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                }\n\n                for (var rowIndex = rowMultiplier * rowCount; rowIndex < (rowMultiplier + 1) * rowCount; rowIndex++) {\n                    var group = view.groups[groupIndex];\n                    var collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n\n                    var tableRow = tableRows[rowIndex];\n                    var cells = tableRow.children;\n                    var cellMultiplier = 0;\n\n                    if (!view._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    for (var cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                        var cell = cells[cellIndex];\n\n                        view.addDaySlot(collection, cell, startDate, cellCount);\n                        cellCount++;\n                    }\n                }\n            }\n        },\n\n        _changePeriodGroupIndex: function(reverse) {\n            var view = this._view;\n\n            return reverse ? view.groups.length - 1 : 0;\n        },\n\n        _createResizeHint: function(range) {\n            var view = this._view;\n            var left = range.startSlot().offsetLeft;\n            var top = range.start.offsetTop;\n            var width = range.innerWidth();\n            var height = range.start.clientHeight - 2;\n            var hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n            view._appendResizeHint(hint);\n        },\n\n        _createMoveHint: function(range, event) {\n            var view = this._view;\n            var startSlot = range.startSlot();\n            var endSlot = range.endSlot();\n            var hint = view._createEventElement(event.clone({ head: range.head, tail: range.tail }));\n\n            hint.css({\n                left: startSlot.offsetLeft + 2,\n                top: startSlot.offsetTop + startSlot.firstChildHeight,\n                height: (view.options.eventHeight === \"auto\") ? 25 : view.options.eventHeight,\n                width: range.innerWidth() - (startSlot.index !== endSlot.index ? 3 : 2)\n            });\n\n            hint.addClass(\"k-event-drag-hint\");\n\n            if (event.inverseColor) {\n                hint.addClass(INVERSE_COLOR_CLASS);\n            }\n\n            view._appendMoveHint(hint);\n        }\n    });\n\n    var MonthGroupedByDateView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _verticalRowCountForLevel: function() {\n            return 1;\n        },\n\n        _horizontalGroupCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level + 1) / NUMBER_OF_COLUMNS;\n        },\n\n        _createRows: function(start, startIdx, horizontalGroupCount) {\n            var view = this._view;\n            var cellsPerRow = NUMBER_OF_COLUMNS;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n            var html = \"\";\n            var dateIdx = 0;\n\n            if (isVerticallyGrouped) {\n                var verticalStart = new Date(start);\n                var groupCount = view._groupCount();\n                for (dateIdx; dateIdx < NUMBER_OF_ROWS; dateIdx++) {\n                    html += view._createRow(verticalStart, startIdx, groupCount, dateIdx);\n\n                    verticalStart = kendo.date.addDays(verticalStart, cellsPerRow);\n                }\n                start = kendo.date.nextDay(start);\n            } else {\n                for (dateIdx; dateIdx < cellsPerRow; dateIdx++) {\n                    html += view._createRow(start, startIdx, horizontalGroupCount, dateIdx);\n                    start = kendo.date.nextDay(start);\n                }\n                start = kendo.date.addDays(start, cellsPerRow);\n            }\n\n            return html;\n        },\n\n        _adjustStartDate: function(start, isLastRow) {\n            var view = this._view;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n\n            if (isVerticallyGrouped) {\n                if (isLastRow) {\n                    return kendo.date.addDays(start, NUMBER_OF_COLUMNS * (NUMBER_OF_ROWS - 1) + 1);\n                } else {\n                    return kendo.date.nextDay(start);\n                }\n            }\n\n            return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n        },\n\n        _getContent: function(content, startDate, resources, cellIdx) {\n            if (cellIdx === 0) {\n                return content({ date: startDate, resources: resources });\n            }\n            return \"\";\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.daySlotByPosition(x, y, true);\n        },\n\n        _nextSlotStartDate: function(startDate) {\n            return startDate;\n        },\n\n        _getCalendarRowsLength: function() {\n            var view = this._view;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n\n            return isVerticallyGrouped ? NUMBER_OF_COLUMNS : NUMBER_OF_ROWS;\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n            var view = this._view;\n\n            return view._createDateLayout(columns, null, false);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n            var resource = resources[0];\n            var configuration = [];\n            var data = resource.dataSource.view();\n\n            for (var dataIndex = 0; dataIndex < data.length * NUMBER_OF_ROWS; dataIndex++) {\n                var value = kendo.getter(resource.dataValueField)(data[dataIndex % data.length]);\n                var obj = {\n                    text: groupHeaderTemplate({\n                        text: kendo.htmlEncode(kendo.getter(resource.dataTextField)(data[dataIndex % data.length])),\n                        color: kendo.getter(resource.dataColorField)(data[dataIndex % data.length]),\n                        field: resource.field,\n                        title: resource.title,\n                        name: resource.name,\n                        value: value\n                    }),\n                    className: \"k-slot-cell\",\n                    value: value\n                };\n\n                obj.columns = view._createColumnsLayout(resources.slice(1), null, groupHeaderTemplate, null, null, value);\n\n                configuration.push(obj);\n            }\n\n            return configuration;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate, subColumns) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n        },\n\n        _verticalGroupCount: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level) / NUMBER_OF_ROWS;\n        },\n\n        _horizontalGroupCount: function(level) {\n            var view = this._view;\n            return view._columnCountForLevel(level) / NUMBER_OF_COLUMNS;\n        },\n\n        _positionMobileEvent: function(event, group, range, rangeCount, start, end) {\n            var view = this._view;\n            var startIndex = range.start.index;\n            var endIndex = range.end.index;\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                var currentSlot = range.collection._slots[i];\n                var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n\n                var occurrence = event.clone({\n                    start: i === startIndex ? start : currentSlot.startDate(),\n                    end: i === endIndex ? end : currentSlot.endDate(),\n                    head: i !== endIndex || range.head,\n                    tail: i !== startIndex || range.tail });\n\n                view._positionMobileEvent(dateRange, view._createEventElement(occurrence), group);\n            }\n        },\n\n        _positionEvent: function(event, group, range, rangeCount, start, end) {\n            var view = this._view;\n            var startIndex = range.start.index;\n            var endIndex = range.end.index;\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                var currentSlot = range.collection._slots[i];\n                var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n\n                var occurrence = event.clone({\n                    start: i === startIndex ? start : currentSlot.startDate(),\n                    end: i === endIndex ? end : currentSlot.endDate(),\n                    head: i !== endIndex || range.head,\n                    tail: i !== startIndex || range.tail });\n\n                view._positionEvent(dateRange, view._createEventElement(occurrence), group);\n            }\n        },\n\n        _addDaySlotCollections: function(groupCount, tableRows, startDate) {\n            var view = this._view;\n            var columnCount = NUMBER_OF_COLUMNS;\n            var rowCount = NUMBER_OF_ROWS;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n\n            for (var dateIndex = 0; dateIndex < columnCount; dateIndex++) {\n                for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n                    var groupIndex = 0;\n                    var currentTableIndex = isVerticallyGrouped ? dateIndex : rowIndex;\n                    var tableRow = tableRows[currentTableIndex];\n                    var cells = tableRow.children;\n                    var cellMultiplier = 0;\n\n                    if (!view._isVerticallyGrouped()) {\n                        cellMultiplier = dateIndex;\n                    }\n\n                    for (var cellIndex = cellMultiplier * groupCount; cellIndex < (cellMultiplier + 1) * groupCount; cellIndex++) {\n                        var cellCount = (rowIndex * columnCount) + dateIndex;\n                        var currentCellIndex = isVerticallyGrouped ? cellIndex + (rowIndex * groupCount) : cellIndex;\n                        var cell = cells[currentCellIndex];\n                        var currentGroupIndex = isVerticallyGrouped ? cellIndex : groupIndex;\n                        var group = view.groups[currentGroupIndex];\n                        var collection;\n                        if (dateIndex === 0) {\n                            collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n                        } else {\n                            collection = group._daySlotCollections[rowIndex];\n                        }\n\n                        view.addDaySlot(collection, cell, startDate, cellCount);\n                        groupIndex++;\n                    }\n                }\n            }\n        },\n\n        _changePeriodGroupIndex: function(reverse, vertical, selectionGroupIndex) {\n            var view = this._view;\n\n            if (vertical && view._isVerticallyGrouped()) {\n                return reverse ? view.groups.length - 1 : 0;\n            }\n\n            return selectionGroupIndex;\n        },\n\n        _createResizeHint: function(range) {\n            var view = this._view;\n            var left, top, width, height, hint;\n\n            if (view._isVerticallyGrouped()) {\n            left = range.startSlot().offsetLeft;\n            top = range.start.offsetTop;\n            width = range.startSlot().offsetWidth;\n            height = range.endSlot().offsetTop + range.startSlot().offsetHeight - range.startSlot().offsetTop - 2;\n            hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n            view._appendResizeHint(hint);\n            } else {\n                for (var slotIdx = range.startSlot().index; slotIdx <= range.endSlot().index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    left = slot.offsetLeft;\n                    top = slot.offsetTop;\n                    width = slot.offsetWidth;\n                    height = slot.offsetHeight - 2;\n                    hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n                    view._appendResizeHint(hint);\n                }\n            }\n        },\n\n        _createMoveHint: function(range, event) {\n            var view = this._view;\n            var startSlot = range.startSlot();\n            var endSlot = range.endSlot();\n\n            for (var slotIdx = startSlot.index; slotIdx <= endSlot.index; slotIdx++) {\n                var slot = range.collection._slots[slotIdx];\n                var hint = view._createEventElement(event.clone({ head: range.head, tail: range.tail }));\n\n                hint.css({\n                    left: slot.offsetLeft,\n                    top: slot.offsetTop + slot.firstChildHeight,\n                    height: (view.options.eventHeight === \"auto\") ? 25 : view.options.eventHeight,\n                    width: slot.offsetWidth - 2\n                });\n\n                hint.addClass(\"k-event-drag-hint\");\n\n                if (event.inverseColor) {\n                    hint.addClass(INVERSE_COLOR_CLASS);\n                }\n\n                view._appendMoveHint(hint);\n            }\n        }\n    });\n\n    kendo.ui.scheduler.MonthGroupedView = MonthGroupedView;\n    kendo.ui.scheduler.MonthGroupedByDateView = MonthGroupedByDateView;\n\n    ui.MonthView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            // Do not allow less than one event\n            if (options.eventsPerDay === 0) {\n                options.eventsPerDay = 1;\n            }\n\n            // Do not allow 0 height events\n            if (options.eventHeight === 0) {\n                options.eventHeight = 1;\n            }\n\n            // Do not allow 0 height more-button\n            if (options.moreButtonHeight === 0) {\n                options.moreButtonHeight = 1;\n            }\n\n            // Do not allow string values other than auto\n            if (typeof options.eventHeight === \"string\" && options.eventHeight !== \"auto\") {\n                options.eventHeight = 25;\n            }\n\n            // Set adaptiveSlotHeight to true if eventHeight is auto\n            if (options.eventHeight === \"auto\") {\n                options.adaptiveSlotHeight = true;\n            }\n\n            SchedulerView.fn.init.call(that, element, options);\n            that._groupedView = that._getGroupedView();\n\n            // Exception handling for invalid combinations\n            var isGroupedByDate = this._isGroupedByDate();\n            var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n            var eventHeight = this.options.eventHeight;\n\n            if (isGroupedByDate === true && adaptiveSlotHeight === true) {\n                throw new Error(\"Incompatible options: adaptive slot height and date grouping!\");\n            }\n\n            if (isGroupedByDate === true && eventHeight === \"auto\") {\n                throw new Error(\"Incompatible options: auto event height and date grouping!\");\n            }\n\n            that.title = that.options.title;\n\n            that._templates();\n\n            that._editable();\n\n            that._renderLayout(that.options.date);\n\n            that._groups();\n        },\n\n        name: \"month\",\n\n        _getGroupedView: function() {\n            if (this._isGroupedByDate()) {\n                return new kendo.ui.scheduler.MonthGroupedByDateView(this);\n            } else {\n                return new kendo.ui.scheduler.MonthGroupedView(this);\n            }\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n            if (multiple) {\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var isSameSlot = startSlot.index === endSlot.index;\n                var isSameCollection = startSlot.collectionIndex === endSlot.collectionIndex;\n                var updateDirection;\n\n                if (vertical) {\n                    updateDirection = (isSameSlot && isSameCollection) || isSameCollection;\n                } else {\n                    updateDirection = isSameSlot && isSameCollection;\n                }\n\n                if (updateDirection) {\n                    selection.backward = reverse;\n                }\n            }\n        },\n\n        _changeDate: function(selection, slot, previous) {\n            var group = this.groups[selection.groupIndex];\n            var collections, index;\n\n            if (previous) {\n                collections = group._getCollections(group.daySlotCollectionCount());\n                index = slot.collectionIndex - 1;\n\n                if (index >= 0) {\n                    return collections[index]._slots[collections[index]._slots.length - 1];\n                }\n            } else {\n                collections = group._getCollections(group.daySlotCollectionCount());\n                index = slot.collectionIndex + 1;\n                var slotIndex = 0;\n\n                if (collections[index] && collections[index]._slots[slotIndex]) {\n                    return collections[index]._slots[slotIndex];\n                }\n            }\n        },\n\n        _getNextHorizontalRange: function(group, method, horizontalRange) {\n            var isVertical = this._isVerticallyGrouped();\n\n            horizontalRange.startSlot = group[method](horizontalRange.startSlot, isVertical);\n            horizontalRange.endSlot = group[method](horizontalRange.endSlot, isVertical);\n\n            return horizontalRange;\n        },\n\n        _getNextVerticalRange: function(group, method, verticalRange, multiple) {\n            var isVertical = this._isVerticallyGrouped() && this._isGroupedByDate();\n\n            verticalRange.startSlot = group[method](verticalRange.startSlot, multiple, isVertical);\n            verticalRange.endSlot = group[method](verticalRange.endSlot, multiple, isVertical);\n\n            return verticalRange;\n        },\n\n        _changeViewPeriod: function(selection, reverse, vertical) {\n            var pad = vertical ? 7 : 1;\n            var newStart, newEnd;\n\n            if (reverse) {\n                pad *= -1;\n            }\n\n            newStart = kendo.date.addDays(selection.start, pad);\n            newEnd = kendo.date.addDays(selection.end, pad);\n\n            if (this._isInRange(newStart, newEnd)) {\n                return false;\n            }\n\n            selection.start = newStart;\n            selection.end = newEnd;\n\n            if (!vertical || (vertical && this._isVerticallyGrouped())) {\n                selection.groupIndex = this._groupedView._changePeriodGroupIndex(reverse, vertical, selection.groupIndex);\n            }\n\n            selection.events = [];\n\n            return true;\n        },\n\n        _continuousSlot: function(selection, ranges, reverse) {\n            var index = selection.backward ? 0 : ranges.length - 1;\n            var group = this.groups[selection.groupIndex];\n\n            return group.continuousSlot(ranges[index].start, reverse);\n        },\n\n        _changeGroupContinuously: function(selection, continuousSlot, multiple, reverse) {\n            if (!multiple) {\n                var groupIndex = selection.groupIndex;\n                var lastGroupIndex = this.groups.length - 1;\n                var vertical = this._isVerticallyGrouped();\n                var group = this.groups[groupIndex];\n\n                if (!continuousSlot && vertical) {\n\n                    continuousSlot = group[reverse ? \"lastSlot\" : \"firstSlot\"]();\n\n                    groupIndex += (reverse ? -1 : 1);\n\n                } else if (continuousSlot && !vertical) {\n                    groupIndex = reverse ? lastGroupIndex : 0;\n                }\n\n                if (groupIndex < 0 || groupIndex > lastGroupIndex) {\n                    groupIndex = reverse ? lastGroupIndex : 0;\n                    continuousSlot = null;\n                }\n\n                selection.groupIndex = groupIndex;\n            }\n\n            return continuousSlot;\n        },\n\n        _normalizeHorizontalSelection: function(selection, ranges, reverse) {\n            var slot;\n\n            if (reverse) {\n                slot = ranges[0].start;\n            } else {\n                slot = ranges[ranges.length - 1].end;\n            }\n\n            return slot;\n        },\n\n        _normalizeVerticalSelection: function(selection, ranges) {\n            var slot;\n\n            if (selection.backward) {\n                slot = ranges[0].start;\n            } else {\n                slot = ranges[ranges.length - 1].end;\n            }\n\n            return slot;\n        },\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n            this.dayTemplate = kendo.template(options.dayTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        dateForTitle: function() {\n            return kendo.format(this.options.selectedDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n        },\n\n        shortDateForTitle: function() {\n            return kendo.format(this.options.selectedShortDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n        },\n\n        mobileDateForTitle: function() {\n            return kendo.format(this.options.selectedMobileDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this._lastDayOfMonth);\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this._firstDayOfMonth);\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        _renderLayout: function(date) {\n            var that = this;\n\n            this._firstDayOfMonth = kendo.date.firstDayOfMonth(date);\n\n            this._lastDayOfMonth = kendo.date.lastDayOfMonth(date);\n\n            this._startDate = firstVisibleMonthDay(date, this.calendarInfo());\n\n            this.createLayout(this._layout());\n\n            this._content();\n\n            this._initSlotHeight();\n\n            this.refreshLayout();\n\n            if (this._isVirtualized()) {\n                this._tryRenderContent();\n            }\n\n            this.content.on(\"click\" + NS, \".k-nav-day,.k-more-events\", function(e) {\n                var offset = $(e.currentTarget).offset();\n                var slot = that._slotByPosition(offset.left, offset.top);\n\n                e.preventDefault();\n                that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n            });\n\n            this._footer();\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-scheduler-monthview .k-event a:has(.k-i-close)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-monthview .k-scheduler-content td\", function(e) {\n                    var offset = $(e.currentTarget).offset();\n                    var slot = that._slotByPosition(offset.left, offset.top);\n\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({ isAllDay: true, start: slot.startDate(), end: slot.startDate() }, resourceInfo ) });\n                    }\n\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-monthview .k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-monthview .k-scheduler-content td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var offset = $(e.target).offset();\n                        var slot = that._slotByPosition(offset.left, offset.top);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ isAllDay: true, start: slot.startDate(), end: slot.startDate() }, resourceInfo ) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        selectionByElement: function(cell) {\n            var offset = $(cell).offset();\n            return this._slotByPosition(offset.left, offset.top);\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level) {\n            var rowLevel = this.rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        _content: function() {\n            var html = '<tbody>';\n            var verticalGroupCount = 1;\n            var groupedView = this._groupedView;\n            var resources = this.groupedResources;\n\n            if (resources.length) {\n                if (this._isVerticallyGrouped()) {\n                    verticalGroupCount = groupedView._verticalRowCountForLevel(resources.length - 1);\n                }\n            }\n\n            for (var verticalGroupIdx = 0; verticalGroupIdx < verticalGroupCount; verticalGroupIdx++) {\n                html += this._createCalendar(verticalGroupIdx);\n                this._cachedGroupIndex = verticalGroupIdx;\n            }\n\n            html += \"</tbody>\";\n\n            this.content.find(\"table\").html(html);\n        },\n\n        _virtualContent: function() {\n            var that = this;\n            var html = '';\n\n            html += this._createCalendar(++this._cachedGroupIndex);\n\n            that.content.find(\"table tbody\").append(html);\n\n            that._initSlotHeight();\n        },\n\n        _calcSlotHeight: function(eventsPerDay) {\n            var options = this.options;\n            var eventHeight = options.eventHeight;\n            var eventSpacing = options.eventSpacing;\n            var moreButtonHeight = options.moreButtonHeight;\n            var firstCell = this.content.find(\"table tr td\")[0];\n            var dateHeader;\n\n            if (eventHeight === \"auto\" || !firstCell) {\n                return undefined;\n            }\n\n            dateHeader = firstCell.firstChild;\n\n            return Math.round(\n                // border of cell\n                ( firstCell.offsetHeight - firstCell.clientHeight ) +\n\n                // top padding\n                dateHeader.offsetTop +\n\n                // height of date header\n                dateHeader.offsetHeight +\n\n                // cell inner spacing\n                CELL_INNER_SPACING +\n\n                // all visible events and spacing\n                ( eventsPerDay * eventHeight ) + ( ( eventsPerDay - 1 ) * eventSpacing ) +\n\n                // leading space, more button\n                ( CELL_INNER_SPACING + moreButtonHeight ) +\n\n                // traling spacing\n                CELL_INNER_SPACING\n            );\n        },\n\n        _initSlotHeight: function() {\n            var options = this.options;\n            var eventsPerDay = options.eventsPerDay;\n            var eventHeight = options.eventHeight;\n            var isMobile = this._isMobile();\n            var table = this.content.find(\"table\");\n            var rowHeight;\n\n            if (isMobile) {\n                return;\n            }\n\n            if (typeof eventHeight === \"number\") {\n                rowHeight = this._calcSlotHeight(eventsPerDay);\n\n                table.find(\"tr\").height( rowHeight );\n\n                table.addClass(\"k-scheduler-table-auto\");\n            }\n        },\n\n        _adjustSlotHeight: function(group) {\n            var options = this.options;\n            var eventHeight = options.eventHeight;\n            var eventSpacing = options.eventSpacing;\n            var moreButtonHeight = options.moreButtonHeight;\n\n            if (this._canAdjustSlotHeight !== true) {\n                return;\n            }\n\n            var weeks = group._daySlotCollections;\n\n            this.content.find(\"table\").addClass(\"k-scheduler-table-auto\");\n\n            weeks.forEach(function(week) {\n                var events = week._events;\n                var eventIndex = 0;\n                var slots = week._slots;\n                var firstSlot = slots[0];\n                var weekOffsetTop = firstSlot.element.offsetTop;\n                var weekHeight = 0;\n\n                // Ensure event meta exists in each slot\n                slots.forEach(function(slot) {\n                    if (!slot.eventMeta) {\n                        slot.eventMeta = [];\n                        slot.actualEventCount = 0;\n                    } else {\n                        slot.actualEventCount = slot.eventMeta.length;\n                    }\n                });\n\n                // Ensure spanning event meta is present in all related slots\n                slots.forEach(function(slot, slotIndex) {\n\n                    slot.eventMeta.forEach(function(meta, eventIndex) {\n\n                        // Skip events not starting in this slot\n                        if (meta.startIndex !== slotIndex) {\n                            return;\n                        }\n\n                        // Skip non-spanning events\n                        if (meta.startIndex === meta.endIndex) {\n                            return;\n                        }\n\n                        // Copy spanning event meta in all related slots\n                        slots.slice(slotIndex, meta.endIndex + 1).forEach(function(adjSlot) {\n\n                            var adjMeta = adjSlot.eventMeta;\n\n                            if (adjMeta.indexOf(meta) > -1) {\n                                return;\n                            }\n\n                            // adjMeta.push(meta);\n                            adjMeta[adjMeta.length] = slot.eventMeta[eventIndex];\n                            adjSlot.actualEventCount = adjMeta.length;\n                            adjSlot.dirty = true;\n                        });\n\n                    });\n\n                    // Set correct order\n                    if (slot.dirty === true) {\n                        slot.eventMeta.sort(function(first, second) {\n                            return first.order - second.order;\n                        });\n                        delete slot.dirty;\n                    }\n\n                });\n\n                if (eventHeight === \"auto\") {\n                    slots.forEach(function(slot, slotIndex) {\n                        var slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n\n                        slot.eventMeta.forEach(function(meta, eventIndex) {\n                            meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                            slotHeight = (meta.top - weekOffsetTop) + eventSpacing + meta.height;\n                        });\n                    });\n                }\n\n                // Position events\n                slots.forEach(function(slot, slotIndex) {\n                    var slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n\n                    slot.eventMeta.forEach(function(meta) {\n                        meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                        slotHeight = (meta.top - weekOffsetTop) + eventSpacing + meta.height;\n\n                        if (meta.startIndex === slotIndex) {\n                            events[eventIndex].element[0].style.top = meta.top + \"px\";\n                            eventIndex++;\n                        }\n                    });\n\n                    if (slot.eventMeta.length > 0) {\n                        slotHeight -= eventSpacing;\n                        slotHeight += CELL_INNER_SPACING;\n                    } else {\n                        slotHeight += (eventHeight === \"auto\" ? 25 : eventHeight);\n                    }\n\n                    if (slot.more) {\n                        slot.more[0].style.top = weekOffsetTop + slotHeight + \"px\";\n                        slotHeight += CELL_INNER_SPACING + moreButtonHeight;\n                    }\n\n                    weekHeight = Math.max(weekHeight, slotHeight + 1);\n\n                });\n\n                // Update slot size and meta\n                firstSlot.element.parentNode.style.height = weekHeight + \"px\";\n                slots.forEach(function(slot) {\n                    slot.offsetTop = weekOffsetTop;\n                    slot.offsetHeight = weekHeight;\n                    slot.clientHeight = weekHeight - 1;\n                });\n\n            });\n        },\n\n        _createCalendar: function(verticalGroupIndex) {\n            var start = this.startDate();\n            var cellCount = NUMBER_OF_COLUMNS * NUMBER_OF_ROWS;\n            var cellsPerRow = NUMBER_OF_COLUMNS;\n            var weekStartDates = [start];\n            var html = '';\n            var horizontalGroupCount = 1;\n            var isVerticallyGrouped = this._isVerticallyGrouped();\n            var groupedView = this._groupedView;\n\n            var resources = this.groupedResources;\n\n            if (resources.length) {\n                if (!isVerticallyGrouped) {\n                    horizontalGroupCount = groupedView._horizontalGroupCountForLevel(resources.length - 1);\n                }\n            }\n\n            this._slotIndices = {};\n\n            var calendarRowsLength = groupedView._getCalendarRowsLength(cellsPerRow, cellCount);\n\n            for (var rowIdx = 0; rowIdx < calendarRowsLength; rowIdx++) {\n                html += \"<tr>\";\n\n                weekStartDates.push(start);\n\n                var startIdx = rowIdx * cellsPerRow;\n\n                html += groupedView._createRows(start, startIdx, horizontalGroupCount, verticalGroupIndex);\n                start = groupedView._adjustStartDate(start, rowIdx === calendarRowsLength - 1);\n\n                html += \"</tr>\";\n            }\n\n            this._weekStartDates = weekStartDates;\n            this._endDate = kendo.date.previousDay(start);\n\n            return html;\n        },\n\n        _createRow: function(startDate, startIdx, cellsPerRow, groupIndex) {\n            var that = this;\n            var min = that._firstDayOfMonth;\n            var max = that._lastDayOfMonth;\n            var content = that.dayTemplate;\n            var classes = \"\";\n            var html = \"\";\n            var groupedView = this._groupedView;\n\n            var resources = function() {\n                return that._resourceBySlot({ groupIndex: groupIndex });\n            };\n\n            for (var cellIdx = 0; cellIdx < cellsPerRow; cellIdx++) {\n                classes = \"\";\n\n                if (kendo.date.isToday(startDate)) {\n                    classes += \"k-today\";\n                }\n\n                if (!kendo.date.isInDateRange(startDate, min, max)) {\n                    classes += \" k-other-month\";\n                }\n\n                html += \"<td \";\n\n                if (classes !== \"\") {\n                    html += 'class=\"' + classes + '\"';\n                }\n\n                html += \">\";\n                html += groupedView._getContent(content, startDate, resources, cellIdx);\n                html += \"</td>\";\n\n                that._slotIndices[getDate(startDate).getTime()] = startIdx + cellIdx;\n\n                startDate = groupedView._nextSlotStartDate(startDate);\n            }\n\n            return html;\n        },\n\n        _layout: function() {\n            var calendarInfo = this.calendarInfo();\n\n            var weekDayNames = this._isMobile() ? calendarInfo.days.namesShort.map(function(name) {\n                return name[0];\n            }) : calendarInfo.days.names;\n\n            var names = shiftArray(weekDayNames, calendarInfo.firstDay);\n            var columns = $.map(names, function(value) { return { text: value }; });\n            var resources = this.groupedResources;\n            var rows;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._isVerticallyGrouped()) {\n                    var inner = []; //add hidden cells in order to sync the content rows\n                    for (var idx = 0; idx < 6; idx++) {\n                        inner.push({ text: \"<div>&nbsp;</div>\", className: \"k-hidden k-slot-cell\" });\n                    }\n                    rows = groupedView._createRowsLayout(resources, inner, this.groupHeaderTemplate, columns);\n                    columns = groupedView._createVerticalColumnsLayout(resources, inner, this.groupHeaderTemplate, columns);\n\n                } else {\n                    columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        _createEventElement: function(event) {\n            var options = this.options;\n            var editable = options.editable;\n\n            var isMobile = this._isMobile();\n\n            event.showDelete = editable && editable.destroy !== false && !isMobile;\n            event.resizable = editable && editable.resize !== false && !isMobile;\n            event.ns = kendo.ns;\n            event.resources = this.eventResources(event);\n            event.inverseColor = false;\n            event.messages = options.messages || { destroy: \"Delete\" };\n\n            var element = $(this.eventTemplate($.extend({}, event, {\n                ariaLabel: this._formatEventAriaLabel(event.title, event.start, event.end, event.isAllDay)\n            })));\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: event } ]\n                };\n            });\n\n            return element;\n        },\n\n        _isInDateSlot: function(event) {\n            if (!this.groups || this.groups.length === 0) {\n                return false;\n            }\n\n            var groups = this.groups[0];\n            var slotStart = groups.firstSlot().start;\n            var slotEnd = groups.lastSlot().end - 1;\n\n            var startTime = kendo.date.toUtcTime(event.start);\n            var endTime = kendo.date.toUtcTime(event.end);\n\n            return (isInDateRange(startTime, slotStart, slotEnd) ||\n                isInDateRange(endTime, slotStart, slotEnd) ||\n                isInDateRange(slotStart, startTime, endTime) ||\n                isInDateRange(slotEnd, startTime, endTime)) &&\n                (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n        },\n\n        _slotIndex: function(date) {\n            return this._slotIndices[getDate(date).getTime()];\n        },\n\n        _positionMobileEvent: function(slotRange, element, group) {\n            var startSlot = slotRange.start,\n                tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                contentEl = this.table.find(\".k-scheduler-content\")[0],\n                offsetLeft;\n\n            if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n               startSlot = slotRange.end;\n            }\n\n            var startIndex = slotRange.start.index;\n            var endIndex = startIndex;\n\n            var eventCount = 3;\n            var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n            events.push({ element: element, start: startIndex, end: endIndex });\n\n            var rows = SchedulerView.createRows(events);\n\n            var slot = slotRange.collection.at(startIndex);\n\n            var container = slot.container;\n\n            if (!container) {\n                if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                    // RTL mobile rendering with horizontal scroll\n                    offsetLeft = startSlot.offsetLeft - (tableEl.clientWidth - contentEl.clientWidth) + \"px\";\n                } else {\n                    offsetLeft = startSlot.offsetLeft + \"px\";\n                }\n\n                container = $(kendo.format('<div class=\"k-events-container\" style=\"top:{0};left:{1};width:{2}\"></div>',\n                    startSlot.offsetTop + startSlot.firstChildTop + startSlot.firstChildHeight + \"px\",\n                    offsetLeft,\n                    startSlot.offsetWidth + \"px\"\n                ));\n\n                slot.container = container;\n\n                this.content[0].appendChild(container[0]);\n            }\n\n            if (rows.length <= eventCount) {\n                slotRange.addEvent({ element: element, start: startIndex, end: endIndex, groupIndex: startSlot.groupIndex });\n\n                group._continuousEvents.push({\n                    element: element,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: slotRange.start,\n                    end: slotRange.end\n                });\n\n                container[0].appendChild(element[0]);\n            }\n        },\n\n        _positionEvent: function(slotRange, element, group) {\n            var eventHeight = this.options.eventHeight;\n            var eventSpacing = this.options.eventSpacing;\n            var startSlot = slotRange.start;\n\n            if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n                startSlot = slotRange.end;\n            }\n\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n            var eventCount = startSlot.eventCount;\n            var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n            var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n            events.push({ element: element, start: startIndex, end: endIndex });\n\n            var rows = SchedulerView.createRows(events);\n\n            for (var idx = 0, length = Math.min(rows.length, eventCount); idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n                var eventTop = (eventHeight === \"auto\")\n                    ? \"\"\n                    : (\n                        startSlot.offsetTop +\n                        startSlot.firstChildTop +\n                        startSlot.firstChildHeight +\n                        CELL_INNER_SPACING +\n                        idx * (eventHeight + eventSpacing) +\n                        \"px\"\n                    );\n\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    rowEvents[j].element[0].style.top = eventTop;\n                    rowEvents[j].element.attr(kendo.attr(\"order\"), idx);\n                }\n            }\n\n            if (rows.length > eventCount) {\n                for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                    var collection = slotRange.collection;\n\n                    var slot = collection.at(slotIndex);\n\n                    if (slot.more) {\n                        continue;\n                    }\n\n                    slot.more = $(MORE_BUTTON_TEMPLATE({\n                        ns: kendo.ns,\n                        start: slotIndex,\n                        end: slotIndex,\n                        width: slot.clientWidth - 2,\n                        left: slot.offsetLeft + 2,\n                        top: (eventHeight === \"auto\")\n                            ? \"\"\n                            : (\n                                slot.offsetTop +\n                                slot.firstChildTop +\n                                slot.firstChildHeight +\n                                CELL_INNER_SPACING +\n                                (eventCount * eventHeight) +\n                                ( (eventCount - 1) * eventSpacing) +\n                                CELL_INNER_SPACING\n                            )\n                    }));\n\n                    this.content[0].appendChild(slot.more[0]);\n                }\n            } else {\n                slotRange.addEvent({ element: element, start: startIndex, end: endIndex, groupIndex: startSlot.groupIndex });\n\n                element[0].style.width = slotRange.innerWidth() - rightOffset + \"px\";\n                element[0].style.left = startSlot.offsetLeft + 2 + \"px\";\n                element[0].style.height = (eventHeight === \"auto\") ? \"\" : eventHeight + \"px\";\n\n                group._continuousEvents.push({\n                    element: element,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: slotRange.start,\n                    end: slotRange.end,\n                    order: parseInt(element.attr(kendo.attr(\"order\")), 10)\n                });\n\n                element.appendTo(this.content);\n\n                this._inverseEventColor(element);\n\n                // Add event meta to slot\n                var _collectionIndex = slotRange.start.collectionIndex;\n                var _startSlotIndex = slotRange.start.index;\n                var _startSlot = group._daySlotCollections[_collectionIndex]._slots[_startSlotIndex];\n\n                if (!_startSlot.eventMeta) {\n                    _startSlot.eventMeta = [];\n                }\n\n                _startSlot.eventMeta.push({\n                    height: (eventHeight === \"auto\") ? element.outerHeight() : eventHeight,\n                    top: 0,\n                    startIndex: _startSlotIndex,\n                    endIndex: slotRange.end.index,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    order: parseInt(element.attr(kendo.attr(\"order\")), 10)\n                });\n            }\n        },\n\n        _slotByPosition: function(x, y) {\n            var offset = this.content.offset();\n\n            x -= offset.left;\n            y -= offset.top;\n            y += this.content[0].scrollTop;\n            x += this.content[0].scrollLeft;\n\n            x = Math.ceil(x);\n            y = Math.ceil(y);\n\n            for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                var slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n\n                if (slot) {\n                    return slot;\n                }\n            }\n\n            return null;\n        },\n\n        _appendResizeHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._resizeHint = this._resizeHint.add(hint);\n        },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            this._removeResizeHint();\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(startTime, endTime, true, event.isAllDay);\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                this._groupedView._createResizeHint(ranges[rangeIndex]);\n            }\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), \"M/dd\"));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), \"M/dd\"));\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var start = kendo.date.toUtcTime(event.start) + distance;\n\n            var end = start + event.duration();\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(start, end, true, event.isAllDay);\n\n            this._removeMoveHint(event.uid);\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                this._groupedView._createMoveHint(ranges[rangeIndex], event);\n            }\n        },\n\n        _appendMoveHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._moveHint = this._moveHint.add(hint);\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var tableRows = this.content[0].getElementsByTagName(\"tr\");\n            var startDate = this.startDate();\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                this._addResourceView(idx);\n            }\n\n            this._groupedView._addDaySlotCollections(groupCount, tableRows, startDate);\n        },\n\n\n        addDaySlot: function(collection, cell, startDate, cellCount) {\n            var start = kendo.date.addDays(startDate, cellCount);\n            var end = kendo.date.MS_PER_DAY;\n            var eventsPerDay = this.options.eventsPerDay;\n\n            if (startDate.getHours() !== start.getHours()) {\n                end += (startDate.getHours() - start.getHours()) * kendo.date.MS_PER_HOUR;\n            }\n\n            start = kendo.date.toUtcTime(start);\n            end += start;\n\n            collection.addDaySlot(cell, start, end, eventsPerDay);\n        },\n\n        render: function(events) {\n            this.content.children(\".k-event,.k-more-events,.k-events-container\").remove();\n\n            this._cachedEvents = events;\n\n            this._groups();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray()\n                .filter(function(event) {\n                    return this._isInDateSlot(event);\n                }.bind(this));\n\n            var resources = this.groupedResources;\n            var isMobile = this._isMobile();\n            var isGroupedByDate = this._isGroupedByDate();\n            var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n\n            this._canAdjustSlotHeight = isMobile !== true && isGroupedByDate !== true && resources.length === 0 && adaptiveSlotHeight === true;\n\n            if (resources.length) {\n                this._renderGroups(events, resources, 0, 1);\n            } else {\n                this._renderEvents(events, 0);\n            }\n\n            this.refreshLayout();\n            this.trigger(\"activate\");\n        },\n\n        _renderEvents: function(events, groupIndex) {\n            var group = this.groups[groupIndex];\n            var view = this._groupedView._view;\n            var isMobile = view._isMobile();\n\n            if (!group) {\n                return;\n            }\n\n            if (!group._continuousEvents) {\n                group._continuousEvents = [];\n            }\n\n            if (isMobile) {\n\n                events.forEach(function(event) {\n                    var ranges = group.slotRanges(event, true);\n                    var range = ranges[0];\n                    var start = range.start.start;\n                    var end = range.end.end;\n                    var rangeStart = new Date(range.start.start);\n                    var rangeEnd = ranges[ranges.length - 1].end.end;\n                    var newStart = new Date(rangeStart);\n                    var newEnd = new Date(end);\n\n                    while (rangeStart.getTime() <= rangeEnd &&\n                        event.end >= kendo.timezone.toLocalDate(rangeStart) &&\n                        event.start <= kendo.timezone.toLocalDate(rangeEnd)) {\n                        var dateRange = group.daySlotRanges(newStart.getTime(), newEnd.getTime(), true)[0];\n                        newEnd.setDate(newEnd.getDate() + 1);\n                        newStart.setDate(newStart.getDate() + 1);\n\n                        if (dateRange) {\n                            dateRange.head = null;\n                            dateRange.middle = null;\n                            dateRange.tail = null;\n                            this._groupedView._positionMobileEvent(event, group, dateRange, 1, start, end, 0);\n                        }\n\n                        rangeStart = kendo.date.addDays(rangeStart, 1);\n                    }\n\n                }.bind(this));\n\n            } else {\n\n                events.forEach(function(event) {\n                    var range;\n                    var start = event.start;\n                    var end = event.end;\n                    var ranges = group.slotRanges(event, true);\n                    var rangeCount = ranges.length;\n\n                    for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                        range = ranges[rangeIndex];\n\n                        this._groupedView._positionEvent(event, group, range, rangeCount, start, end, rangeIndex);\n                    }\n\n                }.bind(this));\n\n                if (this._canAdjustSlotHeight === true) {\n                    this._adjustSlotHeight(group);\n                }\n\n            }\n        },\n\n        _renderGroups: function(events, resources, offset, columnLevel, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var tmp = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        offset = this._renderGroups(tmp, resources.slice(1), offset++, columnLevel + 1, value);\n                    } else {\n                        this._renderEvents(tmp, offset++);\n                    }\n                }\n            }\n            return offset;\n        },\n\n        _groupCount: function() {\n            var resources = this.groupedResources;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._isVerticallyGrouped()) {\n                    return groupedView._verticalGroupCount(resources.length - 1);\n                } else {\n                    return groupedView._horizontalGroupCount(resources.length);\n                }\n            }\n            return 1;\n        },\n\n        _columnOffsetForResource: function(index) {\n            return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n        },\n\n        destroy: function() {\n            if (this.table) {\n                this.table.removeClass(\"k-scheduler-monthview\");\n            }\n\n            if (this.content) {\n                this.content.off(NS);\n            }\n\n            if (this.element) {\n                this.element.off(NS);\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && this.options.editable) {\n                if (this.options.editable.create !== false) {\n                    this._addUserEvents.destroy();\n                }\n            }\n        },\n\n        events: [\"remove\", \"add\", \"edit\", \"navigate\"],\n\n        options: {\n            title: \"Month\",\n            name: \"month\",\n            eventHeight: 25,\n            moreButtonHeight: 13,\n            editable: true,\n            selectedDateFormat: \"{0:y}\",\n            selectedShortDateFormat: \"{0:y}\",\n            selectedMobileDateFormat: \"{0:MMMM}\",\n            groupHeaderTemplate: \"#=text#\",\n            dayTemplate: DAY_TEMPLATE,\n            eventTemplate: EVENT_TEMPLATE,\n            eventsPerDay: 2,\n            adaptiveSlotHeight: false,\n            eventSpacing: 3\n        }\n    });\n\n\n    function shiftArray(array, idx) {\n        return array.slice(idx).concat(array.slice(0, idx));\n    }\n\n    function firstVisibleMonthDay(date, calendarInfo) {\n        var firstDay = calendarInfo.firstDay,\n            firstVisibleDay = new Date(date.getFullYear(), date.getMonth(), 0, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n\n        while (firstVisibleDay.getDay() != firstDay) {\n            kendo.date.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n        }\n\n        return firstVisibleDay;\n    }\n\n    function isInDateRange(value, min, max) {\n        var msMin = min,\n            msMax = max,\n            msValue;\n\n        msValue = value;\n\n        return msValue >= msMin && msValue <= msMax;\n    }\n})(window.kendo.jQuery);\n"]}