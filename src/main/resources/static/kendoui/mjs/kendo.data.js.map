{"version":3,"file":"kendo.data.js","names":["logic","or","concat","acc","fn","a","identity","and","operatorsMap","isnullorempty","kendo","isBlank","isnotnullorempty","isPresent","contains","b","indexOf","doesnotcontain","doesnotendwith","length","doesnotstartwith","lastIndexOf","endswith","eq","gt","gte","isempty","isnotempty","isnotnull","isnull","lt","lte","neq","startswith","dateRegExp","convertValue","value","ignoreCase","accentFoldingFiltering","isString","date","exec","Date","getTime","toLocaleLowerCase","toLowerCase","isDate","typedGetter","prop","x","isNumeric","transformFilter","field","operator","itemProp","isFunction","getter","op","isCompositeFilterDescriptor","source","filters","transformCompositeFilter","filter","combiner","map","extendAccentFolding","reduce","Object","assign","filterExprNoEval","expr","__meta__","id","name","category","description","depends","features","$","undefined$1","extend","isPlainObject","isEmptyObject","isArray","Array","grep","ajax","each","noop","window","Observable","Class","STRING","FUNCTION","CREATE","READ","UPDATE","DESTROY","CHANGE","SYNC","GET","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","ITEMSLOADED","ITEMLOAD","crud","o","stringify","math","Math","push","join","pop","splice","shift","slice","unshift","toString","stableSort","support","objectKeys","ObservableArray","init","array","type","that","this","ObservableObject","call","wrapAll","_loadPromises","_loadedNodes","at","index","toJSON","serializeFunctions","idx","json","parent","target","wrap","object","Model","bind","e","isGroup","hasOwnProperty","trigger","node","items","action","promise","_loading","done","collection","nodes","loading","result","arguments","apply","omitChangeEvent","sort","howMany","item","i","len","children","unbind","forEach","callback","thisArg","context","reduceRight","find","every","some","remove","empty","Symbol","iterator","prototype","LazyObservableArray","data","events","_events","_parent","eventHandler","prefix","key","event","_notifyChange","ownKeys","ignoreObjectKeys","keys","filteredObjectKeys","props","protoKeys","getPrototypeOf","isPrimitiveType","getOwnPropertyNames","member","_handlers","charAt","uid","guid","shouldSerialize","f","get","_set","composite","paths","split","path","obj","set","setter","isSetPrevented","current","change","isObservableArray","isDataSource","DataSource","equal","y","xtype","parsers","number","parseFloat","parseDate","boolean","string","default","defaultValues","defaults","_initializers","dirty","dirtyFields","idField","_defaultId","_parse","parse","fieldName","fields","getFieldByName","editable","accept","isNew","define","base","options","model","originalName","proto","functionFields","nullable","defaultValue","Comparer","selector","compare","localeCompare","create","dir","combine","comparers","StableComparer","asc","valueA","valueB","__position","desc","operators","quote","str","replace","JSON","textOp","impl","ignore","getMatchRegexp","pattern","rx","esc","ch","matches","substring","doesnotmatch","Query","normalizeSort","descriptor","descriptors","d","sortFields","sorts","sortObject","filterExpr","expression","noEval","expressions","fieldFunctions","operatorFunctions","match","operatorMap","equals","isequalto","equalto","ne","notequals","isnotequalto","notequalto","notequal","islessthan","lessthan","less","le","islessthanorequalto","lessthanequal","isgreaterthan","greaterthan","greater","isgreaterthanorequalto","greaterthanequal","ge","notsubstringof","normalizeOperator","normalizeFilter","compareDescriptor","f1","f2","normalizeDescriptor","fieldComparer","normalizeGroup","skipItemSorting","aggregates","normalizeGroupWithoutCompare","groupValueComparer","calculateAggregate","accumulator","state","aggr","functionName","aggregate","functions","accessor","compareFilters","expr1","expr2","filters1","filters2","toArray","range","count","skip","take","select","order","inPlace","orderBy","orderByDescending","comparer","compiled","group","allData","groupPaging","groupAllData","hasSubgroups","itemCount","subgroupCount","groupBy","currentValue","sorted","_sortForGrouping","groupValue","_sortGroups","groups","sum","isNumber","average","max","min","val","isNaN","process","groupDescriptorsWithoutSort","total","customGroupSort","groupDescriptors","anyGroupDescriptorHasCompare","query","groupDescriptorsWithoutCompare","normalizedSort","filterCallback","flatGroups","groupDescriptor","virtual","LocalTransport","read","success","update","destroy","RemoteTransport","parameterMap","url","cache","Cache","add","submit","option","setup","error","parameters","operation","_store","clear","serializeRecords","getters","modelInstance","originalFieldNames","fieldNames","record","setters","convertRecords","convertGroup","wrapDataAccess","originalFunction","converter","wrapDataAccessBase","store","inmemory","DataReader","schema","modelBase","dataFunction","_dataAccessFunction","groupsFunction","serializeFunction","serialize","serializeGetters","fromName","from","_wrapDataAccessBase","errors","fillLastGroup","originalGroup","newGroup","currOriginal","currentNew","mergeGroups","dest","indexFunction","groupsLength","indexFn","groupIndex","itemIndex","flattenGroups","wrapGroupItems","eachGroupItems","func","replaceInRanges","ranges","observable","replaceInRange","replaceWithObservable","view","serverGrouping","viewIndex","indexOfPristineModel","indexOfModel","fieldNameFromModel","convertFilterDescriptorsField","convertDescriptorsField","_map","_prefetch","_data","_pristineData","_ranges","_view","_pristineTotal","_destroyed","_pageSize","pageSize","_page","page","_sort","_sortFields","_filter","_group","_aggregate","_total","_groupPaging","_groupsState","_shouldDetachObservableParents","transport","Transport","pushCreate","_pushCreate","pushUpdate","_pushUpdate","pushDestroy","_pushDestroy","offlineStorage","_storage","getItem","localStorage","setItem","reader","readers","_detachObservableParents","_observe","_online","serverSorting","serverPaging","serverFiltering","serverAggregates","batch","inPlaceSort","clone","online","sync","Deferred","resolve","offlineData","_isGrouped","_isServerGrouped","_isServerGroupPaged","_isGroupPaged","_push","_readData","_flatData","useRanges","getByUid","_getByUid","dataItems","_storeData","_addRange","_process","_observeView","flatView","insert","_createNewModel","_wrapInEmptyGroup","_insertModelInRange","pushInsert","rangeSpan","_getCurrentRangeSpan","pushed","autoSync","pristine","last","pristineData","_updatePristineForModel","_removeItems","removePristine","shouldRemovePristine","destroyed","found","_eachItem","_removePristineForModel","pushMove","_moveItems","moved","dataItem","hasGroups","_pushInDestroyed","removeModel","_removeModelFromRanges","created","notFetched","updated","promises","_sendSubmit","_send","when","then","_accept","_syncEnd","_change","cancelChanges","_cancelModel","_changesCanceled","_markOfflineUpdatesAsDirty","__state__","hasChanges","models","response","serverGroup","_handleCustomErrors","values","_executeOnPristineForModel","deepExtend","_eachPristineItem","_pristineForModel","_modelCanceled","_submit","status","reject","deferred","_promise","method","converted","params","_params","_queueRequest","isPrevented","_dequeueRequest","args","_readAggregates","replaceSubset","_serverGroupsTotal","_aggregateResult","itemIds","_skip","endless","j","_changeHandler","updatePristine","end","start","timestamp","_timeStamp","outerStart","outerEnd","_sortRanges","_groupsFlat","_appendToGroupsFlat","_updateOuterRangesLength","_getGroupByUid","xhr","errorThrown","_requestInProgress","_pending","_shouldWrap","_updateTotalForAction","parseInt","handler","first","_calculateAggregates","_take","currentRangeStart","_clearEmptyGroups","_queryProcess","dataToAggregate","_setView","_setFilterTotal","_mergeState","_currentRangeStart","moreItemsCount","_hasExpandedSubGroups","_findGroupedRange","parents","itemsLength","groupCount","itemsToSkip","taken","_fetchGroupItems","_fetchingGroupItems","skipped","includeParents","excludeHeader","currentItems","_expandedSubGroupItemsCount","includeCurrentItems","subGroup","temp","endSpecified","groupItemsSkip","firstItem","lastItem","expandedSubGroupItemsCount","groupItemCount","getGroupItems","floor","round","subgroups","_composeItemsFilter","findSubgroups","clearTimeout","_timeout","setTimeout","_groupItemsSuccessHandler","totalField","totalCount","_updateRangePristineData","countAdded","_currentRequestTimeStamp","_skipRequestsInProgress","indexOfCurrentGroup","g","currentGroup","dataLength","indexes","rangesLength","_containsSubGroup","_cloneGroup","subgroup","currentSubGroup","filterTotal","setDefaultValue","fetch","_query","next","totalPages","prev","_pageableQueryOptions","getGroupsFlat","groupsTotal","includeExpanded","_calculateGroupsTotal","itemsField","ignoreState","_groupsTotal","countGroupRange","_emptyAggregates","ceil","inRange","_findRange","lastRange","firstItemUid","enableRequestsInProgress","pageSkip","size","_processRangeData","_originalPageSkip","_originalSize","_adjustPageSkip","_groupRangeExists","_rangeExists","prefetch","skipIdx","takeIdx","startIndex","endIndex","rangeData","rangeEnd","processed","flatData","prevRangeEnd","remote","groupMapOptions","isGroupPaged","startField","endField","_mergeGroups","_getRangesMismatch","mismatch","prevGroup","eventData","_omitPrefetch","paging","sorting","filtering","_prefetchSuccessHandler","force","_multiplePrefetch","prevRange","_getPrevRange","_getNextRange","availableItemsCount","_removeModelFromRange","_updateRangesLength","mismatchFound","mismatchLength","lengthDifference","abs","rangeLength","dataSource","transportOptions","transports","schemas","logToConsole","table","fieldIndex","cells","cell","tbody","tBodies","rows","fieldCount","nodeName","innerHTML","inferTable","optgroup","firstField","secondField","parentNode","disabled","label","text","attributes","specified","inferSelect","Node","hasChildren","childrenField","childrenOptions","hasChildrenObject","_childrenOptions","_initChildren","_loaded","HierarchicalDataSource","_updateChildrenField","append","loaded","level","_childrenLoaded","load","one","_matchFilter","dataMethod","_attachBubbleHandlers","_hierarchicalFilter","_childrenLoading","isLoading","_markHierarchicalQuery","_updateHierarchicalFilter","_find","inferList","list","textChild","className","textField","urlField","spriteCssClassField","imageUrlField","elements","tagName","firstChild","attr","nodeType","nodeValue","trim","_dataSource","Buffer","viewSize","disablePrefetch","_prefetching","buffer","_reset","_syncWithDataSource","setViewSize","_recalculate","itemPresent","dataOffset","prefetchThreshold","midPageThreshold","nextMidRange","nextPageThreshold","nextFullRange","pullBackThreshold","offset","previousMidRange","previousFullRange","_goToRange","nextRange","syncDataSource","prefetchOffset","expanding","_expanding","_syncPending","_firstItemUid","BatchBuffer","batchSize","batchBuffer","endreached","prefetching","prefetched","reset","resize","jQuery"],"sources":["kendo.data.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.data.odata.js';\nimport './kendo.data.xml.js';\n\n/*\nThis code is copied/inspired by the internal @progress/kendo-data-query repo:\nhttps://github.com/telerik/kendo-data-query/tree/develop/src/filtering\n\n!!!\n1. If updates are to be synced consider the accentFoldingFiltering,\n   which at the moment is not present as a feature in the data-query-package.\n\n2. Double-check available operators as well.\n\n3. Make sure objs are strings -> i.e., replace (a || \"\") to (a + '')\n!!!\n\nIn future, if we consider reusing the code directly we should revise the above omissions.\n*/\n\nconst logic = {\n    \"or\": {\n        concat: (acc, fn) => a => acc(a) || fn(a),\n        identity: () => false\n    },\n    \"and\": {\n        concat: (acc, fn) => a => acc(a) && fn(a),\n        identity: () => true\n    }\n};\n\nconst operatorsMap = {\n    isnullorempty: (a) => kendo.isBlank(a) || a === '',\n    isnotnullorempty: (a) => kendo.isPresent(a) && a !== '',\n    contains: (a, b) => (a + '').indexOf(b) >= 0,\n    doesnotcontain: (a, b) => (a + '').indexOf(b) === -1,\n    doesnotendwith: (a, b) => (a + '').indexOf(b, (a || \"\").length - (b || \"\").length) < 0,\n    doesnotstartwith: (a, b) => (a + '').lastIndexOf(b, 0) === -1,\n    endswith: (a, b) => (a + '').indexOf(b, (a || \"\").length - (b || \"\").length) >= 0,\n    eq: (a, b) => a === b,\n    gt: (a, b) => a > b,\n    gte: (a, b) => a >= b,\n    isempty: (a) => a === '',\n    isnotempty: (a) => a !== '',\n    isnotnull: (a) => kendo.isPresent(a),\n    isnull: (a) => kendo.isBlank(a),\n    lt: (a, b) => a < b,\n    lte: (a, b) => a <= b,\n    neq: (a, b) => a != b,\n    startswith: (a, b) => (a + '').lastIndexOf(b, 0) === 0\n};\n\nconst dateRegExp = /^\\/Date\\((.*?)\\)\\/$/;\n\nconst convertValue = (value, ignoreCase, accentFoldingFiltering) => {\n    if (value != null && kendo.isString(value)) {\n        const date = dateRegExp.exec(value);\n        if (date) {\n            return new Date(+date[1]).getTime();\n        } else if (ignoreCase) {\n            return accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase();\n        }\n    } else if (value != null && kendo.isDate(value)) {\n        return value.getTime();\n    }\n    return value;\n};\n\nconst typedGetter = (prop, value, ignoreCase, accentFoldingFiltering) => {\n    if (!kendo.isPresent(value)) {\n        return prop;\n    }\n\n    let acc = prop;\n\n    if (kendo.isString(value)) {\n        const date = dateRegExp.exec(value);\n        if (date) {\n            value = new Date(+date[1]);\n        } else {\n            acc = a => {\n                const x = prop(a);\n                if (typeof x === 'string' && ignoreCase) {\n                    return accentFoldingFiltering ? x.toLocaleLowerCase(accentFoldingFiltering) : x.toLowerCase();\n                } else {\n                    return kendo.isNumeric(x) ? x + \"\" : x;\n                }\n            };\n        }\n    }\n\n    if (kendo.isDate(value)) {\n        return a => {\n            const x = acc(a);\n            return kendo.isDate(x) ? x.getTime() : x;\n        };\n    }\n    return acc;\n};\n\nconst transformFilter = ({ field, ignoreCase, value, operator = 'eq', accentFoldingFiltering }) => {\n    field = !kendo.isPresent(field) ? a => a : field;\n\n    ignoreCase = kendo.isPresent(ignoreCase) ? ignoreCase : true;\n\n    const itemProp = typedGetter(\n        kendo.isFunction(field) ? field : kendo.getter(field, true),\n        value,\n        ignoreCase,\n        accentFoldingFiltering\n    );\n\n    value = convertValue(value, ignoreCase, accentFoldingFiltering);\n\n    const op = kendo.isFunction(operator) ? operator : operatorsMap[operator];\n\n    return a => op(itemProp(a), value, ignoreCase);\n};\n\nconst isCompositeFilterDescriptor = (source) => kendo.isPresent(source.filters);\n\nconst transformCompositeFilter = (filter) => {\n    const accentFoldingFiltering = filter.accentFoldingFiltering;\n    const combiner = logic[filter.logic || 'and'];\n    return filter.filters\n        .filter(kendo.isPresent)\n        .map(x => (isCompositeFilterDescriptor(x) ? transformCompositeFilter(extendAccentFolding(x, accentFoldingFiltering)) : transformFilter(extendAccentFolding(x, accentFoldingFiltering))))\n        .reduce(combiner.concat, combiner.identity);\n};\n\nconst extendAccentFolding = (filter, accentFoldingFiltering) => (kendo.isPresent(accentFoldingFiltering) ? Object.assign(filter, { accentFoldingFiltering }) : filter);\n\nconst filterExprNoEval = function(expr) {\n    return transformCompositeFilter(expr);\n};\n\nvar __meta__ = {\n    id: \"data\",\n    name: \"Data source\",\n    category: \"framework\",\n    description: \"Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.\",\n    depends: [ \"core\" ],\n    features: [ {\n        id: \"data-odata\",\n        name: \"OData\",\n        description: \"Support for accessing Open Data Protocol (OData) services.\",\n        depends: [ \"data.odata\" ]\n    }, {\n        id: \"data-signalr\",\n        name: \"SignalR\",\n        description: \"Support for binding to SignalR hubs.\",\n        depends: [ \"data.signalr\" ]\n    }, {\n        id: \"data-XML\",\n        name: \"XML\",\n        description: \"Support for binding to XML.\",\n        depends: [ \"data.xml\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var extend = $.extend,\n        isPlainObject = $.isPlainObject,\n        isEmptyObject = $.isEmptyObject,\n        isArray = Array.isArray,\n        grep = $.grep,\n        ajax = $.ajax,\n        map,\n        each = $.each,\n        noop = $.noop,\n        kendo = window.kendo,\n        isFunction = kendo.isFunction,\n        Observable = kendo.Observable,\n        Class = kendo.Class,\n        STRING = \"string\",\n        FUNCTION = \"function\",\n        ASCENDING = \"asc\",\n        CREATE = \"create\",\n        READ = \"read\",\n        UPDATE = \"update\",\n        DESTROY = \"destroy\",\n        CHANGE = \"change\",\n        SYNC = \"sync\",\n        GET = \"get\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        ITEMSLOADED = \"itemsLoaded\",\n        ITEMLOAD = \"itemLoad\",\n        crud = [CREATE, READ, UPDATE, DESTROY],\n        identity = function(o) { return o; },\n        getter = kendo.getter,\n        stringify = kendo.stringify,\n        math = Math,\n        push = [].push,\n        join = [].join,\n        pop = [].pop,\n        splice = [].splice,\n        shift = [].shift,\n        slice = [].slice,\n        unshift = [].unshift,\n        toString = {}.toString,\n        stableSort = kendo.support.stableSort,\n        dateRegExp = /^\\/Date\\((.*?)\\)\\/$/,\n        objectKeys = [];\n\n    var ObservableArray = Observable.extend({\n        init: function(array, type) {\n            var that = this;\n\n            that.type = type || ObservableObject;\n\n            Observable.fn.init.call(that);\n\n            that.length = array.length;\n\n            that.wrapAll(array, that);\n            that._loadPromises = [];\n            that._loadedNodes = [];\n        },\n\n        at: function(index) {\n            return this[index];\n        },\n\n        toJSON: function(serializeFunctions) {\n            var idx, length = this.length, value, json = new Array(length);\n\n            for (idx = 0; idx < length; idx++) {\n                value = this[idx];\n\n                if (value instanceof ObservableObject) {\n                    value = value.toJSON(serializeFunctions);\n                }\n\n                json[idx] = value;\n            }\n\n            return json;\n        },\n\n        parent: noop,\n\n        wrapAll: function(source, target) {\n            var that = this,\n                idx,\n                length,\n                parent = function() {\n                    return that;\n                };\n\n            target = target || [];\n\n            for (idx = 0, length = source.length; idx < length; idx++) {\n                target[idx] = that.wrap(source[idx], parent);\n            }\n\n            return target;\n        },\n\n        wrap: function(object, parent) {\n            var that = this,\n                observable;\n\n            if (object !== null && toString.call(object) === \"[object Object]\") {\n                observable = object instanceof that.type || object instanceof Model;\n\n                if (!observable) {\n                    object = object instanceof ObservableObject ? object.toJSON() : object;\n                    object = new that.type(object);\n                }\n\n                object.parent = parent;\n\n                object.bind(CHANGE, function(e) {\n                    var isGroup = object.hasOwnProperty(\"hasSubgroups\");\n                    that.trigger(CHANGE, {\n                        field: e.field,\n                        node: e.node,\n                        index: e.index,\n                        items: e.items || [this],\n                        action: e.node || isGroup ? (e.action || \"itemloaded\") : \"itemchange\"\n                    });\n                });\n\n                object.bind(ITEMLOAD, function(e) {\n                    that._loadPromises.push(e.promise);\n                    that._loading = true;\n\n                    e.promise.done(function() {\n                        that._loadedNodes.push(e.node);\n                        var index = that._loadPromises.indexOf(e.promise);\n                        that._loadPromises.splice(index, 1);\n\n                        if (!that._loadPromises.length) {\n                            that._loading = false;\n                            that.trigger(ITEMSLOADED, { collection: that, nodes: that._loadedNodes });\n                            that._loadedNodes = [];\n                        }\n                    });\n                });\n            }\n\n            return object;\n        },\n\n        loading: function() {\n            return this._loading;\n        },\n\n        push: function() {\n            var index = this.length,\n                items = this.wrapAll(arguments),\n                result;\n\n            result = push.apply(this, items);\n\n            if (!this.omitChangeEvent) {\n                this.trigger(CHANGE, {\n                    action: \"add\",\n                    index: index,\n                    items: items\n                });\n            }\n\n            return result;\n        },\n\n        slice: slice,\n\n        sort: [].sort,\n\n        join: join,\n\n        pop: function() {\n            var length = this.length, result = pop.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: length - 1,\n                    items: [result]\n                });\n            }\n\n            return result;\n        },\n\n        splice: function(index, howMany, item) {\n            var items = this.wrapAll(slice.call(arguments, 2)),\n                result, i, len;\n\n            result = splice.apply(this, [index, howMany].concat(items));\n\n            if (result.length) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"remove\",\n                        index: index,\n                        items: result\n                    });\n                }\n\n                for (i = 0, len = result.length; i < len; i++) {\n                    if (result[i] && result[i].children) {\n                        result[i].unbind(CHANGE);\n                    }\n                }\n            }\n\n            if (item) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"add\",\n                        index: index,\n                        items: items\n                    });\n                }\n            }\n            return result;\n        },\n\n        shift: function() {\n            var length = this.length, result = shift.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: 0,\n                    items: [result]\n                });\n            }\n\n            return result;\n        },\n\n        unshift: function() {\n            var items = this.wrapAll(arguments),\n                result;\n\n            result = unshift.apply(this, items);\n\n            this.trigger(CHANGE, {\n                action: \"add\",\n                index: 0,\n                items: items\n            });\n\n            return result;\n        },\n\n        indexOf: function(item) {\n            var that = this,\n                idx,\n                length;\n\n            for (idx = 0, length = that.length; idx < length; idx++) {\n                if (that[idx] === item) {\n                    return idx;\n                }\n            }\n            return -1;\n        },\n\n        forEach: function(callback, thisArg) {\n            var idx = 0;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                callback.call(context, this[idx], idx, this);\n            }\n        },\n\n        map: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                result[idx] = callback.call(context, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduce: function(callback) {\n            var idx = 0,\n                result,\n                length = this.length;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx < length) {\n                result = this[idx++];\n            }\n\n            for (; idx < length; idx++) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduceRight: function(callback) {\n            var idx = this.length - 1,\n                result;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx > 0) {\n                result = this[idx--];\n            }\n\n            for (; idx >= 0; idx--) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        filter: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    result[result.length] = item;\n                }\n            }\n\n            return result;\n        },\n\n        find: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return item;\n                }\n            }\n        },\n\n        every: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (!callback.call(context, item, idx, this)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        some: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // non-standard collection methods\n        remove: function(item) {\n            var idx = this.indexOf(item);\n\n            if (idx !== -1) {\n                this.splice(idx, 1);\n            }\n        },\n\n        empty: function() {\n            this.splice(0, this.length);\n        }\n    });\n\n    // Polyfill for Symbol.iterator\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator && !ObservableArray.prototype[Symbol.iterator]) {\n        ObservableArray.prototype[Symbol.iterator] = [][Symbol.iterator];\n    }\n\n    var LazyObservableArray = ObservableArray.extend({\n        init: function(data, type, events) {\n            var parentFn = function() { return this; };\n\n            Observable.fn.init.call(this);\n\n            this.type = type || ObservableObject;\n\n            if (events) {\n                this._events = events;\n            }\n\n            for (var idx = 0; idx < data.length; idx++) {\n                this[idx] = data[idx];\n            }\n\n            this.length = idx;\n            this._parent = parentFn.bind(this);\n        },\n        at: function(index) {\n            var item = this[index];\n\n            if (!(item instanceof this.type)) {\n                item = this[index] = this.wrap(item, this._parent);\n            } else {\n                item.parent = this._parent;\n            }\n\n            return item;\n        }\n    });\n\n    function eventHandler(context, type, field, prefix) {\n        return function(e) {\n            var event = {}, key;\n\n            for (key in e) {\n                event[key] = e[key];\n            }\n\n            if (prefix) {\n                event.field = field + \".\" + e.field;\n            } else {\n                event.field = field;\n            }\n\n            if (type == CHANGE && context._notifyChange) {\n                context._notifyChange(event);\n            }\n\n            context.trigger(type, event);\n        };\n    }\n\n    function isPrimitiveType(value) {\n        return (typeof value === \"object\" && Object.getPrototypeOf(value) === Object.getPrototypeOf({}))\n                || Object.getPrototypeOf(value) === Object.getPrototypeOf(new Date())\n                || typeof value !== \"object\";\n      }\n\n    function ownKeys(value, ignoreObjectKeys) {\n        var props = [];\n        var protoKeys = [];\n        var keys, filteredObjectKeys;\n\n        value = value || {};\n\n        if (!isPrimitiveType(value)) {\n            protoKeys = Object.getOwnPropertyNames(Object.getPrototypeOf(value));\n        }\n\n        keys = Object.getOwnPropertyNames(value).concat(protoKeys);\n\n        filteredObjectKeys = objectKeys.filter(function(key) {\n            return keys.indexOf(key) < 0;\n        });\n\n        while (value) {\n            Object.getOwnPropertyNames(value).forEach(function(prop) {\n                if (props.indexOf(prop) === -1 && (!ignoreObjectKeys || filteredObjectKeys.indexOf(prop) < 0)) {\n                    props.push(prop);\n                }\n            });\n            value = Object.getPrototypeOf(value);\n        }\n\n        return props;\n    }\n\n    objectKeys = ownKeys({}, false);\n\n    var ObservableObject = Observable.extend({\n        init: function(value) {\n            var that = this,\n                member,\n                keys = ownKeys(value, true),\n                parent = function() {\n                    return that;\n                };\n\n            Observable.fn.init.call(this);\n\n            this._handlers = {};\n\n            keys.forEach(function(field) {\n                member = value[field];\n\n                if (typeof member === \"object\" && member && !member.getTime && field.charAt(0) != \"_\") {\n                    member = that.wrap(member, field, parent);\n                }\n\n                that[field] = member;\n            });\n\n            that.uid = kendo.guid();\n        },\n\n        shouldSerialize: function(field, serializeFunctions) {\n            return this.hasOwnProperty(field) && field !== \"_handlers\" && field !== \"_events\" && ((serializeFunctions && serializeFunctions[field]) || typeof this[field] !== FUNCTION) && field !== \"uid\";\n        },\n\n        forEach: function(f) {\n            for (var i in this) {\n                if (this.shouldSerialize(i)) {\n                    f(this[i], i);\n                }\n            }\n        },\n\n        toJSON: function(serializeFunctions) {\n            var result = {}, value, field;\n\n            for (field in this) {\n                if (this.shouldSerialize(field, serializeFunctions)) {\n                    value = this[field];\n\n                    if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                        value = value.toJSON(serializeFunctions);\n                    }\n\n                    result[field] = value;\n                }\n            }\n\n            return result;\n        },\n\n        get: function(field) {\n            var that = this, result;\n\n            that.trigger(GET, { field: field });\n\n            if (field === \"this\") {\n                result = that;\n            } else {\n                result = kendo.getter(field, true)(that);\n            }\n\n            return result;\n        },\n\n        _set: function(field, value) {\n            var that = this;\n            var composite = field.indexOf(\".\") >= 0;\n\n            if (composite) {\n                var paths = field.split(\".\"),\n                    path = \"\";\n\n                while (paths.length > 1) {\n                    path += paths.shift();\n                    var obj = kendo.getter(path, true)(that);\n                    if (obj instanceof ObservableObject) {\n                        obj.set(paths.join(\".\"), value);\n                        return composite;\n                    }\n                    path += \".\";\n                }\n            }\n\n            kendo.setter(field)(that, value);\n\n            return composite;\n        },\n\n        set: function(field, value) {\n            var that = this,\n                isSetPrevented = false,\n                composite = field.indexOf(\".\") >= 0,\n                current = kendo.getter(field, true)(that);\n\n            if (current !== value) {\n                if (current instanceof Observable && this._handlers[field]) {\n                    if (this._handlers[field].get) {\n                       current.unbind(GET, this._handlers[field].get);\n                    }\n                    current.unbind(CHANGE, this._handlers[field].change);\n                }\n\n                isSetPrevented = that.trigger(\"set\", { field: field, value: value });\n\n                if (!isSetPrevented) {\n                    if (!composite) {\n                        value = that.wrap(value, field, function() { return that; });\n                    }\n                    if (!that._set(field, value) || field.indexOf(\"(\") >= 0 || field.indexOf(\"[\") >= 0) {\n                        that.trigger(CHANGE, { field: field });\n                    }\n                }\n            }\n\n            return isSetPrevented;\n        },\n\n        parent: noop,\n\n        wrap: function(object, field, parent) {\n            var that = this;\n            var get;\n            var change;\n            var type = toString.call(object);\n\n            if (object != null && (type === \"[object Object]\" || type === \"[object Array]\")) {\n                var isObservableArray = object instanceof ObservableArray;\n                var isDataSource = object instanceof DataSource;\n\n                if (type === \"[object Object]\" && !isDataSource && !isObservableArray) {\n                    if (!(object instanceof ObservableObject)) {\n                        object = new ObservableObject(object);\n                    }\n\n                    get = eventHandler(that, GET, field, true);\n                    object.bind(GET, get);\n                    change = eventHandler(that, CHANGE, field, true);\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { get: get, change: change };\n                } else if (type === \"[object Array]\" || isObservableArray || isDataSource) {\n                    if (!isObservableArray && !isDataSource) {\n                        object = new ObservableArray(object);\n                    }\n\n                    change = eventHandler(that, CHANGE, field, false);\n\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { change: change };\n                }\n\n                object.parent = parent;\n            }\n\n            return object;\n        }\n    });\n\n    function equal(x, y) {\n        if (x === y) {\n            return true;\n        }\n\n        var xtype = kendo.type(x), ytype = kendo.type(y), field;\n\n        if (xtype !== ytype) {\n            return false;\n        }\n\n        if (xtype === \"date\") {\n            return x.getTime() === y.getTime();\n        }\n\n        if (xtype !== \"object\" && xtype !== \"array\") {\n            return false;\n        }\n\n        for (field in x) {\n            if (!equal(x[field], y[field])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    var parsers = {\n        \"number\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseFloat(value);\n        },\n\n        \"date\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseDate(value);\n        },\n\n        \"boolean\": function(value) {\n            if (typeof value === STRING) {\n                if (value.toLowerCase() === \"null\") {\n                    return null;\n                } else {\n                    return value.toLowerCase() === \"true\";\n                }\n            }\n            return value != null ? !!value : value;\n        },\n\n        \"string\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return value != null ? (value + \"\") : value;\n        },\n\n        \"default\": function(value) {\n            return value;\n        }\n    };\n\n    var defaultValues = {\n        \"string\": \"\",\n        \"number\": 0,\n        \"date\": new Date(),\n        \"boolean\": false,\n        \"default\": \"\"\n    };\n\n    function getFieldByName(obj, name) {\n        var field,\n            fieldName;\n\n        for (fieldName in obj) {\n            field = obj[fieldName];\n            if (isPlainObject(field) && field.field && field.field === name) {\n                return field;\n            } else if (field === name) {\n                return field;\n            }\n        }\n        return null;\n    }\n\n    var Model = ObservableObject.extend({\n        init: function(data) {\n            var that = this;\n\n            if (!data || $.isEmptyObject(data)) {\n                data = $.extend({}, that.defaults, data);\n\n                if (that._initializers) {\n                    for (var idx = 0; idx < that._initializers.length; idx++) {\n                         var name = that._initializers[idx];\n                         data[name] = that.defaults[name]();\n                    }\n                }\n            }\n\n            ObservableObject.fn.init.call(that, data);\n\n            that.dirty = false;\n            that.dirtyFields = {};\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n\n                if (that.id === undefined$1) {\n                    that.id = that._defaultId;\n                }\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return ObservableObject.fn.shouldSerialize.call(this, field) &&\n                field !== \"uid\" && !(this.idField !== \"id\" && field === \"id\") &&\n                field !== \"dirty\" && field !== \"dirtyFields\" && field !== \"_accessors\";\n        },\n\n        _parse: function(field, value) {\n            var that = this,\n                fieldName = field,\n                fields = (that.fields || {}),\n                parse;\n\n            field = fields[field];\n            if (!field) {\n                field = getFieldByName(fields, fieldName);\n            }\n            if (field) {\n                parse = field.parse;\n                if (!parse && field.type) {\n                    parse = parsers[field.type.toLowerCase()];\n                }\n            }\n\n            return parse ? parse(value) : value;\n        },\n\n        _notifyChange: function(e) {\n            var action = e.action;\n\n            if (action == \"add\" || action == \"remove\") {\n                this.dirty = true;\n                this.dirtyFields[e.field] = true;\n            }\n        },\n\n        editable: function(field) {\n            field = (this.fields || {})[field];\n            return field ? field.editable !== false : true;\n        },\n\n        set: function(field, value) {\n            var that = this;\n            var dirty = that.dirty;\n\n            if (that.editable(field)) {\n                value = that._parse(field, value);\n\n                if (!equal(value, that.get(field))) {\n                    that.dirty = true;\n                    that.dirtyFields[field] = true;\n\n                    if (ObservableObject.fn.set.call(that, field, value) && !dirty) {\n                        that.dirty = dirty;\n\n                        if (!that.dirty) {\n                            that.dirtyFields[field] = false;\n                        }\n                    }\n                } else {\n                    that.trigger(\"equalSet\", { field: field, value: value });\n                }\n            }\n        },\n\n        accept: function(data) {\n            var that = this,\n                parent = function() { return that; },\n                field;\n\n            for (field in data) {\n                var value = data[field];\n\n                if (field.charAt(0) != \"_\") {\n                    value = that.wrap(data[field], field, parent);\n                }\n\n                that._set(field, value);\n            }\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n            }\n\n            that.dirty = false;\n            that.dirtyFields = {};\n        },\n\n        isNew: function() {\n            return this.id === this._defaultId;\n        }\n    });\n\n    Model.define = function(base, options) {\n        if (options === undefined$1) {\n            options = base;\n            base = Model;\n        }\n\n        var model,\n            proto = extend({ defaults: {} }, options),\n            name,\n            field,\n            type,\n            value,\n            idx,\n            length,\n            fields = {},\n            originalName,\n            id = proto.id,\n            functionFields = [];\n\n        if (id) {\n            proto.idField = id;\n        }\n\n        if (proto.id) {\n            delete proto.id;\n        }\n\n        if (id) {\n            proto.defaults[id] = proto._defaultId = \"\";\n        }\n\n        if (toString.call(proto.fields) === \"[object Array]\") {\n            for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                field = proto.fields[idx];\n                if (typeof field === STRING) {\n                    fields[field] = {};\n                } else if (field.field) {\n                    fields[field.field] = field;\n                }\n            }\n            proto.fields = fields;\n        }\n\n        for (name in proto.fields) {\n            field = proto.fields[name];\n            type = field.type || \"default\";\n            value = null;\n            originalName = name;\n\n            name = typeof (field.field) === STRING ? field.field : name;\n\n            if (!field.nullable) {\n                value = proto.defaults[originalName !== name ? originalName : name] = field.defaultValue !== undefined$1 ? field.defaultValue : defaultValues[type.toLowerCase()];\n\n                if (typeof value === \"function\") {\n                    functionFields.push(name);\n                }\n            }\n\n            if (options.id === name) {\n                proto._defaultId = value;\n            }\n\n            proto.defaults[originalName !== name ? originalName : name] = value;\n\n            if ($.isPlainObject(field)) {\n                field.parse = field.parse || parsers[type];\n            } else {\n                field = {\n                    parse: parsers[type]\n                };\n            }\n        }\n\n        if (functionFields.length > 0) {\n            proto._initializers = functionFields;\n        }\n\n        model = base.extend(proto);\n        model.define = function(options) {\n            return Model.define(model, options);\n        };\n\n        if (proto.fields) {\n            model.fields = proto.fields;\n            model.idField = proto.idField;\n        }\n\n        return model;\n    };\n\n    var Comparer = {\n        selector: function(field) {\n            return isFunction(field) ? field : getter(field);\n        },\n\n        compare: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                a = selector(a);\n                b = selector(b);\n\n                if (a == null && b == null) {\n                    return 0;\n                }\n\n                if (a == null) {\n                    return -1;\n                }\n\n                if (b == null) {\n                    return 1;\n                }\n\n                if (a.localeCompare) {\n                    return a.localeCompare(b);\n                }\n\n                return a > b ? 1 : (a < b ? -1 : 0);\n            };\n        },\n\n        create: function(sort) {\n            var compare = sort.compare || this.compare(sort.field);\n\n            if (sort.dir == \"desc\") {\n                return function(a, b) {\n                    return compare(b, a, true);\n                };\n            }\n\n            return compare;\n        },\n\n        combine: function(comparers) {\n            return function(a, b) {\n                var result = comparers[0](a, b),\n                    idx,\n                    length;\n\n                for (idx = 1, length = comparers.length; idx < length; idx ++) {\n                    result = result || comparers[idx](a, b);\n                }\n\n                return result;\n            };\n        }\n    };\n\n    var StableComparer = extend({}, Comparer, {\n        asc: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return -1;\n                }\n\n                if (valueB == null) {\n                    return 1;\n                }\n\n                if (valueA.localeCompare) {\n                    return valueA.localeCompare(valueB);\n                }\n\n                return valueA > valueB ? 1 : -1;\n            };\n        },\n\n        desc: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return 1;\n                }\n\n                if (valueB == null) {\n                    return -1;\n                }\n\n                if (valueB.localeCompare) {\n                    return valueB.localeCompare(valueA);\n                }\n\n                return valueA < valueB ? 1 : -1;\n            };\n        },\n        create: function(sort) {\n           return this[sort.dir](sort.field);\n        }\n    });\n\n    map = function(array, callback) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = callback(array[idx], idx, array);\n        }\n\n        return result;\n    };\n\n    var operators = (function() {\n\n        function quote(str) {\n            if (typeof str == \"string\") {\n                str = str.replace(/[\\r\\n]+/g, \"\");\n            }\n            return JSON.stringify(str);\n        }\n\n        function textOp(impl) {\n            return function(a, b, ignore, accentFoldingFiltering) {\n                b += \"\";\n                if (ignore) {\n                    a = \"(\" + a + \" + '').toString()\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                    b = ((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase());\n                }\n                return impl(a, quote(b), ignore);\n            };\n        }\n\n        function operator(op, a, b, ignore, accentFoldingFiltering) {\n            if (b != null) {\n                if (typeof b === STRING) {\n                    var date = dateRegExp.exec(b);\n                    if (date) {\n                        b = new Date(+date[1]);\n                    } else if (ignore) {\n                        b = quote(((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase()));\n                        a = \"((\" + a + \" || '')+'')\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                    } else {\n                        b = quote(b);\n                    }\n                }\n\n                if (b.getTime) {\n                    //b looks like a Date\n                    a = \"(\" + a + \"&&\" + a + \".getTime?\" + a + \".getTime():\" + a + \")\";\n                    b = b.getTime();\n                }\n            }\n\n            return a + \" \" + op + \" \" + b;\n        }\n\n        function getMatchRegexp(pattern) {\n            // take a pattern, as supported by Excel match filter, and\n            // convert it to the equivalent JS regular expression.\n            // Excel patterns support:\n            //\n            //   * - match any sequence of characters\n            //   ? - match a single character\n            //\n            // to match a literal * or ?, they must be prefixed by a tilde (~)\n            for (var rx = \"/^\", esc = false, i = 0; i < pattern.length; ++i) {\n                var ch = pattern.charAt(i);\n                if (esc) {\n                    rx += \"\\\\\" + ch;\n                } else if (ch == \"~\") {\n                    esc = true;\n                    continue;\n                } else if (ch == \"*\") {\n                    rx += \".*\";\n                } else if (ch == \"?\") {\n                    rx += \".\";\n                } else if (\".+^$()[]{}|\\\\/\\n\\r\\u2028\\u2029\\xA0\".indexOf(ch) >= 0) {\n                    rx += \"\\\\\" + ch;\n                } else {\n                    rx += ch;\n                }\n                esc = false;\n            }\n            return rx + \"$/\";\n        }\n\n        return {\n            quote: function(value) {\n                if (value && value.getTime) {\n                    return \"new Date(\" + value.getTime() + \")\";\n                }\n                return quote(value);\n            },\n            eq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"==\", a, b, ignore, accentFoldingFiltering);\n            },\n            neq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"!=\", a, b, ignore, accentFoldingFiltering);\n            },\n            gt: function(a, b, ignore) {\n                return operator(\">\", a, b, ignore);\n            },\n            gte: function(a, b, ignore) {\n                return operator(\">=\", a, b, ignore);\n            },\n            lt: function(a, b, ignore) {\n                return operator(\"<\", a, b, ignore);\n            },\n            lte: function(a, b, ignore) {\n                return operator(\"<=\", a, b, ignore);\n            },\n            startswith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == 0\";\n            }),\n            doesnotstartwith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == -1\";\n            }),\n            endswith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") >= 0\";\n            }),\n            doesnotendwith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") < 0\";\n            }),\n            contains: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") >= 0\";\n            }),\n            doesnotcontain: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") == -1\";\n            }),\n            matches: textOp(function(a, b) {\n                b = b.substring(1, b.length - 1);\n                return getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            doesnotmatch: textOp(function(a, b) {\n                b = b.substring(1, b.length - 1);\n                return \"!\" + getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            isempty: function(a) {\n                return a + \" === ''\";\n            },\n            isnotempty: function(a) {\n                return a + \" !== ''\";\n            },\n            isnull: function(a) {\n                return \"(\" + a + \" == null)\";\n            },\n            isnotnull: function(a) {\n                return \"(\" + a + \" != null)\";\n            },\n            isnullorempty: function(a) {\n                return \"(\" + a + \" === null) || (\" + a + \" === '')\";\n            },\n            isnotnullorempty: function(a) {\n                return \"(\" + a + \" !== null) && (\" + a + \" !== '')\";\n            }\n        };\n    })();\n\n    function Query(data) {\n        this.data = data || [];\n    }\n\n    // Continue to support legacy unsafe-eval for the spreadsheet\n    Query.filterExpr = function(expression, options = { noEval: false }) {\n        if (options.noEval) {\n            // using no-eval for most cases\n            return filterExprNoEval(expression);\n        }\n\n        var expressions = [],\n            logic = { and: \" && \", or: \" || \" },\n            idx,\n            length,\n            filter,\n            expr,\n            fieldFunctions = [],\n            operatorFunctions = [],\n            field,\n            operator,\n            filters = expression.filters;\n\n        for (idx = 0, length = filters.length; idx < length; idx++) {\n            filter = filters[idx];\n            field = filter.field;\n            operator = filter.operator;\n\n            if (filter.filters) {\n                expr = Query.filterExpr(filter);\n                //Nested function fields or operators - update their index e.g. __o[0] -> __o[1]\n                filter = expr.expression\n                .replace(/__o\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__o[\" + (operatorFunctions.length + index) + \"]\";\n                })\n                .replace(/__f\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__f[\" + (fieldFunctions.length + index) + \"]\";\n                });\n\n                operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                fieldFunctions.push.apply(fieldFunctions, expr.fields);\n            } else {\n                if (typeof field === FUNCTION) {\n                    expr = \"__f[\" + fieldFunctions.length + \"](d)\";\n                    fieldFunctions.push(field);\n                } else {\n                    expr = kendo.expr(field);\n                }\n\n                if (typeof operator === FUNCTION) {\n                    filter = \"__o[\" + operatorFunctions.length + \"](\" + expr + \", \" + operators.quote(filter.value) + \")\";\n                    operatorFunctions.push(operator);\n                } else {\n                    filter = operators[(operator || \"eq\").toLowerCase()](expr, filter.value, filter.ignoreCase !== undefined$1 ? filter.ignoreCase : true, expression.accentFoldingFiltering);\n                }\n            }\n\n            expressions.push(filter);\n        }\n\n        return { expression: \"(\" + expressions.join(logic[expression.logic]) + \")\", fields: fieldFunctions, operators: operatorFunctions };\n    };\n\n    function normalizeSort(field, dir) {\n        if (field) {\n            var descriptor = typeof field === STRING ? { field: field, dir: dir } : field,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return grep(descriptors, function(d) { return !!d.dir; });\n        }\n    }\n\n    function sortFields(sorts, dir) {\n        var sortObject = {};\n\n        if (sorts) {\n            var descriptor = typeof sorts === STRING ? { field: sorts, dir: dir } : sorts,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            for (var i = 0; i < descriptors.length; i++) {\n                sortObject[descriptors[i].field] = { dir: descriptors[i].dir, index: i + 1 };\n            }\n        }\n\n        return sortObject;\n    }\n\n    var operatorMap = {\n        \"==\": \"eq\",\n        equals: \"eq\",\n        isequalto: \"eq\",\n        equalto: \"eq\",\n        equal: \"eq\",\n        \"!=\": \"neq\",\n        ne: \"neq\",\n        notequals: \"neq\",\n        isnotequalto: \"neq\",\n        notequalto: \"neq\",\n        notequal: \"neq\",\n        \"<\": \"lt\",\n        islessthan: \"lt\",\n        lessthan: \"lt\",\n        less: \"lt\",\n        \"<=\": \"lte\",\n        le: \"lte\",\n        islessthanorequalto: \"lte\",\n        lessthanequal: \"lte\",\n        \">\": \"gt\",\n        isgreaterthan: \"gt\",\n        greaterthan: \"gt\",\n        greater: \"gt\",\n        \">=\": \"gte\",\n        isgreaterthanorequalto: \"gte\",\n        greaterthanequal: \"gte\",\n        ge: \"gte\",\n        notsubstringof: \"doesnotcontain\",\n        isnull: \"isnull\",\n        isempty: \"isempty\",\n        isnotempty: \"isnotempty\"\n    };\n\n    function normalizeOperator(expression) {\n        var idx,\n        length,\n        filter,\n        operator,\n        filters = expression.filters;\n\n        if (filters) {\n            for (idx = 0, length = filters.length; idx < length; idx++) {\n                filter = filters[idx];\n                operator = filter.operator;\n\n                if (operator && typeof operator === STRING) {\n                    filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                }\n\n                normalizeOperator(filter);\n            }\n        }\n    }\n\n    function normalizeFilter(expression) {\n        if (expression && !isEmptyObject(expression)) {\n            if (isArray(expression) || !expression.filters) {\n                expression = {\n                    logic: \"and\",\n                    filters: isArray(expression) ? expression : [expression]\n                };\n            }\n\n            normalizeOperator(expression);\n\n            return expression;\n        }\n    }\n\n    Query.normalizeFilter = normalizeFilter;\n\n    function compareDescriptor(f1, f2) {\n        if (f1.logic || f2.logic) {\n            return false;\n        }\n\n        return f1.field === f2.field && f1.value === f2.value && f1.operator === f2.operator;\n    }\n\n    function normalizeDescriptor(filter) {\n        filter = filter || {};\n\n        if (isEmptyObject(filter)) {\n            return { logic: \"and\", filters: [] };\n        }\n\n        return normalizeFilter(filter);\n    }\n\n    function fieldComparer(a, b) {\n        if (b.logic || (a.field > b.field)) {\n            return 1;\n        } else if (a.field < b.field) {\n            return -1;\n        } else {\n            return 0;\n        }\n    }\n\n    function compareFilters(expr1, expr2) {\n        expr1 = normalizeDescriptor(expr1);\n        expr2 = normalizeDescriptor(expr2);\n\n        if (expr1.logic !== expr2.logic) {\n            return false;\n        }\n\n        var f1, f2;\n        var filters1 = (expr1.filters || []).slice();\n        var filters2 = (expr2.filters || []).slice();\n\n        if (filters1.length !== filters2.length) {\n            return false;\n        }\n\n        filters1 = filters1.sort(fieldComparer);\n        filters2 = filters2.sort(fieldComparer);\n\n        for (var idx = 0; idx < filters1.length; idx++) {\n            f1 = filters1[idx];\n            f2 = filters2[idx];\n\n            if (f1.logic && f2.logic) {\n                if (!compareFilters(f1, f2)) {\n                    return false;\n                }\n            } else if (!compareDescriptor(f1, f2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    Query.compareFilters = compareFilters;\n\n    function normalizeAggregate(expressions) {\n        return isArray(expressions) ? expressions : [expressions];\n    }\n\n    function normalizeGroup(field, dir, compare, skipItemSorting) {\n        var descriptor = typeof field === STRING ? { field: field, dir: dir, compare: compare, skipItemSorting: skipItemSorting } : field,\n        descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            return {\n                field: d.field,\n                dir: d.dir || \"asc\",\n                aggregates: d.aggregates,\n                compare: d.compare,\n                skipItemSorting: d.skipItemSorting\n            };\n        });\n    }\n\n    function normalizeGroupWithoutCompare(field, dir, compare) {\n        var descriptors = normalizeGroup(field, dir, compare);\n\n        for (var i = 0; i < descriptors.length; i++) {\n            delete descriptors[i].compare;\n        }\n\n        return descriptors;\n    }\n\n    function anyGroupDescriptorHasCompare(groupDescriptors) {\n        var descriptors = isArray(groupDescriptors) ? groupDescriptors : [groupDescriptors];\n\n        for (var i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] && isFunction(descriptors[i].compare)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    Query.prototype = {\n        toArray: function() {\n            return this.data;\n        },\n        range: function(index, count) {\n            return new Query(this.data.slice(index, index + count));\n        },\n        skip: function(count) {\n            return new Query(this.data.slice(count));\n        },\n        take: function(count) {\n            return new Query(this.data.slice(0, count));\n        },\n        select: function(selector) {\n            return new Query(map(this.data, selector));\n        },\n        order: function(selector, dir, inPlace) {\n            var sort = { dir: dir };\n\n            if (selector) {\n                if (selector.compare) {\n                    sort.compare = selector.compare;\n                } else {\n                    sort.field = selector;\n                }\n            }\n\n            if (inPlace) {\n                return new Query(this.data.sort(Comparer.create(sort)));\n            }\n\n            return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n        },\n        orderBy: function(selector, inPlace) {\n            return this.order(selector, \"asc\", inPlace);\n        },\n        orderByDescending: function(selector, inPlace) {\n            return this.order(selector, \"desc\", inPlace);\n        },\n        sort: function(field, dir, comparer, inPlace) {\n            var idx,\n            length,\n            descriptors = normalizeSort(field, dir),\n            comparers = [];\n\n            comparer = comparer || Comparer;\n\n            if (descriptors.length) {\n                for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                    comparers.push(comparer.create(descriptors[idx]));\n                }\n\n                return this.orderBy({ compare: comparer.combine(comparers) }, inPlace);\n            }\n\n            return this;\n        },\n\n        filter: function(expressions) {\n            var compiled,\n            data = this.data,\n            result = [];\n\n            expressions = normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                return this;\n            }\n\n            compiled = Query.filterExpr(expressions, { noEval: true });\n\n            result = data.filter(compiled);\n            return new Query(result);\n        },\n\n        group: function(descriptors, allData, options) {\n            descriptors = normalizeGroup(descriptors || []);\n            allData = allData || this.data;\n\n            var that = this,\n            result = new Query(that.data),\n            descriptor;\n\n            if (descriptors.length > 0) {\n                descriptor = descriptors[0];\n\n                if (options && options.groupPaging) {\n                    result = new Query(allData).groupAllData(descriptor, allData).select(function(group) {\n                        var data = new Query(allData).filter([{\n                            field: group.field,\n                            operator: \"eq\",\n                            value: group.value,\n                            ignoreCase: false\n                        }]);\n                        var items = descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray(), options).toArray() : group.items;\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            hasSubgroups: descriptors.length > 1,\n                            items: items,\n                            aggregates: data.aggregate(descriptor.aggregates),\n                            uid: kendo.guid(),\n                            itemCount: items.length,\n                            subgroupCount: items.length\n                        };\n                    });\n\n                } else {\n                    result = result.groupBy(descriptor).select(function(group) {\n                        var data = new Query(allData).filter([ { field: group.field, operator: \"eq\", value: group.value, ignoreCase: false } ]);\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            items: descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray()).toArray() : group.items,\n                            hasSubgroups: descriptors.length > 1,\n                            aggregates: data.aggregate(descriptor.aggregates)\n                        };\n                    });\n                }\n            }\n            return result;\n        },\n\n        groupBy: function(descriptor) {\n            var that = this;\n\n            if (isEmptyObject(descriptor) || !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? this.data : this._sortForGrouping(field, descriptor.dir || \"asc\"),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for (idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if (!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = that._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        groupAllData: function(descriptor, allData) {\n            if (isEmptyObject(descriptor) || this.data && !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? allData : new Query(allData).sort(field, descriptor.dir || \"asc\", StableComparer).toArray(),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for (idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if (!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = this._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        _sortForGrouping: function(field, dir) {\n            var idx, length,\n                data = this.data;\n\n            if (!stableSort) {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    data[idx].__position = idx;\n                }\n\n                data = new Query(data).sort(field, dir, StableComparer).toArray();\n\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    delete data[idx].__position;\n                }\n                return data;\n            }\n\n            return this.sort(field, dir).toArray();\n        },\n\n        _sortGroups: function(groups, descriptor) {\n            var result = groups;\n\n            if (descriptor && isFunction(descriptor.compare)) {\n                result = new Query(result).order({ compare: descriptor.compare }, descriptor.dir || ASCENDING).toArray();\n            }\n\n            return result;\n        },\n\n        aggregate: function(aggregates) {\n            var idx,\n                len,\n                result = {},\n                state = {};\n\n            if (aggregates && aggregates.length) {\n                for (idx = 0, len = this.data.length; idx < len; idx++) {\n                    calculateAggregate(result, aggregates, this.data[idx], idx, len, state);\n                }\n            }\n            return result;\n        }\n    };\n\n    function groupValueComparer(a, b) {\n        if (a && a.getTime && b && b.getTime) {\n            return a.getTime() === b.getTime();\n        }\n        return a === b;\n    }\n\n    function calculateAggregate(accumulator, aggregates, item, index, length, state) {\n        aggregates = aggregates || [];\n        var idx,\n            aggr,\n            functionName,\n            len = aggregates.length;\n\n        for (idx = 0; idx < len; idx++) {\n            aggr = aggregates[idx];\n            functionName = aggr.aggregate;\n            var field = aggr.field;\n            accumulator[field] = accumulator[field] || {};\n            state[field] = state[field] || {};\n            state[field][functionName] = state[field][functionName] || {};\n            accumulator[field][functionName] = functions[functionName.toLowerCase()](accumulator[field][functionName], item, kendo.accessor(field), index, length, state[field][functionName]);\n        }\n    }\n\n    var functions = {\n        sum: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(accumulator) {\n            return (accumulator || 0) + 1;\n        },\n        average: function(accumulator, item, accessor, index, length, state) {\n            var value = accessor.get(item);\n\n            if (state.count === undefined$1) {\n                state.count = 0;\n            }\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            if (isNumber(value)) {\n                state.count++;\n            }\n\n            if (index == length - 1 && isNumber(accumulator)) {\n                accumulator = accumulator / state.count;\n            }\n            return accumulator;\n        },\n        max: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function toJSON(array) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = array[idx].toJSON();\n        }\n\n        return result;\n    }\n\n    Query.normalizeGroup = normalizeGroup;\n    Query.normalizeSort = normalizeSort;\n\n    Query.process = function(data, options, inPlace) {\n        options = options || {};\n\n        var group = options.group;\n        var customGroupSort = anyGroupDescriptorHasCompare(normalizeGroup(group || []));\n        var query = new Query(data),\n            groupDescriptorsWithoutCompare = normalizeGroupWithoutCompare(group || []),\n            normalizedSort = normalizeSort(options.sort || []),\n            sort = customGroupSort ? normalizedSort : groupDescriptorsWithoutCompare.concat(normalizedSort),\n            groupDescriptorsWithoutSort,\n            total,\n            filterCallback = options.filterCallback,\n            filter = options.filter,\n            skip = options.skip,\n            take = options.take;\n\n        if (sort && inPlace) {\n            query = query.sort(sort, undefined$1, undefined$1, inPlace);\n        }\n\n        if (filter) {\n            query = query.filter(filter);\n\n            if (filterCallback) {\n                query = filterCallback(query);\n            }\n\n            total = query.toArray().length;\n        }\n\n        if (sort) {\n            if (!inPlace) {\n                query = query.sort(sort);\n            }\n\n            if (group) {\n                data = query.toArray();\n            }\n        }\n\n        if (customGroupSort) {\n            query = query.group(group, data, options);\n\n            if (skip !== undefined$1 && take !== undefined$1 && !options.groupPaging) {\n                query = new Query(flatGroups(query.toArray())).range(skip, take);\n\n                groupDescriptorsWithoutSort = map(groupDescriptorsWithoutCompare, function(groupDescriptor) {\n                    return extend({}, groupDescriptor, {\n                        skipItemSorting: true\n                    });\n                });\n\n                query = query.group(groupDescriptorsWithoutSort, data, options);\n            }\n        } else {\n            if (skip !== undefined$1 && take !== undefined$1) {\n                total = query.data.length;\n\n                if (skip + take > total && options.virtual) {\n                    skip -= skip + take - total;\n                    skip = skip < 0 ? 0 : skip;\n                }\n                query = query.range(skip, take);\n            }\n\n            if (group && (!isEmptyObject(group) || group.length !== 0)) {\n                query = query.group(group, data, options);\n            }\n        }\n\n        return {\n            total: total,\n            data: query.toArray()\n        };\n    };\n\n    var LocalTransport = Class.extend({\n        init: function(options) {\n            this.data = options.data;\n        },\n\n        read: function(options) {\n            options.success(this.data);\n        },\n        update: function(options) {\n            options.success(options.data);\n        },\n        create: function(options) {\n            options.success(options.data);\n        },\n        destroy: function(options) {\n            options.success(options.data);\n        }\n    });\n\n    var RemoteTransport = Class.extend( {\n        init: function(options) {\n            var that = this, parameterMap;\n\n            options = that.options = extend({}, that.options, options);\n\n            each(crud, function(index, type) {\n                if (typeof options[type] === STRING) {\n                    options[type] = {\n                        url: options[type]\n                    };\n                }\n            });\n\n            that.cache = options.cache ? Cache.create(options.cache) : {\n                find: noop,\n                add: noop\n            };\n\n            parameterMap = options.parameterMap;\n\n            if (options.submit) {\n                that.submit = options.submit;\n            }\n\n            if (isFunction(options.push)) {\n                that.push = options.push;\n            }\n\n            if (!that.push) {\n                that.push = identity;\n            }\n\n            that.parameterMap = isFunction(parameterMap) ? parameterMap : function(options) {\n                var result = {};\n\n                each(options, function(option, value) {\n                    if (option in parameterMap) {\n                        option = parameterMap[option];\n                        if (isPlainObject(option)) {\n                            value = option.value(value);\n                            option = option.key;\n                        }\n                    }\n\n                    result[option] = value;\n                });\n\n                return result;\n            };\n        },\n\n        options: {\n            parameterMap: identity\n        },\n\n        create: function(options) {\n            return ajax(this.setup(options, CREATE));\n        },\n\n        read: function(options) {\n            var that = this,\n                success,\n                error,\n                result,\n                cache = that.cache;\n\n            options = that.setup(options, READ);\n\n            success = options.success || noop;\n            error = options.error || noop;\n\n            result = cache.find(options.data);\n\n            if (result !== undefined$1) {\n                success(result);\n            } else {\n                options.success = function(result) {\n                    cache.add(options.data, result);\n\n                    success(result);\n                };\n\n                $.ajax(options);\n            }\n        },\n\n        update: function(options) {\n            return ajax(this.setup(options, UPDATE));\n        },\n\n        destroy: function(options) {\n            return ajax(this.setup(options, DESTROY));\n        },\n\n        setup: function(options, type) {\n            options = options || {};\n\n            var that = this,\n                parameters,\n                operation = that.options[type],\n                data = isFunction(operation.data) ? operation.data(options.data) : operation.data;\n\n            options = extend(true, {}, operation, options);\n            parameters = extend(true, {}, data, options.data);\n\n            options.data = that.parameterMap(parameters, type);\n\n            if (isFunction(options.url)) {\n                options.url = options.url(parameters);\n            }\n\n            return options;\n        }\n    });\n\n    var Cache = Class.extend({\n        init: function() {\n            this._store = {};\n        },\n        add: function(key, data) {\n            if (key !== undefined$1) {\n                this._store[stringify(key)] = data;\n            }\n        },\n        find: function(key) {\n            return this._store[stringify(key)];\n        },\n        clear: function() {\n            this._store = {};\n        },\n        remove: function(key) {\n            delete this._store[stringify(key)];\n        }\n    });\n\n    Cache.create = function(options) {\n        var store = {\n            \"inmemory\": function() { return new Cache(); }\n        };\n\n        if (isPlainObject(options) && isFunction(options.find)) {\n            return options;\n        }\n\n        if (options === true) {\n            return new Cache();\n        }\n\n        return store[options]();\n    };\n\n    function serializeRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            setters = {},\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                originalName = fieldNames[getter];\n\n                if (originalName && originalName !== getter) {\n                    if (!setters[originalName]) {\n                        setters[originalName] = kendo.setter(originalName);\n                    }\n                    setters[originalName](record, getters[getter](record));\n                    delete record[getter];\n                }\n            }\n        }\n    }\n\n    function convertRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                record[getter] = modelInstance._parse(getter, getters[getter](record));\n\n                originalName = fieldNames[getter];\n                if (originalName && originalName !== getter) {\n                    delete record[originalName];\n                }\n            }\n        }\n    }\n\n    function convertGroup(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            idx,\n            fieldName,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n\n            fieldName = originalFieldNames[record.field];\n            if (fieldName && fieldName != record.field) {\n                record.field = fieldName;\n            }\n\n            record.value = modelInstance._parse(record.field, record.value);\n\n            if (record.items) {\n                if (record.hasSubgroups) {\n                    convertGroup(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                } else {\n                    convertRecords(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                }\n            }\n        }\n    }\n\n    function wrapDataAccess(originalFunction, model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n            data = originalFunction(data);\n\n            return wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames)(data);\n        };\n    }\n\n    function wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n\n            if (data && !isEmptyObject(getters)) {\n                if (toString.call(data) !== \"[object Array]\" && !(data instanceof ObservableArray)) {\n                    data = [data];\n                }\n\n                converter(data, getters, new model(), originalFieldNames, fieldNames);\n            }\n\n            return data || [];\n        };\n    }\n\n    var DataReader = Class.extend({\n        init: function(schema) {\n            var that = this, member, get, model, base;\n\n            schema = schema || {};\n\n            for (member in schema) {\n                get = schema[member];\n\n                that[member] = typeof get === STRING ? getter(get) : get;\n            }\n\n            base = schema.modelBase || Model;\n\n            if (isPlainObject(that.model)) {\n                that.model = model = base.define(that.model);\n            }\n\n            var dataFunction = that.data.bind(that);\n\n            that._dataAccessFunction = dataFunction;\n\n            if (that.model) {\n                var groupsFunction = that.groups.bind(that),\n                    serializeFunction = that.serialize.bind(that),\n                    originalFieldNames = {},\n                    getters = {},\n                    serializeGetters = {},\n                    fieldNames = {},\n                    shouldSerialize = false,\n                    fieldName,\n                    name;\n\n                model = that.model;\n\n                if (model.fields) {\n                    each(model.fields, function(field, value) {\n                        var fromName;\n\n                        fieldName = field;\n\n                        if (isPlainObject(value) && value.field) {\n                            fieldName = value.field;\n                        } else if (typeof value === STRING) {\n                            fieldName = value;\n                        }\n\n                        if (isPlainObject(value) && value.from) {\n                            fromName = value.from;\n                        }\n\n                        shouldSerialize = shouldSerialize || (fromName && fromName !== field) || fieldName !== field;\n                        name = fromName || fieldName;\n                        getters[field] = name.indexOf(\".\") !== -1 ? getter(name, true) : getter(name);\n                        serializeGetters[field] = getter(field);\n                        originalFieldNames[fromName || fieldName] = field;\n                        fieldNames[field] = fromName || fieldName;\n                    });\n\n                    if (!schema.serialize && shouldSerialize) {\n                        that.serialize = wrapDataAccess(serializeFunction, model, serializeRecords, serializeGetters, originalFieldNames, fieldNames);\n                    }\n                }\n\n                that._dataAccessFunction = dataFunction;\n                that._wrapDataAccessBase = wrapDataAccessBase(model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.data = wrapDataAccess(dataFunction, model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.groups = wrapDataAccess(groupsFunction, model, convertGroup, getters, originalFieldNames, fieldNames);\n            }\n        },\n        errors: function(data) {\n            return data ? data.errors : null;\n        },\n        parse: identity,\n        data: identity,\n        total: function(data) {\n            return data.length;\n        },\n        groups: identity,\n        aggregates: function() {\n            return {};\n        },\n        serialize: function(data) {\n            return data;\n        }\n    });\n\n    function fillLastGroup(originalGroup, newGroup) {\n        var currOriginal;\n        var currentNew;\n\n        if (newGroup.items && newGroup.items.length) {\n            for (var i = 0; i < newGroup.items.length; i++) {\n                currOriginal = originalGroup.items[originalGroup.items.length - 1];\n                currentNew = newGroup.items[i];\n                if (currOriginal && currentNew) {\n                    if (currOriginal.hasSubgroups && currOriginal.value == currentNew.value) {\n                        fillLastGroup(currOriginal, currentNew);\n                    } else if (currOriginal.field && currOriginal.value == currentNew.value) {\n                        currOriginal.items.omitChangeEvent = true;\n                        currOriginal.items.push.apply(currOriginal.items, currentNew.items);\n                        currOriginal.items.omitChangeEvent = false;\n                    } else {\n                        originalGroup.items.omitChangeEvent = true;\n                        originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                        originalGroup.items.omitChangeEvent = false;\n                    }\n                } else if (currentNew) {\n                    originalGroup.items.omitChangeEvent = true;\n                    originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                    originalGroup.items.omitChangeEvent = false;\n                }\n            }\n        }\n    }\n    function mergeGroups(target, dest, skip, take) {\n        var group,\n            idx = 0,\n            items;\n\n        while (dest.length && take) {\n            group = dest[idx];\n            items = group.items;\n\n            var length = items.length;\n\n            if (target && target.field === group.field && target.value === group.value) {\n                if (target.hasSubgroups && target.items.length) {\n                    mergeGroups(target.items[target.items.length - 1], group.items, skip, take);\n                } else {\n                    items = items.slice(skip, skip + take);\n                    target.items = target.items.concat(items);\n                }\n                dest.splice(idx--, 1);\n            } else if (group.hasSubgroups && items.length) {\n                mergeGroups(group, items, skip, take);\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            } else {\n                items = items.slice(skip, skip + take);\n                group.items = items;\n\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            }\n\n            if (items.length === 0) {\n                skip -= length;\n            } else {\n                skip = 0;\n                take -= items.length;\n            }\n\n            if (++idx >= dest.length) {\n                break;\n            }\n        }\n\n        if (idx < dest.length) {\n            dest.splice(idx, dest.length - idx);\n        }\n    }\n\n    function flatGroups(groups, indexFunction) {\n        var result = [];\n        var groupsLength = (groups || []).length;\n        var group;\n        var items;\n        var indexFn = isFunction(indexFunction) ? indexFunction : function(array, index) {\n            return array[index];\n        };\n\n        for (var groupIndex = 0; groupIndex < groupsLength; groupIndex++) {\n            group = indexFn(groups, groupIndex);\n\n            if (group.hasSubgroups) {\n                result = result.concat(flatGroups(group.items));\n            } else {\n                items = group.items;\n\n                for (var itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                    result.push(indexFn(items, itemIndex));\n                }\n            }\n        }\n        return result;\n    }\n\n    function flattenGroups(data) {\n        var idx,\n            result = [],\n            length,\n            items,\n            itemIndex;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            var group = data.at(idx);\n            if (group.items) {\n                if (group.hasSubgroups) {\n                    result = result.concat(flattenGroups(group.items));\n                } else {\n                    items = group.items;\n                    for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                        result.push(items.at(itemIndex));\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    function wrapGroupItems(data, model) {\n        var idx, length, group;\n        if (model) {\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                group = data.at(idx);\n                if (group.items) {\n                    if (group.hasSubgroups) {\n                        wrapGroupItems(group.items, model);\n                    } else {\n                        group.items = new LazyObservableArray(group.items, model, group.items._events);\n                    }\n                }\n            }\n        }\n    }\n\n    function eachGroupItems(data, func) {\n        for (var idx = 0; idx < data.length; idx++) {\n            if (data[idx].hasSubgroups) {\n                if (eachGroupItems(data[idx].items, func)) {\n                    return true;\n                }\n            } else if (func(data[idx].items, data[idx])) {\n                return true;\n            }\n        }\n    }\n\n    function replaceInRanges(ranges, data, item, observable) {\n        for (var idx = 0; idx < ranges.length; idx++) {\n            if (ranges[idx].data === data) {\n                break;\n            }\n            if (replaceInRange(ranges[idx].data, item, observable)) {\n                break;\n            }\n        }\n    }\n\n    function replaceInRange(items, item, observable) {\n        for (var idx = 0, length = items.length; idx < length; idx++) {\n            if (items[idx] && items[idx].hasSubgroups) {\n                return replaceInRange(items[idx].items, item, observable);\n            } else if (items[idx] === item || items[idx] === observable) {\n               items[idx] = observable;\n               return true;\n            }\n        }\n    }\n\n    function replaceWithObservable(view, data, ranges, type, serverGrouping) {\n        for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n            var item = view[viewIndex];\n\n            if (!item || item instanceof type) {\n                continue;\n            }\n\n            if (item.hasSubgroups !== undefined$1 && !serverGrouping) {\n                replaceWithObservable(item.items, data, ranges, type, serverGrouping);\n            } else {\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (data[idx] === item) {\n                        view[viewIndex] = data.at(idx);\n                        replaceInRanges(ranges, data, item, view[viewIndex]);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function removeModel(data, model) {\n        if (!data) {\n            return;\n        }\n        var length = data.length;\n        var dataItem;\n        var idx;\n\n        for (idx = 0; idx < length; idx++) {\n            dataItem = data[idx];\n\n            if (dataItem.uid && dataItem.uid == model.uid) {\n                data.splice(idx, 1);\n                return dataItem;\n            }\n        }\n    }\n\n    function indexOfPristineModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return (item.uid && item.uid == model.uid) || (item[model.idField] === model.id && model.id !== model._defaultId);\n            });\n        }\n        return -1;\n    }\n\n    function indexOfModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return item.uid == model.uid;\n            });\n        }\n        return -1;\n    }\n\n    function indexOf(data, comparer) {\n        var idx, length;\n        if (!data) {\n            return;\n        }\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            if (comparer(data[idx])) {\n                return idx;\n            }\n        }\n\n        return -1;\n    }\n\n    function fieldNameFromModel(fields, name) {\n        if (fields && !isEmptyObject(fields)) {\n            var descriptor = fields[name];\n            var fieldName;\n            if (isPlainObject(descriptor)) {\n                fieldName = descriptor.from || descriptor.field || name;\n            } else {\n                fieldName = fields[name] || name;\n            }\n\n            if (isFunction(fieldName)) {\n                return name;\n            }\n\n            return fieldName;\n        }\n        return name;\n    }\n\n    function convertFilterDescriptorsField(descriptor, model) {\n        var idx,\n            length,\n            target = {};\n\n        for (var field in descriptor) {\n            if (field !== \"filters\") {\n                target[field] = descriptor[field];\n            }\n        }\n\n        if (descriptor.filters) {\n            target.filters = [];\n            for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[idx], model);\n            }\n        } else {\n            target.field = fieldNameFromModel(model.fields, target.field);\n        }\n        return target;\n    }\n\n    function convertDescriptorsField(descriptors, model) {\n        var idx,\n            length,\n            result = [],\n            target,\n            descriptor;\n\n        for (idx = 0, length = descriptors.length; idx < length; idx ++) {\n            target = {};\n\n            descriptor = descriptors[idx];\n\n            for (var field in descriptor) {\n                target[field] = descriptor[field];\n            }\n\n            target.field = fieldNameFromModel(model.fields, target.field);\n\n            if (target.aggregates && isArray(target.aggregates)) {\n                target.aggregates = convertDescriptorsField(target.aggregates, model);\n            }\n            result.push(target);\n        }\n        return result;\n    }\n\n    var DataSource = Observable.extend({\n        init: function(options) {\n            var that = this, model, data;\n\n            if (options) {\n                data = options.data;\n            }\n\n            options = that.options = extend({}, that.options, options);\n\n            that._map = {};\n            that._prefetch = {};\n            that._data = [];\n            that._pristineData = [];\n            that._ranges = [];\n            that._view = [];\n            that._pristineTotal = 0;\n            that._destroyed = [];\n            that._pageSize = options.pageSize;\n            that._page = options.page || (options.pageSize ? 1 : undefined$1);\n            that._sort = normalizeSort(options.sort);\n            that._sortFields = sortFields(options.sort);\n            that._filter = normalizeFilter(options.filter);\n            that._group = normalizeGroup(options.group);\n            that._aggregate = options.aggregate;\n            that._total = options.total;\n            that._groupPaging = options.groupPaging;\n\n            if (that._groupPaging) {\n                that._groupsState = {};\n            }\n            that._shouldDetachObservableParents = true;\n\n            Observable.fn.init.call(that);\n\n            that.transport = Transport.create(options, data, that);\n\n            if (isFunction(that.transport.push)) {\n                that.transport.push({\n                    pushCreate: that._pushCreate.bind(that),\n                    pushUpdate: that._pushUpdate.bind(that),\n                    pushDestroy: that._pushDestroy.bind(that)\n                });\n            }\n\n            if (options.offlineStorage != null) {\n                if (typeof options.offlineStorage == \"string\") {\n                    var key = options.offlineStorage;\n\n                    that._storage = {\n                        getItem: function() {\n                            return JSON.parse(localStorage.getItem(key));\n                        },\n                        setItem: function(item) {\n                            localStorage.setItem(key, stringify(that.reader.serialize(item)));\n                        }\n                    };\n                } else {\n                    that._storage = options.offlineStorage;\n                }\n            }\n\n            that.reader = new kendo.data.readers[options.schema.type || \"json\" ](options.schema);\n\n            model = that.reader.model || {};\n\n            that._detachObservableParents();\n\n            that._data = that._observe(that._data);\n            that._online = true;\n\n            that.bind([\"push\", ERROR, CHANGE, REQUESTSTART, SYNC, REQUESTEND, PROGRESS], options);\n        },\n\n        options: {\n            data: null,\n            schema: {\n               modelBase: Model\n            },\n            offlineStorage: null,\n            serverSorting: false,\n            serverPaging: false,\n            serverFiltering: false,\n            serverGrouping: false,\n            serverAggregates: false,\n            batch: false,\n            inPlaceSort: false\n        },\n\n        clone: function() {\n            return this;\n        },\n\n        online: function(value) {\n            if (value !== undefined$1) {\n                if (this._online != value) {\n                    this._online = value;\n\n                    if (value) {\n                        return this.sync();\n                    }\n                }\n\n                return $.Deferred().resolve().promise();\n            } else {\n                return this._online;\n            }\n        },\n\n        offlineData: function(state) {\n            if (this.options.offlineStorage == null) {\n                return null;\n            }\n\n            if (state !== undefined$1) {\n                return this._storage.setItem(state);\n            }\n\n            return this._storage.getItem() || [];\n        },\n\n        _isGrouped: function() {\n            var group = this.group() || [];\n\n            return group.length;\n        },\n\n        _isServerGrouped: function() {\n            var group = this.group() || [];\n\n            return this.options.serverGrouping && group.length;\n        },\n\n        _isServerGroupPaged: function() {\n            return this._isServerGrouped() && this._groupPaging;\n        },\n\n        _isGroupPaged: function() {\n            var group = this._group || [];\n\n            return this._groupPaging && group.length;\n        },\n\n        _pushCreate: function(result) {\n            this._push(result, \"pushCreate\");\n        },\n\n        _pushUpdate: function(result) {\n            this._push(result, \"pushUpdate\");\n        },\n\n        _pushDestroy: function(result) {\n            this._push(result, \"pushDestroy\");\n        },\n\n        _push: function(result, operation) {\n            var data = this._readData(result);\n\n            if (!data) {\n                data = result;\n            }\n\n            this[operation](data);\n        },\n\n        _flatData: function(data, skip) {\n            if (data) {\n                if (this._isServerGrouped()) {\n                    return flattenGroups(data);\n                }\n\n                if (!skip) {\n                    for (var idx = 0; idx < data.length; idx++) {\n                        data.at(idx);\n                    }\n                }\n            }\n\n            return data;\n        },\n\n        parent: noop,\n\n        get: function(id) {\n            var idx, length, data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].id == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        getByUid: function(id) {\n            return this._getByUid(id, this._data);\n        },\n\n        _getByUid: function(id, dataItems) {\n            var idx, length, data = this._flatData(dataItems, this.options.useRanges);\n\n            if (!data) {\n                return;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].uid == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        indexOf: function(model) {\n            return indexOfModel(this._data, model);\n        },\n\n        at: function(index) {\n            return this._data.at(index);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined$1) {\n                that._detachObservableParents();\n                that._data = this._observe(value);\n\n                that._pristineData = value.slice(0);\n\n                that._storeData();\n\n                that._ranges = [];\n                that.trigger(\"reset\");\n                that._addRange(that._data);\n\n                that._total = that._data.length;\n                that._pristineTotal = that._total;\n\n                that._process(that._data);\n            } else {\n                if (that._data) {\n                    for (var idx = 0; idx < that._data.length; idx++) {\n                        that._data.at(idx);\n                    }\n                }\n\n                return that._data;\n            }\n        },\n\n        view: function(value) {\n            if (value === undefined$1) {\n                return this._view;\n            } else {\n                this._view = this._observeView(value);\n            }\n        },\n\n        _observeView: function(data) {\n            var that = this;\n            replaceWithObservable(data, that._data, that._ranges, that.reader.model || ObservableObject, that._isServerGrouped());\n\n            var view = new LazyObservableArray(data, that.reader.model);\n            view.parent = function() { return that.parent(); };\n            return view;\n        },\n\n        flatView: function() {\n            var groups = this.group() || [];\n\n            if (groups.length) {\n                return flattenGroups(this._view);\n            } else {\n                return this._view;\n            }\n        },\n\n        add: function(model) {\n            return this.insert(this._data.length, model);\n        },\n\n        _createNewModel: function(model) {\n            if (this.reader.model) {\n                return new this.reader.model(model);\n            }\n\n            if (model instanceof ObservableObject) {\n                return model;\n            }\n\n            return new ObservableObject(model);\n        },\n\n        insert: function(index, model) {\n            if (!model) {\n                model = index;\n                index = 0;\n            }\n\n            if (!(model instanceof Model)) {\n                model = this._createNewModel(model);\n            }\n\n            if (this._isServerGrouped()) {\n                this._data.splice(index, 0, this._wrapInEmptyGroup(model));\n            } else {\n                this._data.splice(index, 0, model);\n            }\n\n            this._insertModelInRange(index, model);\n\n            return model;\n        },\n\n        pushInsert: function(index, items) {\n            var that = this;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            if (!items) {\n                items = index;\n                index = 0;\n            }\n\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var idx = 0; idx < items.length; idx ++) {\n                    var item = items[idx];\n\n                    var result = this.insert(index, item);\n\n                    pushed.push(result);\n\n                    var pristine = result.toJSON();\n\n                    if (this._isServerGrouped()) {\n                        pristine = this._wrapInEmptyGroup(pristine);\n                    }\n\n                    this._pristineData.push(pristine);\n\n                    if (rangeSpan && rangeSpan.length) {\n                        $(rangeSpan).last()[0].pristineData.push(pristine);\n                    }\n\n                    index++;\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"create\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushCreate: function(items) {\n            this.pushInsert(this._data.length, items);\n        },\n\n        pushUpdate: function(items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n\n            for (var idx = 0; idx < items.length; idx ++) {\n                var item = items[idx];\n                var model = this._createNewModel(item);\n\n                var target = this.get(model.id);\n\n                if (target) {\n                    pushed.push(target);\n\n                    target.accept(item);\n\n                    target.trigger(CHANGE);\n\n                    this._updatePristineForModel(target, item);\n                } else {\n                    this.pushCreate(item);\n                }\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushDestroy: function(items) {\n            var pushed = this._removeItems(items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"destroy\",\n                    items: pushed\n                });\n            }\n        },\n\n        _removeItems: function(items, removePristine) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var shouldRemovePristine = typeof removePristine !== \"undefined\" ? removePristine : true;\n\n            var destroyed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n            try {\n                for (var idx = 0; idx < items.length; idx ++) {\n                    var item = items[idx];\n                    var model = this._createNewModel(item);\n                    var found = false;\n\n                    this._eachItem(this._data, function(items) {\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items.at(idx);\n                            if (item.id === model.id) {\n                                destroyed.push(item);\n                                items.splice(idx, 1);\n                                found = true;\n                                break;\n                            }\n                        }\n                    });\n\n                    if (found && shouldRemovePristine) {\n                        this._removePristineForModel(model);\n                        this._destroyed.pop();\n                    }\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return destroyed;\n        },\n\n        pushMove: function(index, items) {\n            var pushed = this._moveItems(index, items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        _moveItems: function(index, items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var moved = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var i = 0; i < items.length; i ++) {\n                    var item = items[i];\n                    var model = this._createNewModel(item);\n\n                    this._eachItem(this._data, function(dataItems) {\n                        for (var idx = 0; idx < dataItems.length; idx++) {\n                            var dataItem = dataItems.at(idx);\n                            if (dataItem.id === model.id) {\n                                moved.push(dataItem);\n                                dataItems.splice(index >= idx ? --index : index, 0, dataItems.splice(idx, 1)[0]);\n                                index++;\n                                break;\n                            }\n                        }\n                    });\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return moved;\n        },\n\n        remove: function(model) {\n            var result,\n                that = this,\n                hasGroups = that._isServerGrouped();\n\n            if (hasGroups && model.uid && (!model.isNew || !model.isNew())) {\n                that._pushInDestroyed(model);\n            }\n\n            this._eachItem(that._data, function(items) {\n                result = removeModel(items, model);\n\n                if (result && hasGroups) {\n                    return true;\n                }\n            });\n\n            this._removeModelFromRanges(model);\n\n            return model;\n        },\n\n        destroyed: function() {\n            return this._destroyed;\n        },\n\n        created: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].isNew && data[idx].isNew() && !data[idx].notFetched) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        updated: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && !data[idx].isNew()) && data[idx].dirty) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        sync: function() {\n            var that = this,\n                created = [],\n                updated = [],\n                destroyed = that._destroyed;\n\n            var promise = $.Deferred().resolve().promise();\n\n            if (that.online()) {\n\n                if (!that.reader.model) {\n                    return promise;\n                }\n\n                created = that.created();\n                updated = that.updated();\n\n                var promises = [];\n\n                if (that.options.batch && that.transport.submit) {\n                    promises = that._sendSubmit(created, updated, destroyed);\n                } else {\n                    promises.push.apply(promises, that._send(\"create\", created));\n                    promises.push.apply(promises, that._send(\"update\", updated));\n                    promises.push.apply(promises, that._send(\"destroy\", destroyed));\n                }\n\n                promise = $.when\n                 .apply(null, promises)\n                 .then(function() {\n                    var idx, length;\n\n                    for (idx = 0, length = arguments.length; idx < length; idx++) {\n                        if (arguments[idx]) {\n                            that._accept(arguments[idx]);\n                        }\n                    }\n\n                    that._storeData(true);\n\n                    that._syncEnd();\n\n                    that._change({ action: \"sync\" });\n\n                    that.trigger(SYNC);\n\n                    if (that._isServerGroupPaged()) {\n                        that.read();\n                    }\n                });\n            } else {\n                that._storeData(true);\n\n                that._syncEnd();\n\n                that._change({ action: \"sync\" });\n            }\n\n            return promise;\n        },\n\n        _syncEnd: noop,\n\n        cancelChanges: function(model) {\n            var that = this;\n\n            if (model instanceof kendo.data.Model) {\n                that._cancelModel(model);\n            } else {\n                that._destroyed = [];\n                that._detachObservableParents();\n                that._data = that._observe(that._pristineData);\n                if (that.options.serverPaging) {\n                    that._total = that._pristineTotal;\n                }\n\n                that._ranges = [];\n                that._addRange(that._data, 0);\n\n                that._changesCanceled();\n\n                that._change();\n\n                that._markOfflineUpdatesAsDirty();\n\n                if (that._isServerGrouped()) {\n                    that.read();\n                }\n            }\n        },\n\n        _changesCanceled: noop,\n\n        _markOfflineUpdatesAsDirty: function() {\n            var that = this;\n\n            if (that.options.offlineStorage != null) {\n                that._eachItem(that._data, function(items) {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items.at(idx);\n                        if (item.__state__ == \"update\" || item.__state__ == \"create\") {\n                            item.dirty = true;\n                        }\n                    }\n                });\n            }\n        },\n\n        hasChanges: function() {\n            var idx,\n                length,\n                data = this._flatData(this._data, this.options.useRanges);\n\n            if (this._destroyed.length) {\n                return true;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && data[idx].isNew()) || data[idx].dirty) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _accept: function(result) {\n            var that = this,\n                models = result.models,\n                response = result.response,\n                idx = 0,\n                serverGroup = that._isServerGrouped(),\n                pristine = that._pristineData,\n                type = result.type,\n                length;\n\n            that.trigger(REQUESTEND, { response: response, type: type });\n\n            if (response && !isEmptyObject(response)) {\n                response = that.reader.parse(response);\n\n                if (that._handleCustomErrors(response)) {\n                    return;\n                }\n\n                response = that.reader.data(response);\n\n                if (!isArray(response)) {\n                    response = [response];\n                }\n            } else {\n                response = $.map(models, function(model) { return model.toJSON(); } );\n            }\n\n            if (type === \"destroy\") {\n                that._destroyed = [];\n            }\n\n            for (idx = 0, length = models.length; idx < length; idx++) {\n                if (type !== \"destroy\") {\n                    models[idx].accept(response[idx]);\n\n                    if (type === \"create\") {\n                        pristine.push(serverGroup ? that._wrapInEmptyGroup(models[idx].toJSON()) : response[idx]);\n                    } else if (type === \"update\") {\n                        that._updatePristineForModel(models[idx], response[idx]);\n                    }\n                } else {\n                    that._removePristineForModel(models[idx]);\n                }\n            }\n        },\n\n        _updatePristineForModel: function(model, values) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                kendo.deepExtend(items[index], values);\n            });\n        },\n\n        _executeOnPristineForModel: function(model, callback) {\n            this._eachPristineItem(\n                function(items) {\n                    var index = indexOfPristineModel(items, model);\n                    if (index > -1) {\n                        callback(index, items);\n                        return true;\n                    }\n                });\n        },\n\n        _removePristineForModel: function(model) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                items.splice(index, 1);\n            });\n        },\n\n        _readData: function(data) {\n            var read = !this._isServerGrouped() ? this.reader.data : this.reader.groups;\n            return read.call(this.reader, data);\n        },\n\n        _eachPristineItem: function(callback) {\n            var that = this;\n            var options = that.options;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            that._eachItem(that._pristineData, callback);\n\n            if (options.serverPaging && options.useRanges) {\n                each(rangeSpan, function(i, range) {\n                    that._eachItem(range.pristineData, callback);\n                });\n            }\n        },\n\n       _eachItem: function(data, callback) {\n            if (data && data.length) {\n                if (this._isServerGrouped()) {\n                    eachGroupItems(data, callback);\n                } else {\n                    callback(data);\n                }\n            }\n        },\n\n        _pristineForModel: function(model) {\n            var pristine,\n                idx,\n                callback = function(items) {\n                    idx = indexOfPristineModel(items, model);\n                    if (idx > -1) {\n                        pristine = items[idx];\n                        return true;\n                    }\n                };\n\n            this._eachPristineItem(callback);\n\n            return pristine;\n        },\n\n        _cancelModel: function(model) {\n            var that = this;\n            var pristine = this._pristineForModel(model);\n\n            this._eachItem(this._data, function(items) {\n                var idx = indexOfModel(items, model);\n                if (idx >= 0) {\n                    if (pristine && (!model.isNew() || pristine.__state__)) {\n                        items[idx].accept(pristine);\n\n                        if (pristine.__state__ == \"update\") {\n                            items[idx].dirty = true;\n                        }\n\n                    } else {\n                        that._modelCanceled(model);\n\n                        items.splice(idx, 1);\n\n                        that._removeModelFromRanges(model);\n                    }\n                }\n            });\n        },\n\n        _modelCanceled: noop,\n\n        _submit: function(promises, data) {\n            var that = this;\n\n            that.trigger(REQUESTSTART, { type: \"submit\" });\n\n            that.trigger(PROGRESS);\n\n            that.transport.submit(extend({\n                success: function(response, type) {\n                    var promise = $.grep(promises, function(x) {\n                        return x.type == type;\n                    })[0];\n\n                    if (promise) {\n                        promise.resolve({\n                            response: response,\n                            models: promise.models,\n                            type: type\n                        });\n                    }\n                },\n                error: function(response, status, error) {\n                    for (var idx = 0; idx < promises.length; idx++) {\n                        promises[idx].reject(response);\n                    }\n\n                    that.error(response, status, error);\n                }\n            }, data));\n        },\n\n        _sendSubmit: function(created, updated, destroyed) {\n            var that = this,\n                promises = [];\n\n            if (that.options.batch) {\n                if (created.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"create\";\n                        deferred.models = created;\n                    }));\n                }\n\n                if (updated.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"update\";\n                        deferred.models = updated;\n                    }));\n                }\n\n                if (destroyed.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"destroy\";\n                        deferred.models = destroyed;\n                    }));\n                }\n\n                that._submit(promises, {\n                    data: {\n                        created: that.reader.serialize(toJSON(created)),\n                        updated: that.reader.serialize(toJSON(updated)),\n                        destroyed: that.reader.serialize(toJSON(destroyed))\n                    }\n                });\n            }\n\n            return promises;\n        },\n\n        _promise: function(data, models, type) {\n            var that = this;\n\n            return $.Deferred(function(deferred) {\n                that.trigger(REQUESTSTART, { type: type });\n\n                that.trigger(PROGRESS);\n\n                that.transport[type].call(that.transport, extend({\n                    success: function(response) {\n                        deferred.resolve({\n                            response: response,\n                            models: models,\n                            type: type\n                        });\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, data));\n            }).promise();\n        },\n\n        _send: function(method, data) {\n            var that = this,\n                idx,\n                length,\n                promises = [],\n                converted = that.reader.serialize(toJSON(data));\n\n            if (that.options.batch) {\n                if (data.length) {\n                    promises.push(that._promise( { data: { models: converted } }, data , method));\n                }\n            } else {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    promises.push(that._promise( { data: converted[idx] }, [ data[idx] ], method));\n                }\n            }\n\n            return promises;\n        },\n\n        read: function(data) {\n            var that = this, params = that._params(data);\n            var deferred = $.Deferred();\n\n            that._queueRequest(params, function() {\n                var isPrevented = that.trigger(REQUESTSTART, { type: \"read\" });\n                if (!isPrevented) {\n                    that.trigger(PROGRESS);\n\n                    that._ranges = [];\n                    that.trigger(\"reset\");\n                    if (that.online()) {\n                        that.transport.read({\n                            data: params,\n                            success: function(data) {\n                                that._ranges = [];\n                                that.success(data, params);\n\n                                deferred.resolve();\n                            },\n                            error: function() {\n                                var args = slice.call(arguments);\n\n                                that.error.apply(that, args);\n\n                                deferred.reject.apply(deferred, args);\n                            }\n                        });\n                    } else if (that.options.offlineStorage != null) {\n                        that.success(that.offlineData(), params);\n\n                        deferred.resolve();\n                    }\n                } else {\n                    that._dequeueRequest();\n\n                    deferred.resolve(isPrevented);\n                }\n            });\n\n            return deferred.promise();\n        },\n\n        _readAggregates: function(data) {\n            return this.reader.aggregates(data);\n        },\n\n        success: function(data) {\n            var that = this,\n                options = that.options,\n                items,\n                replaceSubset;\n\n            that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n            if (that.online()) {\n                data = that.reader.parse(data);\n\n                if (that._handleCustomErrors(data)) {\n                    that._dequeueRequest();\n                    return;\n                }\n\n                that._total = that.reader.total(data);\n\n                if (that._isServerGroupPaged()) {\n                    that._serverGroupsTotal = that._total;\n                }\n\n                if (that._pageSize > that._total) {\n                    that._pageSize = that._total;\n                    if (that.options.pageSize && that.options.pageSize > that._pageSize) {\n                        that._pageSize = that.options.pageSize;\n                    }\n                }\n\n                if (that._aggregate && options.serverAggregates) {\n                    that._aggregateResult = that._readAggregates(data);\n                }\n\n                data = that._readData(data);\n\n                that._destroyed = [];\n            } else {\n                data = that._readData(data);\n\n                items = [];\n                var itemIds = {};\n                var model = that.reader.model;\n                var idField = model ? model.idField : \"id\";\n                var idx;\n\n                for (idx = 0; idx < this._destroyed.length; idx++) {\n                    var id = this._destroyed[idx][idField];\n                    itemIds[id] = id;\n                }\n\n                for (idx = 0; idx < data.length; idx++) {\n                    var item = data[idx];\n                    var state = item.__state__;\n                    if (state == \"destroy\") {\n                        if (!itemIds[item[idField]]) {\n                            this._pushInDestroyed(this._createNewModel(item));\n                        }\n                    } else {\n                        items.push(item);\n                    }\n                }\n\n                data = items;\n\n                that._total = data.length;\n            }\n\n            that._pristineTotal = that._total;\n            replaceSubset = that._skip && that._data.length && that._skip < that._data.length;\n\n            if (that.options.endless) {\n                if (replaceSubset) {\n                    that._pristineData.splice(that._skip, that._pristineData.length);\n                }\n                items = data.slice(0);\n                for (var j = 0; j < items.length; j++) {\n                    that._pristineData.push(items[j]);\n                }\n            } else {\n                that._pristineData = data.slice(0);\n            }\n\n            that._detachObservableParents();\n\n            if (that.options.endless) {\n                that._data.unbind(CHANGE, that._changeHandler);\n\n                if (that._isServerGrouped() && that._data[that._data.length - 1].value === data[0].value) {\n                    fillLastGroup(that._data[that._data.length - 1], data[0]);\n                    data.shift();\n                }\n\n                data = that._observe(data);\n                if (replaceSubset) {\n                    that._data.splice(that._skip, that._data.length);\n                }\n                for (var i = 0; i < data.length; i++) {\n                    that._data.push(data[i]);\n                }\n                that._data.bind(CHANGE, that._changeHandler);\n            } else {\n                that._data = that._observe(data);\n            }\n\n            that._markOfflineUpdatesAsDirty();\n\n            that._storeData();\n\n            that._addRange(that._data);\n\n            that._process(that._data);\n\n            that._dequeueRequest();\n        },\n\n        _detachObservableParents: function() {\n            if (this._data && this._shouldDetachObservableParents) {\n                for (var idx = 0; idx < this._data.length; idx++) {\n                    if (this._data[idx].parent) {\n                        this._data[idx].parent = noop;\n                    }\n                }\n            }\n        },\n\n        _storeData: function(updatePristine) {\n            var serverGrouping = this._isServerGrouped();\n            var model = this.reader.model;\n\n            function items(data) {\n                var state = [];\n\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data.at(idx);\n                    var item = dataItem.toJSON();\n\n                    if (serverGrouping && dataItem.items) {\n                        item.items = items(dataItem.items);\n                    } else {\n                        item.uid = dataItem.uid;\n\n                        if (model) {\n                            if (dataItem.isNew()) {\n                                item.__state__ = \"create\";\n                            } else if (dataItem.dirty) {\n                                item.__state__ = \"update\";\n                            }\n                        }\n                    }\n                    state.push(item);\n                }\n\n                return state;\n            }\n\n            if (this.options.offlineStorage != null) {\n                var state = items(this._data);\n\n                var destroyed = [];\n\n                for (var idx = 0; idx < this._destroyed.length; idx++) {\n                    var item = this._destroyed[idx].toJSON();\n                    item.__state__ = \"destroy\";\n                    destroyed.push(item);\n                }\n\n                this.offlineData(state.concat(destroyed));\n\n                if (updatePristine) {\n                    this._pristineData = this.reader.reader ? this.reader.reader._wrapDataAccessBase(state) : this.reader._wrapDataAccessBase(state);\n                }\n            }\n        },\n\n        _addRange: function(data, skip) {\n            var that = this,\n                start = typeof (skip) !== \"undefined\" ? skip : (that._skip || 0),\n                end,\n                range = {\n                    data: data,\n                    pristineData: data.toJSON(),\n                    timestamp: that._timeStamp()\n                };\n\n            if (this._isGroupPaged()) {\n                end = start + data.length;\n                range.outerStart = start;\n                range.outerEnd = end;\n            } else {\n                end = start + that._flatData(data, true).length;\n            }\n\n            range.start = start;\n            range.end = end;\n            that._ranges.push(range);\n            that._sortRanges();\n\n            if (that._isGroupPaged()) {\n                if (!that._groupsFlat) {\n                    that._groupsFlat = [];\n                }\n                that._appendToGroupsFlat(range.data);\n                that._updateOuterRangesLength();\n            }\n        },\n\n        _appendToGroupsFlat: function(data) {\n            var length = data.length;\n\n            for (var i = 0; i < length; i++) {\n                this._groupsFlat.push(data[i]);\n            }\n        },\n\n        _getGroupByUid: function(uid) {\n            var length = this._groupsFlat.length;\n            var group;\n\n            for (var i = 0; i < length; i++) {\n                group = this._groupsFlat[i];\n                if (group.uid === uid) {\n                    return group;\n                }\n            }\n        },\n\n        _sortRanges: function() {\n            this._ranges.sort(function(x, y) {\n                return x.start - y.start;\n            });\n        },\n\n        error: function(xhr, status, errorThrown) {\n            this._dequeueRequest();\n            this.trigger(REQUESTEND, { });\n            this.trigger(ERROR, { xhr: xhr, status: status, errorThrown: errorThrown });\n        },\n\n        _params: function(data) {\n            var that = this,\n                options = extend({\n                    take: that.take(),\n                    skip: that.skip(),\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate,\n                    groupPaging: !!that._groupPaging\n                }, data);\n\n            if (!that.options.serverPaging) {\n                delete options.take;\n                delete options.skip;\n                delete options.page;\n                delete options.pageSize;\n            }\n\n            if (!that.options.serverGrouping) {\n                delete options.group;\n            } else if (that.reader.model && options.group) {\n                options.group = convertDescriptorsField(options.group, that.reader.model);\n            }\n\n            if (!that.options.serverFiltering) {\n                delete options.filter;\n            } else if (that.reader.model && options.filter) {\n               options.filter = convertFilterDescriptorsField(options.filter, that.reader.model);\n            }\n\n            if (!that.options.serverSorting) {\n                delete options.sort;\n            } else if (that.reader.model && options.sort) {\n                options.sort = convertDescriptorsField(options.sort, that.reader.model);\n            }\n\n            if (!that.options.serverAggregates) {\n                delete options.aggregate;\n            } else if (that.reader.model && options.aggregate) {\n                options.aggregate = convertDescriptorsField(options.aggregate, that.reader.model);\n            }\n\n            if (!that.options.groupPaging) {\n                delete options.groupPaging;\n            }\n\n            return options;\n        },\n\n        _queueRequest: function(options, callback) {\n            var that = this;\n            if (!that._requestInProgress) {\n                that._requestInProgress = true;\n                that._pending = undefined$1;\n                callback();\n            } else {\n                that._pending = { callback: callback.bind(that), options: options };\n            }\n        },\n\n        _dequeueRequest: function() {\n            var that = this;\n            that._requestInProgress = false;\n            if (that._pending) {\n                that._queueRequest(that._pending.options, that._pending.callback);\n            }\n        },\n\n        _handleCustomErrors: function(response) {\n            if (this.reader.errors) {\n                var errors = this.reader.errors(response);\n                if (errors) {\n                    this.trigger(ERROR, { xhr: null, status: \"customerror\", errorThrown: \"custom error\", errors: errors });\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _shouldWrap: function(data) {\n            var model = this.reader.model;\n\n            if (model && data.length) {\n                return !(data[0] instanceof model);\n            }\n\n            return false;\n        },\n\n        _observe: function(data) {\n            var that = this,\n                model = that.reader.model;\n\n            that._shouldDetachObservableParents = true;\n\n            if (data instanceof ObservableArray) {\n                that._shouldDetachObservableParents = false;\n                if (that._shouldWrap(data)) {\n                    data.type = that.reader.model;\n                    data.wrapAll(data, data);\n                }\n            } else {\n                var arrayType = that.pageSize() && !that.options.serverPaging ? LazyObservableArray : ObservableArray;\n                data = new arrayType(data, that.reader.model);\n                data.parent = function() { return that.parent(); };\n            }\n\n            if (that._isServerGrouped()) {\n                wrapGroupItems(data, model);\n            }\n\n            if (that._changeHandler && that._data && that._data instanceof ObservableArray &&\n                !(that.options.useRanges && that.options.serverPaging)) {\n                that._data.unbind(CHANGE, that._changeHandler);\n            } else {\n                that._changeHandler = that._change.bind(that);\n            }\n\n            return data.bind(CHANGE, that._changeHandler);\n        },\n\n        _updateTotalForAction: function(action, items) {\n            var that = this;\n\n            var total = parseInt(that._total, 10);\n\n            if (!isNumber(that._total)) {\n                total = parseInt(that._pristineTotal, 10);\n            }\n            if (action === \"add\") {\n                total += items.length;\n            } else if (action === \"remove\") {\n                total -= items.length;\n            } else if (action !== \"itemchange\" && action !== \"sync\" && !that.options.serverPaging) {\n                total = that._pristineTotal;\n            } else if (action === \"sync\") {\n                total = that._pristineTotal = parseInt(that._total, 10);\n            }\n\n            that._total = total;\n        },\n\n        _pushInDestroyed: function(model) {\n            var isPushed = this._destroyed.find(function(item) {\n                return item.uid === model.uid;\n            });\n            if (!isPushed) {\n                this._destroyed.push(model);\n            }\n        },\n\n        _change: function(e) {\n            var that = this, idx, length, action = e ? e.action : \"\";\n\n            if (action === \"remove\") {\n                for (idx = 0, length = e.items.length; idx < length; idx++) {\n                    if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                        that._pushInDestroyed(e.items[idx]);\n                    }\n                }\n            }\n\n            if (that.options.autoSync && (action === \"add\" || action === \"remove\" || action === \"itemchange\")) {\n\n                var handler = function(args) {\n                    if (args.action === \"sync\") {\n                        that.unbind(\"change\", handler);\n                        that._updateTotalForAction(action, e.items);\n                    }\n                };\n\n                that.first(\"change\", handler);\n\n                that.sync();\n\n            } else {\n                that._updateTotalForAction(action, e ? e.items : []);\n\n                that._process(that._data, e);\n            }\n        },\n\n        _calculateAggregates: function(data, options) {\n            options = options || {};\n\n            var query = new Query(data),\n                aggregates = options.aggregate,\n                filter = options.filter;\n\n            if (filter) {\n                query = query.filter(filter);\n            }\n\n            return query.aggregate(aggregates);\n        },\n\n        _process: function(data, e) {\n            var that = this,\n                options = {},\n                result;\n\n            if (that.options.serverPaging !== true) {\n                options.skip = that._skip;\n                options.take = that._take || that._pageSize;\n\n                if (options.skip === undefined$1 && that._page !== undefined$1 && that._pageSize !== undefined$1) {\n                    options.skip = (that._page - 1) * that._pageSize;\n                }\n\n                if (that.options.useRanges) {\n                    options.skip = that.currentRangeStart();\n                }\n            }\n\n            if (that.options.serverSorting !== true) {\n                options.sort = that._sort;\n            }\n\n            if (that.options.serverFiltering !== true) {\n                options.filter = that._filter;\n            }\n\n            if (that.options.serverGrouping !== true) {\n                options.group = that._group;\n            }\n\n            if (that.options.serverAggregates !== true) {\n                options.aggregate = that._aggregate;\n            }\n\n            if (that.options.serverGrouping) {\n                that._clearEmptyGroups(data);\n            }\n\n            options.groupPaging = that._groupPaging;\n\n            if (that._isGroupPaged() && e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                result = that._queryProcess(data, {\n                    aggregate: that._aggregate\n                });\n            } else {\n                result = that._queryProcess(data, options);\n            }\n\n            if (that._filter && e && e.action === \"add\") {\n                var model = e.items[0],\n                    resultData = result.data;\n\n                var modelIsInView = resultData.find(function(item) {\n                    return item.uid === model.uid;\n                });\n\n                if (!modelIsInView) {\n                    result.data.splice(model.index, 0, that._isGrouped() ? that._wrapInEmptyGroup(model) : model);\n                    result.total++;\n                }\n            }\n\n            if (that.options.serverAggregates !== true) {\n                // for performance reasons, calculate aggregates for part of the data only after query process\n                // this is necessary in the TreeList when paging\n                that._aggregateResult = that._calculateAggregates(result.dataToAggregate || data, options);\n            }\n\n            that._setView(result, options, e);\n\n            that._setFilterTotal(result.total, false);\n\n            e = e || {};\n\n            e.items = e.items || that._view;\n\n            that.trigger(CHANGE, e);\n        },\n\n        _setView: function(result, options, e) {\n            var that = this;\n\n            if (that._isGroupPaged() && !that._isServerGrouped()) {\n                if (e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                    that.view(result.data);\n                    that._updateOuterRangesLength();\n                } else {\n                    that._ranges = [];\n                    var query = new Query(result.data);\n                    that._addRange(that._observe(result.data));\n\n                    if (options.skip + options.take > result.data.length) {\n                        options.skip = result.data.length - options.take;\n                    }\n\n                    that.view(query.range(options.skip, options.take).toArray());\n                }\n\n            } else {\n                that.view(result.data);\n            }\n        },\n\n        _clearEmptyGroups: function(data) {\n            for (var idx = data.length - 1; idx >= 0; idx--) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    this._clearEmptyGroups(group.items);\n                }\n\n                if (group.items && !group.items.length && !group.itemCount) {\n                    splice.apply(group.parent(), [idx, 1]);\n                }\n            }\n        },\n\n        _queryProcess: function(data, options) {\n            if (this.options.inPlaceSort) {\n                return Query.process(data, options, this.options.inPlaceSort);\n            }\n            else {\n                return Query.process(data, options);\n            }\n        },\n\n        _mergeState: function(options) {\n            var that = this;\n\n            if (options !== undefined$1) {\n                that._pageSize = options.pageSize;\n                that._page = options.page;\n                that._sort = options.sort;\n                that._filter = options.filter;\n                that._group = options.group;\n                that._aggregate = options.aggregate;\n                that._skip = that._currentRangeStart = options.skip;\n                that._take = options.take;\n\n                if (that._skip === undefined$1) {\n                    that._skip = that._currentRangeStart = that.skip();\n                    options.skip = that.skip();\n                }\n\n                if (that._take === undefined$1 && that._pageSize !== undefined$1) {\n                    that._take = that._pageSize;\n                    options.take = that._take;\n                }\n\n                if (that.options.virtual) {\n                    options.virtual = that.options.virtual;\n                }\n\n                if (options.sort) {\n                    that._sort = options.sort = normalizeSort(options.sort);\n                    that._sortFields = sortFields(options.sort);\n                }\n\n                if (options.filter) {\n                    that._filter = options.filter = (that.options.accentFoldingFiltering && !$.isEmptyObject(options.filter)) ? $.extend({}, normalizeFilter(options.filter), { accentFoldingFiltering: that.options.accentFoldingFiltering }) : normalizeFilter(options.filter);\n                }\n\n                if (options.group) {\n                    that._group = options.group = normalizeGroup(options.group);\n                }\n                if (options.aggregate) {\n                    that._aggregate = options.aggregate = normalizeAggregate(options.aggregate);\n                }\n            }\n            return options;\n        },\n\n        query: function(options) {\n            var result;\n            var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n\n            if (remote || ((this._data === undefined$1 || this._data.length === 0) && !this._destroyed.length)) {\n                if (this.options.endless) {\n                    var moreItemsCount = options.pageSize - this.pageSize();\n                    if (moreItemsCount > 0) {\n                        moreItemsCount = this.pageSize();\n                        options.page = options.pageSize / moreItemsCount;\n                        options.pageSize = moreItemsCount;\n                    } else {\n                        options.page = 1;\n                        this.options.endless = false;\n                    }\n                }\n                return this.read(this._mergeState(options));\n            }\n\n            var isPrevented = this.trigger(REQUESTSTART, { type: \"read\" });\n            if (!isPrevented) {\n                this.trigger(PROGRESS);\n                if (options) {\n                    options.groupPaging = this._groupPaging;\n                }\n                result = this._queryProcess(this._data, this._mergeState(options));\n\n                this._setFilterTotal(result.total, true);\n\n                this._aggregateResult = this._calculateAggregates(result.dataToAggregate || this._data, options);\n                this._setView(result, options);\n                this.trigger(REQUESTEND, { type: \"read\" });\n                this.trigger(CHANGE, { items: result.data, action: options ? options.action : \"\" });\n            }\n\n            return $.Deferred().resolve(isPrevented).promise();\n        },\n\n        _hasExpandedSubGroups: function(group) {\n            var result = false;\n            var length = group.items ? group.items.length : 0;\n\n            if (!group.hasSubgroups) {\n                return false;\n            }\n\n            for (var i = 0; i < length; i++) {\n                if (this._groupsState[group.items[i].uid]) {\n                    result = true;\n                    break;\n                }\n            }\n            return result;\n        },\n\n        _findGroupedRange: function(data, result, options, parents, callback) {\n            var that = this;\n            var length = data.length;\n            var group;\n            var current;\n            var itemsLength;\n            var groupCount;\n            var itemsToSkip;\n\n            for (var i = 0; i < length; i++) {\n                group = data[i];\n\n                if (options.taken >= options.take) {\n                    break;\n                }\n\n                if (!that._getGroupByUid(group.uid)) {\n                    that._groupsFlat.push(group);\n                }\n\n                if (that._groupsState[group.uid]) {\n                    if (that._isServerGroupPaged()) {\n                       if (that._fetchGroupItems(group, options, parents, callback)) {\n                            that._fetchingGroupItems = true;\n                            return;\n                       }\n                       groupCount = (group.subgroupCount || group.itemCount) + 1;\n                       itemsToSkip = options.skip - options.skipped;\n                       if (!that._hasExpandedSubGroups(group) && itemsToSkip > groupCount) {\n                           options.skipped += groupCount;\n                           continue;\n                       }\n                    }\n\n                    if (options.includeParents && options.skipped < options.skip) {\n                        options.skipped++;\n                        group.excludeHeader = true;\n                    } else if (options.includeParents) {\n                        options.taken++;\n                        group.excludeHeader = false;\n                    }\n\n                    if (group.hasSubgroups && group.items && group.items.length) {\n                        group.currentItems = [];\n\n                        if (!parents) {\n                            parents = [];\n                        }\n                        parents.push(group);\n\n                        that._findGroupedRange(group.items, group.currentItems, options, parents, callback);\n                        parents.pop();\n\n                        if (group.currentItems.length || options.taken > 0) {\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    } else {\n                        current = [];\n                        itemsLength = group.items.length;\n\n                        for (var j = 0; j < itemsLength; j++) {\n                            if (options.skipped < options.skip) {\n                                options.skipped++;\n                                continue;\n                            }\n\n                            if (options.taken >= options.take) {\n                                break;\n                            }\n                            current.push(group.items[j]);\n                            options.taken++;\n                        }\n\n                        if (current.length || options.taken > 0) {\n                            group.currentItems = current;\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    }\n                } else {\n                    if (options.skipped < options.skip) {\n                        options.skipped++;\n                        continue;\n                    }\n                    result.push(group);\n                    options.taken++;\n                }\n            }\n        },\n\n        _expandedSubGroupItemsCount: function(group, end, includeCurrentItems) {\n            var that = this;\n            var result = 0;\n            var subGroup;\n            var endSpecified = typeof end === \"number\";\n            var length = endSpecified ? end : group.subgroupCount;\n            var temp;\n\n            if (!group.hasSubgroups) {\n                return result;\n            }\n\n            for (var i = 0; i < length; i++) {\n                subGroup = group.items[i];\n\n                if (!subGroup) {\n                    break;\n                }\n\n                if (subGroup.hasSubgroups && that._groupsState[group.uid]) {\n                    temp = that._expandedSubGroupItemsCount(subGroup, length, true);\n                    result += temp;\n\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                } else if (!subGroup.hasSubgroups && that._groupsState[subGroup.uid]) {\n                    temp = subGroup.items ? subGroup.items.length : 0;\n                    result += temp;\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                }\n\n                if (includeCurrentItems) {\n                    result += 1;\n                    if (endSpecified) {\n                        length -= 1;\n                    }\n                }\n\n                if (endSpecified && result > length) {\n                    return result;\n                }\n            }\n\n            return result;\n        },\n\n        _fetchGroupItems: function(group, options, parents, callback) {\n            var that = this;\n            var groupItemsSkip;\n            var firstItem;\n            var lastItem;\n            var groupItemCount = group.hasSubgroups ? group.subgroupCount : group.itemCount;\n            var take = options.take;\n            var skipped = options.skipped;\n            var pageSize = that.take();\n            var expandedSubGroupItemsCount;\n\n            if (options.includeParents) {\n                if (skipped < options.skip) {\n                    skipped += 1;\n                } else {\n                    take -= 1;\n                }\n            }\n\n            if (!group.items || (group.items && !group.items.length)) {\n                that.getGroupItems(group, options, parents, callback, 0);\n                return true;\n            } else {\n                expandedSubGroupItemsCount = this._expandedSubGroupItemsCount(group, options.skip - skipped);\n                groupItemsSkip = Math.max(options.skip - (skipped + expandedSubGroupItemsCount), 0);\n\n                if (groupItemsSkip >= groupItemCount) {\n                    return false;\n                }\n\n                firstItem = group.items[groupItemsSkip];\n                lastItem = group.items[Math.min(groupItemsSkip + take, groupItemCount - 1)];\n\n                if (firstItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, math.max(math.floor(groupItemsSkip / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n\n                if (lastItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, math.max(math.floor((groupItemsSkip + pageSize) / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n            }\n        },\n\n        getGroupItems: function(group, options, parents, callback, groupItemsSkip, page) {\n            var that = this;\n            var take;\n            var filter;\n            var data;\n            var subgroups;\n\n            if (!group.items) {\n                group.items = [];\n            }\n\n            take = that.take();\n            filter = this._composeItemsFilter(group, parents);\n            data = {\n                page: page || 1,\n                pageSize: take,\n                skip: groupItemsSkip,\n                take: take,\n                filter: filter,\n                aggregate: that._aggregate,\n                sort: that._sort\n            };\n            subgroups = that.findSubgroups(group);\n\n            if (subgroups && subgroups.length) {\n                data.group = subgroups;\n                data.groupPaging = true;\n            }\n\n            clearTimeout(that._timeout);\n            that._timeout = setTimeout(function() {\n                that._queueRequest(data, function() {\n                    if (!that.trigger(REQUESTSTART, {\n                            type: \"read\"\n                        })) {\n                        that.transport.read({\n                            data: data,\n                            success: that._groupItemsSuccessHandler(group, options.skip, that.take(), callback, groupItemsSkip),\n                            error: function() {\n                                var args = slice.call(arguments);\n                                that.error.apply(that, args);\n                            }\n                        });\n                    } else {\n                        that._dequeueRequest();\n                    }\n                });\n            }, 100);\n        },\n\n        _groupItemsSuccessHandler: function(group, skip, take, callback, groupItemsSkip) {\n            var that = this;\n            var timestamp = that._timeStamp();\n            callback = isFunction(callback) ? callback : noop;\n            var totalField = that.options.schema && that.options.schema.total ? that.options.schema.total : \"Total\";\n\n            return function(data) {\n                var temp;\n                var model = Model.define(that.options.schema.model);\n                var totalCount;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, {\n                    response: data,\n                    type: \"read\"\n                });\n\n                if (isFunction(totalField)) {\n                    totalCount = totalField(data);\n                } else {\n                    totalCount = data[totalField];\n                }\n\n                data = that.reader.parse(data);\n\n                if (group.hasSubgroups) {\n                    temp = that.reader.groups(data);\n                    group.subgroupCount = totalCount;\n                } else {\n                    temp = that.reader.data(data);\n                    temp = temp.map(function(item) {\n                        return new model(item);\n                    });\n                }\n\n                group.items.omitChangeEvent = true;\n                for (var i = 0; i < totalCount; i++) {\n                    if (i >= groupItemsSkip && i < (groupItemsSkip + take) ) {\n                        group.items.splice(i, 1, temp[i - groupItemsSkip]);\n                    } else {\n                        if (!group.items[i]) {\n                            group.items.splice(i, 0, { notFetched: true });\n                        }\n                    }\n                }\n                group.items.omitChangeEvent = false;\n\n                that._updateRangePristineData(group);\n                that._fetchingGroupItems = false;\n\n                if (!group.countAdded) {\n                    that._serverGroupsTotal += totalCount;\n                    group.countAdded = true;\n                }\n\n                that.range(skip, take, callback, \"expandGroup\");\n\n                if (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress) {\n                    that.trigger(CHANGE, {});\n                }\n            };\n        },\n\n        findSubgroups: function(group) {\n            var indexOfCurrentGroup = this._group.map(function(g) {\n                return g.field;\n            }).indexOf(group.field);\n\n            return this._group.slice(indexOfCurrentGroup + 1, this._group.length);\n        },\n\n        _composeItemsFilter: function(group, parents) {\n            var filter = this.filter() || {\n                logic: \"and\",\n                filters: []\n            };\n\n            filter.logic = 'and';\n            filter = extend(true, {}, filter);\n            filter.filters.push({\n                field: group.field,\n                operator: \"eq\",\n                value: group.value\n            });\n\n            if (parents) {\n                for (var i = 0; i < parents.length; i++) {\n                    filter.filters.push({\n                        field: parents[i].field,\n                        operator: \"eq\",\n                        value: parents[i].value\n                    });\n                }\n            }\n\n            return filter;\n        },\n\n        _updateRangePristineData: function(group) {\n            var that = this;\n            var ranges = that._ranges;\n            var rangesLength = ranges.length;\n            var temp;\n            var currentGroup;\n            var range;\n            var dataLength;\n            var indexes;\n            var currIdx;\n\n            for (var i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                dataLength = range.data.length;\n                indexes = [];\n                temp = null;\n\n                for (var j = 0; j < dataLength; j++) {\n                    currentGroup = range.data[j];\n                    indexes.push(j);\n\n                    if ((currentGroup.uid === group.uid) || (currentGroup.hasSubgroups && currentGroup.items.length && that._containsSubGroup(currentGroup, group, indexes))) {\n                        break;\n                    }\n                    indexes.pop();\n                }\n\n                if (indexes.length) {\n                    temp = ranges[i].pristineData;\n\n                    while (indexes.length > 1) {\n                        currIdx = indexes.splice(0, 1)[0];\n                        temp = temp[currIdx].items;\n                    }\n                    temp[indexes[0]] = that._cloneGroup(group);\n                    break;\n                }\n            }\n        },\n\n        _containsSubGroup: function(group, subgroup, indexes) {\n            var that = this;\n            var length = group.items.length;\n            var currentSubGroup;\n\n            if (group.hasSubgroups && length) {\n                for (var i = 0; i < length; i++) {\n                    currentSubGroup = group.items[i];\n                    indexes.push(i);\n                    if (currentSubGroup.uid === subgroup.uid ||\n                            (currentSubGroup.hasSubgroups &&\n                            currentSubGroup.items.length &&\n                            that._containsSubGroup(currentSubGroup, subgroup, indexes))) {\n                        return true;\n                    }\n                    indexes.pop();\n                }\n            }\n\n        },\n\n        _cloneGroup: function(group) {\n            var that = this;\n            group = typeof group.toJSON == \"function\" ? group.toJSON() : group;\n\n            if (group.items && group.items.length) {\n                group.items = group.items.map(function(item) {\n                    return that._cloneGroup(item);\n                });\n            }\n\n            return group;\n        },\n\n        _setFilterTotal: function(filterTotal, setDefaultValue) {\n            var that = this;\n\n            if (!that.options.serverFiltering) {\n                if (filterTotal !== undefined$1) {\n                    that._total = filterTotal;\n                } else if (setDefaultValue) {\n                    that._total = that._data.length;\n                }\n            }\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            var fn = function(isPrevented) {\n                if (isPrevented !== true && isFunction(callback)) {\n                    callback.call(that);\n                }\n            };\n\n            return this._query().done(fn);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate()\n            }, options));\n        },\n\n        next: function(options) {\n            var that = this,\n                page = that.page(),\n                total = that.total();\n\n            options = options || {};\n\n            if (!page || (total && page + 1 > that.totalPages())) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = page * that.take();\n\n            page += 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        prev: function(options) {\n            var that = this,\n                page = that.page();\n\n            options = options || {};\n\n            if (!page || page === 1) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = that._skip - that.take();\n\n            page -= 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        page: function(val) {\n            var that = this,\n            skip;\n\n            if (val !== undefined$1) {\n                val = math.max(math.min(math.max(val, 1), that.totalPages()), 1);\n                var take = that.take();\n\n                if (that._isGroupPaged()) {\n                    val -= 1;\n                    that.range(val * take, take, null, \"page\");\n                    return;\n                }\n                that._query(that._pageableQueryOptions({ page: val }));\n                return;\n            }\n            skip = that.skip();\n\n            return skip !== undefined$1 ? math.round((skip || 0) / (that.take() || 1)) + 1 : undefined$1;\n        },\n\n        pageSize: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that._query(that._pageableQueryOptions({ pageSize: val, page: 1 }));\n                return;\n            }\n\n            return that.take();\n        },\n\n        sort: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that.trigger(\"sort\");\n                that._query({ sort: val });\n                return;\n            }\n\n            return that._sort;\n        },\n\n        filter: function(val) {\n            var that = this;\n\n            if (val === undefined$1) {\n                return that._filter;\n            }\n\n            that.trigger(\"reset\");\n            that._query({ filter: val, page: 1 });\n        },\n\n        group: function(val) {\n            var that = this;\n            var options = { group: val };\n\n            if (that._groupPaging) {\n                // clear ranges if ungrouping is performed\n                if (val !== undefined$1 && (!val || !val.length) ) {\n                    that._ranges = [];\n                }\n                options.page = 1;\n            }\n\n            if (val !== undefined$1) {\n                that._query(options);\n                return;\n            }\n\n            return that._group;\n        },\n\n        getGroupsFlat: function(data) {\n            var idx,\n                result = [],\n                length;\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    result = result.concat(this.getGroupsFlat(group.items));\n                }\n\n                result.push(group);\n            }\n\n            return result;\n        },\n\n        total: function() {\n            return parseInt(this._total || 0, 10);\n        },\n\n        groupsTotal: function(includeExpanded) {\n            var that = this;\n\n            if (!that._group.length) {\n                return that.total();\n            }\n\n            if (that._isServerGrouped()) {\n                if (that._serverGroupsTotal) {\n                    return that._serverGroupsTotal;\n                }\n                that._serverGroupsTotal = that.total();\n\n                return that._serverGroupsTotal;\n            }\n\n            return that._calculateGroupsTotal(that._ranges.length ? that._ranges[0].data : [], includeExpanded);\n        },\n\n        _calculateGroupsTotal: function(groups, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            itemsField = itemsField || \"items\";\n            var total;\n            var length;\n\n            if (that._group.length && groups) {\n                total = 0;\n                length = groups.length;\n\n                for (var i = 0; i < length; i++) {\n                    total += that.groupCount(groups[i], includeExpanded, itemsField, ignoreState);\n                }\n                that._groupsTotal = total;\n                return total;\n            }\n\n            that._groupsTotal = that._data.length;\n            return that._groupsTotal;\n        },\n\n        groupCount: function(group, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            var total = 0;\n\n            if (group.hasSubgroups && that._groupsState[group.uid]) {\n                if (includeExpanded && !group.excludeHeader || ignoreState) {\n                    total += 1;\n                }\n\n                group[itemsField].forEach(function(subgroup) {\n                    total += that.groupCount(subgroup, includeExpanded, itemsField, ignoreState);\n                });\n            } else {\n                if (that._groupsState[group.uid]) {\n                    if (includeExpanded && !group.excludeHeader || ignoreState) {\n                        total++;\n                    }\n                    total += group[itemsField] ? group[itemsField].length : 0;\n                } else {\n                    total++;\n                }\n            }\n            return total;\n        },\n\n        countGroupRange: function(range) {\n            var total = 0;\n            var length = range.length;\n\n            for (var i = 0; i < length; i++) {\n                total += this.groupCount(range[i], true);\n            }\n\n            return total;\n        },\n\n        aggregate: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that._query({ aggregate: val });\n                return;\n            }\n\n            return that._aggregate;\n        },\n\n        aggregates: function() {\n            var result = this._aggregateResult;\n\n            if (isEmptyObject(result)) {\n                result = this._emptyAggregates(this.aggregate());\n            }\n\n            return result;\n        },\n\n        _emptyAggregates: function(aggregates) {\n            var result = {};\n\n            if (!isEmptyObject(aggregates)) {\n                var aggregate = {};\n\n                if (!isArray(aggregates)) {\n                    aggregates = [aggregates];\n                }\n\n                for (var idx = 0; idx < aggregates.length; idx++) {\n                    aggregate[aggregates[idx].aggregate] = 0;\n                    result[aggregates[idx].field] = aggregate;\n                }\n            }\n\n            return result;\n        },\n\n        _pageableQueryOptions: function(options) {\n            return options;\n        },\n\n        _wrapInEmptyGroup: function(model) {\n            var groups = this.group(),\n                parent,\n                group,\n                idx,\n                length;\n\n            for (idx = groups.length - 1, length = 0; idx >= length; idx--) {\n                group = groups[idx];\n                parent = {\n                    value: model.get ? model.get(group.field) : model[group.field],\n                    field: group.field,\n                    items: parent ? [parent] : [model],\n                    hasSubgroups: !!parent,\n                    aggregates: this._emptyAggregates(group.aggregates)\n                };\n            }\n\n            return parent;\n        },\n\n        totalPages: function() {\n            var that = this,\n                pageSize = that.pageSize() || that.total(),\n                total = that._isGroupPaged() ? that.groupsTotal(true) : that.total();\n\n            return math.ceil((total || 0) / pageSize);\n        },\n\n        inRange: function(skip, take) {\n            var that = this,\n                end = math.min(skip + take, that.total());\n\n            if (!that.options.serverPaging && that._data.length > 0) {\n                return true;\n            }\n\n            return that._findRange(skip, end).length > 0;\n        },\n\n        lastRange: function() {\n            var ranges = this._ranges;\n            return ranges[ranges.length - 1] || { start: 0, end: 0, data: [] };\n        },\n\n        firstItemUid: function() {\n            var ranges = this._ranges;\n            return ranges.length && ranges[0].data.length && ranges[0].data[0].uid;\n        },\n\n        enableRequestsInProgress: function() {\n            this._skipRequestsInProgress = false;\n        },\n\n        _timeStamp: function() {\n            return new Date().getTime();\n        },\n\n        range: function(skip, take, callback, action) {\n            this._currentRequestTimeStamp = this._timeStamp();\n            this._skipRequestsInProgress = true;\n            var total = this._isGroupPaged() ? this.groupsTotal(true) : this.total();\n\n            if (action === \"expandGroup\" || action === \"collapseGroup\") {\n                this._updateOuterRangesLength();\n            }\n\n            skip = math.min(skip || 0, total);\n            callback = isFunction(callback) ? callback : noop;\n\n            var that = this,\n                pageSkip = math.max(math.floor(skip / take), 0) * take,\n                size = math.min(pageSkip + take, total),\n                data;\n\n            data = that._findRange(skip, math.min(skip + take, total), callback);\n\n            if ((data.length || total === 0) && !that._fetchingGroupItems) {\n                that._processRangeData(data, skip, take, that._originalPageSkip || pageSkip, that._originalSize || size, {\n                    action: action\n                });\n                that._originalPageSkip = null;\n                that._originalSize = null;\n                callback();\n                return;\n            }\n\n            if (that._isGroupPaged()) {\n                that._originalPageSkip = pageSkip;\n                that._originalSize = size;\n\n                pageSkip = math.max(math.floor(that._adjustPageSkip(skip, take) / take), 0) * take;\n                size = math.min(pageSkip + take, total);\n            }\n\n            if (take !== undefined$1 && !that._fetchingGroupItems) {\n                if ((that._isGroupPaged() && !that._groupRangeExists(pageSkip, take)) || !that._rangeExists(pageSkip, size)) {\n                    that.prefetch(pageSkip, take, function() {\n                        if (skip > pageSkip && size < that.total() && !that._rangeExists(size, math.min(size + take, that.total()))) {\n                            that.prefetch(size, take, function() {\n                                that.range(skip, take, callback );\n                            });\n                        } else {\n                            that.range(skip, take, callback);\n                        }\n                    });\n                } else if (pageSkip < skip) {\n                    that.prefetch(size, take, function() {\n                        that.range(skip, take, callback );\n                    });\n                }\n            }\n        },\n\n        _findRange: function(start, end, callback) {\n            var that = this,\n                ranges = that._ranges,\n                range,\n                data = [],\n                skipIdx,\n                takeIdx,\n                startIndex,\n                endIndex,\n                rangeData,\n                rangeEnd,\n                processed,\n                options = that.options,\n                remote = options.serverSorting || options.serverPaging || options.serverFiltering || options.serverGrouping || options.serverAggregates,\n                flatData,\n                count,\n                length,\n                groupMapOptions = {\n                        take: end - start,\n                        skip: start,\n                        skipped: 0,\n                        taken: 0,\n                        includeParents: true\n                    },\n                prevRangeEnd,\n                isGroupPaged = that._isGroupPaged(),\n                startField = isGroupPaged ? \"outerStart\" : \"start\",\n                endField = isGroupPaged ? \"outerEnd\" : \"end\",\n                currentDataLength;\n\n            for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                range = ranges[skipIdx];\n\n                if (isGroupPaged) {\n                    if (range.outerStart >= end) {\n                        return [];\n                    }\n\n                    if (start > range.outerEnd) {\n                        groupMapOptions.skipped += range.outerEnd - (prevRangeEnd || 0);\n                        prevRangeEnd = range.outerEnd;\n                        continue;\n                    }\n\n                    if (typeof prevRangeEnd !== \"undefined\" && prevRangeEnd != range.outerStart) {\n                        groupMapOptions.skipped += range.outerStart - prevRangeEnd;\n                    }\n\n                    if (groupMapOptions.skipped > groupMapOptions.skip) {\n                        return [];\n                    }\n\n                    if (typeof prevRangeEnd === \"undefined\" && start > 0 && range.start > 0) {\n                        groupMapOptions.skipped = range.outerStart;\n                    }\n\n                    takeIdx = skipIdx;\n                    while (true) {\n                        this._findGroupedRange(range.data, data, groupMapOptions, null, callback);\n                        currentDataLength = that._calculateGroupsTotal(data, true, \"currentItems\");\n\n                        if (currentDataLength >= groupMapOptions.take) {\n                            return data;\n                        }\n\n                        if (that._fetchingGroupItems) {\n                            return [];\n                        }\n                        takeIdx++;\n\n                        if (ranges[takeIdx] && ranges[takeIdx].outerStart === range.outerEnd) {\n                            range = ranges[takeIdx];\n                        } else {\n                            break;\n                        }\n                    }\n                } else if (start >= range[startField] && start <= range[endField]) {\n                    count = 0;\n\n                    for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                        range = ranges[takeIdx];\n                        flatData = that._flatData(range.data, true);\n\n                        if (flatData.length && start + count >= range.start) {\n                            rangeData = range.data;\n                            rangeEnd = range.end;\n\n                            if (!remote) {\n                                if (options.inPlaceSort) {\n                                    processed = that._queryProcess(range.data, { filter: that.filter() });\n                                } else {\n                                    var sort = normalizeGroupWithoutCompare(that.group() || []).concat(normalizeSort(that.sort() || []));\n                                    processed = that._queryProcess(range.data, { sort: sort, filter: that.filter() });\n                                }\n                                flatData = rangeData = processed.data;\n\n                                if (processed.total !== undefined$1) {\n                                    rangeEnd = processed.total;\n                                }\n                            }\n\n                            startIndex = 0;\n                            if (start + count > range.start) {\n                                startIndex = (start + count) - range.start;\n                            }\n                            endIndex = flatData.length;\n                            if (rangeEnd > end) {\n                                endIndex = endIndex - (rangeEnd - end);\n                            }\n                            count += endIndex - startIndex;\n                            data = that._mergeGroups(data, rangeData, startIndex, endIndex);\n\n                            if (end <= range.end && count == end - start) {\n                                return data;\n                            }\n                        }\n                    }\n                    break;\n                }\n                prevRangeEnd = range.outerEnd;\n            }\n            return [];\n        },\n\n        _getRangesMismatch: function(pageSkip) {\n            var that = this;\n            var ranges = that._ranges;\n            var mismatch = 0;\n            var i = 0;\n\n            while (true) {\n                var range = ranges[i];\n                if (!range || range.outerStart > pageSkip) {\n                    break;\n                }\n\n                if (range.outerEnd != range.end) {\n                    mismatch = range.outerEnd - range.end;\n                }\n                i++;\n            }\n\n            return mismatch;\n        },\n\n        _mergeGroups: function(data, range, skip, take) {\n            if (this._isServerGrouped()) {\n                var temp = range.toJSON(),\n                    prevGroup;\n\n                if (data.length) {\n                    prevGroup = data[data.length - 1];\n                }\n\n                mergeGroups(prevGroup, temp, skip, take);\n\n                return data.concat(temp);\n            }\n            return data.concat(range.slice(skip, take));\n        },\n\n        _processRangeData: function(data, skip, take, pageSkip, size, eventData) {\n            var that = this;\n\n            that._pending = undefined$1;\n\n            that._skip = skip > that.skip() && !that._omitPrefetch ? math.min(size, (that.totalPages() - 1) * that.take()) : pageSkip;\n\n            that._currentRangeStart = skip;\n\n            that._take = take;\n\n            var paging = that.options.serverPaging;\n            var sorting = that.options.serverSorting;\n            var filtering = that.options.serverFiltering;\n            var aggregates = that.options.serverAggregates;\n            try {\n                that.options.serverPaging = true;\n                if (!that._isServerGrouped() && !(that.group() && that.group().length)) {\n                    that.options.serverSorting = true;\n                }\n                that.options.serverFiltering = true;\n                that.options.serverPaging = true;\n                that.options.serverAggregates = true;\n\n                if (paging) {\n                    that._detachObservableParents();\n                    that._data = data = that._observe(data);\n                }\n                that._process(data, eventData);\n            } finally {\n                that.options.serverPaging = paging;\n                that.options.serverSorting = sorting;\n                that.options.serverFiltering = filtering;\n                that.options.serverAggregates = aggregates;\n            }\n        },\n\n        skip: function() {\n            var that = this;\n\n            if (that._skip === undefined$1) {\n                return (that._page !== undefined$1 ? (that._page - 1) * (that.take() || 1) : undefined$1);\n            }\n            return that._skip;\n        },\n\n        currentRangeStart: function() {\n            return this._currentRangeStart || 0;\n        },\n\n        take: function() {\n            return this._take || this._pageSize;\n        },\n\n        _prefetchSuccessHandler: function(skip, size, callback, force) {\n            var that = this;\n            var timestamp = that._timeStamp();\n\n            return function(data) {\n                var found = false,\n                    range = { start: skip, end: size, data: [], timestamp: that._timeStamp() },\n                    idx,\n                    length,\n                    temp;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n                data = that.reader.parse(data);\n\n                temp = that._readData(data);\n\n                if (temp.length) {\n                    for (idx = 0, length = that._ranges.length; idx < length; idx++) {\n                        if (that._ranges[idx].start === skip) {\n                            found = true;\n                            range = that._ranges[idx];\n\n                            if (!that._isGroupPaged()) {\n                                range.pristineData = temp;\n                                range.data = that._observe(temp);\n                                range.end = range.start + that._flatData(range.data, true).length;\n                                that._sortRanges();\n                            }\n\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        that._addRange(that._observe(temp), skip);\n                    }\n                }\n\n                that._total = that.reader.total(data);\n\n                if (force || (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress)) {\n                    if (callback && temp.length) {\n                        callback();\n                    } else {\n                        that.trigger(CHANGE, {});\n                    }\n                }\n            };\n        },\n\n        prefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n\n            if ((that._isGroupPaged() && !that._isServerGrouped() && that._groupRangeExists(skip, size))) {\n                if (callback) {\n                    callback();\n                }\n                return;\n            }\n\n            if ((that._isServerGroupPaged() && !that._groupRangeExists(skip, size)) || !that._rangeExists(skip, size)) {\n                clearTimeout(that._timeout);\n\n                that._timeout = setTimeout(function() {\n                    that._queueRequest(options, function() {\n                        if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                            if (that._omitPrefetch) {\n                                that.trigger(PROGRESS);\n                            }\n                            that.transport.read({\n                                data: that._params(options),\n                                success: that._prefetchSuccessHandler(skip, size, callback),\n                                error: function() {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                }\n                            });\n                        } else {\n                            that._dequeueRequest();\n                        }\n                    });\n                }, 100);\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _multiplePrefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n            if (!that._rangeExists(skip, size)) {\n                if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                    that.transport.read({\n                        data: that._params(options),\n                        success: that._prefetchSuccessHandler(skip, size, callback, true)\n                    });\n                }\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _adjustPageSkip: function(start, take) {\n            var that = this;\n            var prevRange = that._getPrevRange(start);\n            var result;\n            var total = that.total();\n            var mismatch;\n\n            if (prevRange) {\n                mismatch = that._getRangesMismatch(start);\n\n                if (!mismatch) {\n                    return start;\n                }\n                start -= mismatch;\n            }\n            result = math.max(math.floor(start / take), 0) * take;\n\n            if (result > total) {\n                while (true) {\n                    result -= take;\n                    if (result < total) {\n                        break;\n                    }\n                }\n            }\n            return result;\n        },\n\n        _getNextRange: function(end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= end && ranges[idx].end >= end) {\n                    return ranges[idx];\n                }\n            }\n        },\n\n        _getPrevRange: function(start) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                range,\n                length = ranges.length;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n                if (ranges[idx].outerStart <= start) {\n                    range = ranges[idx];\n                    break;\n                }\n\n            }\n\n            return range;\n        },\n\n        _rangeExists: function(start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _groupRangeExists: function(start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length,\n                availableItemsCount = 0,\n                total = that.groupsTotal(true);\n\n            if (end > total && !that._isServerGrouped()) {\n                end = total;\n            }\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                var range = ranges[idx];\n                if (range.outerStart <= start && range.outerEnd >= start) {\n                    availableItemsCount += range.outerEnd - start;\n                } else if (range.outerStart <= end && range.outerEnd >= end) {\n                    availableItemsCount += end - range.outerStart;\n                }\n            }\n\n            return availableItemsCount >= end - start;\n        },\n\n        _getCurrentRangeSpan: function() {\n            var that = this;\n            var ranges = that._ranges;\n            var start = that.currentRangeStart();\n            var end = start + (that.take() || 0);\n            var rangeSpan = [];\n            var range;\n            var idx;\n            var length = ranges.length;\n\n            for (idx = 0; idx < length; idx++) {\n                range = ranges[idx];\n\n                if ((range.start <= start && range.end >= start) || (range.start >= start && range.start <= end)) {\n                    rangeSpan.push(range);\n                }\n            }\n\n            return rangeSpan;\n        },\n\n        _removeModelFromRanges: function(model) {\n            var that = this;\n            var range;\n\n            for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                range = this._ranges[idx];\n\n                that._removeModelFromRange(range, model);\n            }\n\n            that._updateRangesLength();\n        },\n\n        _removeModelFromRange: function(range, model) {\n            this._eachItem(range.data, function(data) {\n                if (!data) {\n                    return;\n                }\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data[idx];\n\n                    if (dataItem.uid && dataItem.uid == model.uid) {\n                        [].splice.call(data, idx, 1);\n                        break;\n                    }\n                }\n            });\n        },\n\n        _insertModelInRange: function(index, model) {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n\n                if (range.start <= index && range.end >= index) {\n                    if (!that._getByUid(model.uid, range.data)) {\n                        if (that._isServerGrouped()) {\n                            range.data.splice(index, 0, that._wrapInEmptyGroup(model));\n                        } else {\n                            range.data.splice(index, 0, model);\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            that._updateRangesLength();\n        },\n\n        _updateRangesLength: function() {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchFound = false;\n            var mismatchLength = 0;\n            var lengthDifference = 0;\n            var rangeLength;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? range.data.length : that._flatData(range.data, true).length;\n                lengthDifference = rangeLength - math.abs(range.end - range.start);\n\n                if (!mismatchFound && lengthDifference !== 0) {\n                    mismatchFound = true;\n                    mismatchLength = lengthDifference;\n                    range.end += mismatchLength;\n                    continue;\n                }\n\n                if (mismatchFound) {\n                    range.start += mismatchLength;\n                    range.end += mismatchLength;\n                }\n            }\n        },\n\n        _updateOuterRangesLength: function() {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchLength = 0;\n            var range;\n            var i;\n            var prevRange;\n            var rangeLength;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? that._calculateGroupsTotal(range.data, true, \"items\", true) : that._flatData(range.data, true).length;\n\n                if (prevRange) {\n                    if (prevRange.end != range.start) {\n                        mismatchLength = range.start - prevRange.end;\n                    }\n                    range.outerStart = prevRange.outerEnd + mismatchLength;\n                    mismatchLength = 0;\n                } else {\n                    range.outerStart = range.start;\n                }\n\n                range.outerEnd = range.outerStart + rangeLength;\n                prevRange = range;\n            }\n        }\n    });\n\n    var Transport = {};\n\n    Transport.create = function(options, data, dataSource) {\n        var transport,\n            transportOptions = options.transport ? $.extend({}, options.transport) : null;\n\n        if (transportOptions) {\n            transportOptions.read = typeof transportOptions.read === STRING ? { url: transportOptions.read } : transportOptions.read;\n\n            if (options.type === \"jsdo\") {\n                transportOptions.dataSource = dataSource;\n            }\n\n            if (options.type) {\n                kendo.data.transports = kendo.data.transports || {};\n                kendo.data.schemas = kendo.data.schemas || {};\n\n                if (!kendo.data.transports[options.type]) {\n                    kendo.logToConsole(\"Unknown DataSource transport type '\" + options.type + \"'.\\nVerify that registration scripts for this type are included after Kendo UI on the page.\", \"warn\");\n                } else if (!isPlainObject(kendo.data.transports[options.type])) {\n                    transport = new kendo.data.transports[options.type](extend(transportOptions, { data: data }));\n                } else {\n                    transportOptions = extend(true, {}, kendo.data.transports[options.type], transportOptions);\n                }\n\n                options.schema = extend(true, {}, kendo.data.schemas[options.type], options.schema);\n            }\n\n            if (!transport) {\n                transport = isFunction(transportOptions.read) ? transportOptions : new RemoteTransport(transportOptions);\n            }\n        } else {\n            transport = new LocalTransport({ data: options.data || [] });\n        }\n        return transport;\n    };\n\n    DataSource.create = function(options) {\n        if (isArray(options) || options instanceof ObservableArray) {\n           options = { data: options };\n        }\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            table = dataSource.table,\n            select = dataSource.select,\n            idx,\n            length,\n            model = {},\n            field;\n\n        if (!data && fields && !dataSource.transport) {\n            if (table) {\n                data = inferTable(table, fields);\n            } else if (select) {\n                data = inferSelect(select, fields);\n\n                if (dataSource.group === undefined$1 && data[0] && data[0].optgroup !== undefined$1) {\n                    dataSource.group = \"optgroup\";\n                }\n            }\n        }\n\n        if (kendo.data.Model && fields && (!dataSource.schema || !dataSource.schema.model)) {\n            for (idx = 0, length = fields.length; idx < length; idx++) {\n                field = fields[idx];\n                if (field.type) {\n                    model[field.field] = field;\n                }\n            }\n\n            if (!isEmptyObject(model)) {\n                dataSource.schema = extend(true, dataSource.schema, { model: { fields: model } });\n            }\n        }\n\n        dataSource.data = data;\n\n        select = null;\n        dataSource.select = null;\n        table = null;\n        dataSource.table = null;\n\n        return dataSource instanceof DataSource ? dataSource : new DataSource(dataSource);\n    };\n\n    function inferSelect(select, fields) {\n        select = $(select)[0];\n        var options = select.options;\n        var firstField = fields[0];\n        var secondField = fields[1];\n\n        var data = [];\n        var idx, length;\n        var optgroup;\n        var option;\n        var record;\n        var value;\n\n        for (idx = 0, length = options.length; idx < length; idx++) {\n            record = {};\n            option = options[idx];\n            optgroup = option.parentNode;\n\n            if (optgroup === select) {\n                optgroup = null;\n            }\n\n            if (option.disabled || (optgroup && optgroup.disabled)) {\n                continue;\n            }\n\n            if (optgroup) {\n                record.optgroup = optgroup.label;\n            }\n\n            record[firstField.field] = option.text;\n\n            value = option.attributes.value;\n\n            if (value && value.specified) {\n                value = option.value;\n            } else {\n                value = option.text;\n            }\n\n            record[secondField.field] = value;\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    function inferTable(table, fields) {\n        var tbody = $(table)[0].tBodies[0],\n        rows = tbody ? tbody.rows : [],\n        idx,\n        length,\n        fieldIndex,\n        fieldCount = fields.length,\n        data = [],\n        cells,\n        record,\n        cell,\n        empty;\n\n        for (idx = 0, length = rows.length; idx < length; idx++) {\n            record = {};\n            empty = true;\n            cells = rows[idx].cells;\n\n            for (fieldIndex = 0; fieldIndex < fieldCount; fieldIndex++) {\n                cell = cells[fieldIndex];\n                if (cell.nodeName.toLowerCase() !== \"th\") {\n                    empty = false;\n                    record[fields[fieldIndex].field] = cell.innerHTML;\n                }\n            }\n            if (!empty) {\n                data.push(record);\n            }\n        }\n\n        return data;\n    }\n\n    var Node = Model.define({\n        idField: \"id\",\n\n        init: function(value) {\n            var that = this,\n                hasChildren = that.hasChildren || value && value.hasChildren,\n                childrenField = \"items\",\n                childrenOptions = {};\n\n            kendo.data.Model.fn.init.call(that, value);\n\n            if (typeof that.children === STRING) {\n                childrenField = that.children;\n            }\n\n            childrenOptions = {\n                schema: {\n                    data: childrenField,\n                    model: {\n                        hasChildren: hasChildren,\n                        id: that.idField,\n                        fields: that.fields\n                    }\n                }\n            };\n\n            if (typeof that.children !== STRING) {\n                extend(childrenOptions, that.children);\n            }\n\n            childrenOptions.data = value;\n\n            if (!hasChildren) {\n                hasChildren = childrenOptions.schema.data;\n            }\n\n            if (typeof hasChildren === STRING) {\n                hasChildren = kendo.getter(hasChildren);\n            }\n\n            if (isFunction(hasChildren)) {\n                var hasChildrenObject = hasChildren.call(that, that);\n\n                if (hasChildrenObject && hasChildrenObject.length === 0) {\n                    that.hasChildren = false;\n                } else {\n                    that.hasChildren = !!hasChildrenObject;\n                }\n            }\n\n            that._childrenOptions = childrenOptions;\n\n            if (that.hasChildren) {\n                that._initChildren();\n            }\n\n            that._loaded = !!(value && value._loaded);\n        },\n\n        _initChildren: function() {\n            var that = this;\n            var children, transport, parameterMap;\n\n            if (!(that.children instanceof HierarchicalDataSource)) {\n                children = that.children = new HierarchicalDataSource(that._childrenOptions);\n\n                transport = children.transport;\n                parameterMap = transport.parameterMap;\n\n                transport.parameterMap = function(data, type) {\n                    data[that.idField || \"id\"] = that.id;\n\n                    if (parameterMap) {\n                        data = parameterMap.call(that, data, type);\n                    }\n\n                    return data;\n                };\n\n                children.parent = function() {\n                    return that;\n                };\n\n                children.bind(CHANGE, function(e) {\n                    e.node = e.node || that;\n                    that.trigger(CHANGE, e);\n                });\n\n                children.bind(ERROR, function(e) {\n                    var collection = that.parent();\n\n                    if (collection) {\n                        e.node = e.node || that;\n                        collection.trigger(ERROR, e);\n                    }\n                });\n\n                children.bind(ITEMSLOADED, function(e) {\n                    var collection = that.parent();\n\n                    if (collection) {\n                        collection.trigger(ITEMSLOADED, e);\n                    }\n                });\n\n                that._updateChildrenField();\n            }\n        },\n\n        append: function(model) {\n            this._initChildren();\n            this.loaded(true);\n            this.children.add(model);\n        },\n\n        hasChildren: false,\n\n        level: function() {\n            var parentNode = this.parentNode(),\n                level = 0;\n\n            while (parentNode && parentNode.parentNode) {\n                level++;\n                parentNode = parentNode.parentNode ? parentNode.parentNode() : null;\n            }\n\n            return level;\n        },\n\n        _updateChildrenField: function() {\n            var fieldName = this._childrenOptions.schema.data;\n\n            this[fieldName || \"items\"] = this.children.data();\n        },\n\n        _childrenLoaded: function() {\n            this._loaded = true;\n\n            this._updateChildrenField();\n        },\n\n        load: function() {\n            var options = {};\n            var method = \"_query\";\n            var children, promise;\n\n            if (this.hasChildren) {\n                this._initChildren();\n\n                children = this.children;\n\n                options[this.idField || \"id\"] = this.id;\n\n                if (!this._loaded) {\n                    children._data = undefined$1;\n                    method = \"read\";\n                }\n\n                children.one(CHANGE, this._childrenLoaded.bind(this));\n\n                if (this._matchFilter) {\n                    options.filter = { field: '_matchFilter', operator: 'eq', value: true };\n                }\n\n                promise = children[method](options);\n                if (!this._loaded) {\n                    this.trigger(ITEMLOAD, { promise: promise, node: this });\n                }\n            } else {\n                this.loaded(true);\n            }\n\n            return promise || $.Deferred().resolve().promise();\n        },\n\n        parentNode: function() {\n            var array = this.parent();\n\n            return array.parent();\n        },\n\n        loaded: function(value) {\n            if (value !== undefined$1) {\n                this._loaded = value;\n            } else {\n                return this._loaded;\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return Model.fn.shouldSerialize.call(this, field) &&\n                    field !== \"children\" &&\n                    field !== \"_loaded\" &&\n                    field !== \"hasChildren\" &&\n                    field !== \"_childrenOptions\";\n        }\n    });\n\n    function dataMethod(name) {\n        return function() {\n            var data = this._data,\n                result = DataSource.fn[name].apply(this, slice.call(arguments));\n\n            if (this._data != data) {\n                this._attachBubbleHandlers();\n            }\n\n            return result;\n        };\n    }\n\n    var HierarchicalDataSource = DataSource.extend({\n        init: function(options) {\n            var node = Node.define({\n                children: options\n            });\n\n            if (options.filter && !options.serverFiltering) {\n                this._hierarchicalFilter = options.filter;\n                options.filter = null;\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, { schema: { modelBase: node, model: node } }, options));\n\n            this._attachBubbleHandlers();\n        },\n\n        _attachBubbleHandlers: function() {\n            var that = this;\n\n            that._data.bind(ERROR, function(e) {\n                that.trigger(ERROR, e);\n            });\n\n            that._data.bind(ITEMSLOADED, function(e) {\n                that.trigger(ITEMSLOADED, e);\n            });\n        },\n\n        loading: function() {\n            if (this._data) {\n                return this._data.loading() || this._childrenLoading();\n            }\n            return false;\n        },\n\n        _childrenLoading: function() {\n            var isLoading = false;\n            this._data.forEach(function(node) {\n                if (node.hasChildren && node.children.loading()) {\n                    isLoading = true;\n                }\n            });\n            return isLoading;\n        },\n\n        read: function(data) {\n            var result = DataSource.fn.read.call(this, data);\n\n            if (this._hierarchicalFilter) {\n                if (this._data && this._data.length > 0) {\n                    this.filter(this._hierarchicalFilter);\n                } else {\n                    this.options.filter = this._hierarchicalFilter;\n                    this._filter = normalizeFilter(this.options.filter);\n                    this._hierarchicalFilter = null;\n                }\n            }\n\n            return result;\n        },\n\n        remove: function(node) {\n            var parentNode = node.parentNode(),\n                dataSource = this,\n                result;\n\n            if (parentNode && parentNode._initChildren) {\n                dataSource = parentNode.children;\n            }\n\n            result = DataSource.fn.remove.call(dataSource, node);\n\n            if (parentNode && !dataSource.data().length) {\n                parentNode.hasChildren = false;\n            }\n\n            return result;\n        },\n\n        success: dataMethod(\"success\"),\n\n        data: dataMethod(\"data\"),\n\n        insert: function(index, model) {\n            var parentNode = this.parent();\n\n            if (parentNode && parentNode._initChildren) {\n                parentNode.hasChildren = true;\n                parentNode._initChildren();\n            }\n\n            return DataSource.fn.insert.call(this, index, model);\n        },\n\n        filter: function(val) {\n            if (val === undefined$1) {\n                 return this._filter;\n            }\n\n            if (!this.options.serverFiltering && this._markHierarchicalQuery(val)) {\n                val = { logic: \"or\", filters: [val, { field: '_matchFilter', operator: 'equals', value: true }] };\n            }\n\n            this.trigger(\"reset\");\n            this._query({ filter: val, page: 1 });\n        },\n\n        _markHierarchicalQuery: function(expressions) {\n            var compiled;\n            var accentFoldingFiltering = this.options.accentFoldingFiltering;\n\n            expressions = accentFoldingFiltering ? $.extend({}, normalizeFilter(expressions), { accentFoldingFiltering: accentFoldingFiltering }) : normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                this._updateHierarchicalFilter(function() {return true;});\n                return false;\n            }\n\n            compiled = Query.filterExpr(expressions, { noEval: true });\n\n            this._updateHierarchicalFilter(compiled);\n            return true;\n        },\n\n         _updateHierarchicalFilter: function(filter) {\n            var current;\n            var data = this._data;\n            var result = false;\n\n            for (var idx = 0; idx < data.length; idx++) {\n                 current = data[idx];\n\n                 if (current.hasChildren) {\n                     current._matchFilter = current.children._updateHierarchicalFilter(filter);\n                    if (!current._matchFilter) {\n                        current._matchFilter = filter(current);\n                    }\n                } else {\n                    current._matchFilter = filter(current);\n                }\n\n                if (current._matchFilter) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n\n        _find: function(method, value) {\n            var idx, length, node, children;\n            var data = this._data;\n\n            if (!data) {\n                return;\n            }\n\n            node = DataSource.fn[method].call(this, value);\n\n            if (node) {\n                return node;\n            }\n\n            data = this._flatData(this._data);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                children = data[idx].children;\n\n                if (!(children instanceof HierarchicalDataSource)) {\n                    continue;\n                }\n\n                node = children[method](value);\n\n                if (node) {\n                    return node;\n                }\n            }\n        },\n\n        get: function(id) {\n            return this._find(\"get\", id);\n        },\n\n        getByUid: function(uid) {\n            return this._find(\"getByUid\", uid);\n        }\n    });\n\n    function inferList(list, fields) {\n        var items = $(list).children(),\n            idx,\n            length,\n            data = [],\n            record,\n            textField = fields[0].field,\n            urlField = fields[1] && fields[1].field,\n            spriteCssClassField = fields[2] && fields[2].field,\n            imageUrlField = fields[3] && fields[3].field,\n            item,\n            id,\n            textChild,\n            className,\n            children;\n\n        function elements(collection, tagName) {\n            return collection.filter(tagName).add(collection.find(tagName));\n        }\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            record = { _loaded: true };\n            item = items.eq(idx);\n\n            textChild = item[0].firstChild;\n            children = item.children();\n            list = children.filter(\"ul\");\n            children = children.filter(\":not(ul)\");\n\n            id = item.attr(\"data-id\");\n\n            if (id) {\n                record.id = id;\n            }\n\n            if (textChild) {\n                record[textField] = textChild.nodeType == 3 ? textChild.nodeValue : children.text();\n            }\n\n            if (urlField) {\n                record[urlField] = elements(children, \"a\").attr(\"href\");\n            }\n\n            if (imageUrlField) {\n                record[imageUrlField] = elements(children, \"img\").attr(\"src\");\n            }\n\n            if (spriteCssClassField) {\n                className = elements(children, \".k-sprite\").prop(\"className\");\n                record[spriteCssClassField] = className && kendo.trim(className.replace(\"k-sprite\", \"\"));\n            }\n\n            if (list.length) {\n                record.items = inferList(list.eq(0), fields);\n            }\n\n            if (item.attr(\"data-hasChildren\") == \"true\") {\n                record.hasChildren = true;\n            }\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    HierarchicalDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            list = dataSource.list;\n\n        if (data && data._dataSource) {\n            return data._dataSource;\n        }\n\n        if (!data && fields && !dataSource.transport) {\n            if (list) {\n                data = inferList(list, fields);\n            }\n        }\n\n        dataSource.data = data;\n\n        return dataSource instanceof HierarchicalDataSource ? dataSource : new HierarchicalDataSource(dataSource);\n    };\n\n    var Buffer = kendo.Observable.extend({\n        init: function(dataSource, viewSize, disablePrefetch) {\n            kendo.Observable.fn.init.call(this);\n\n            this._prefetching = false;\n            this.dataSource = dataSource;\n            this.prefetch = !disablePrefetch;\n\n            var buffer = this;\n\n            dataSource.bind(\"change\", function() {\n                buffer._change();\n            });\n\n            dataSource.bind(\"reset\", function() {\n                buffer._reset();\n            });\n\n            this._syncWithDataSource();\n\n            this.setViewSize(viewSize);\n        },\n\n        setViewSize: function(viewSize) {\n            this.viewSize = viewSize;\n            this._recalculate();\n        },\n\n        at: function(index) {\n            var pageSize = this.pageSize,\n                itemPresent = true;\n\n            if (index >= this.total()) {\n                this.trigger(\"endreached\", { index: index });\n                return null;\n            }\n\n            if (!this.useRanges) {\n               return this.dataSource.view()[index];\n            }\n            if (this.useRanges) {\n                // out of range request\n                if (index < this.dataOffset || index >= this.skip + pageSize) {\n                    itemPresent = this.range(Math.floor(index / pageSize) * pageSize);\n                }\n\n                // prefetch\n                if (index === this.prefetchThreshold) {\n                    this._prefetch();\n                }\n\n                // mid-range jump - prefetchThreshold and nextPageThreshold may be equal, do not change to else if\n                if (index === this.midPageThreshold) {\n                    this.range(this.nextMidRange, true);\n                }\n                // next range jump\n                else if (index === this.nextPageThreshold) {\n                    this.range(this.nextFullRange);\n                }\n                // pull-back\n                else if (index === this.pullBackThreshold) {\n                    if (this.offset === this.skip) { // from full range to mid range\n                        this.range(this.previousMidRange);\n                    } else { // from mid range to full range\n                        this.range(this.previousFullRange);\n                    }\n                }\n\n                if (itemPresent) {\n                    return this.dataSource.at(index - this.dataOffset);\n                } else {\n                    this.trigger(\"endreached\", { index: index });\n                    return null;\n                }\n            }\n        },\n\n        indexOf: function(item) {\n            return this.dataSource.data().indexOf(item) + this.dataOffset;\n        },\n\n        total: function() {\n            return parseInt(this.dataSource.total(), 10);\n        },\n\n        next: function() {\n            var buffer = this,\n                pageSize = buffer.pageSize,\n                offset = buffer.skip - buffer.viewSize + pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize;\n\n            this.offset = offset;\n            this.dataSource.prefetch(pageSkip, pageSize, function() {\n                buffer._goToRange(offset, true);\n            });\n        },\n\n        range: function(offset, nextRange) {\n            if (this.offset === offset) {\n                return true;\n            }\n\n            var buffer = this,\n                pageSize = this.pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize,\n                dataSource = this.dataSource;\n\n            if (nextRange) {\n                pageSkip += pageSize;\n            }\n\n            if (dataSource.inRange(offset, pageSize)) {\n                this.offset = offset;\n                this._recalculate();\n                this._goToRange(offset);\n                return true;\n            } else if (this.prefetch) {\n                dataSource.prefetch(pageSkip, pageSize, function() {\n                    buffer.offset = offset;\n                    buffer._recalculate();\n                    buffer._goToRange(offset, true);\n                });\n                return false;\n            }\n\n            return true;\n        },\n\n        syncDataSource: function() {\n            var offset = this.offset;\n            this.offset = null;\n            this.range(offset);\n        },\n\n        destroy: function() {\n            this.unbind();\n        },\n\n        _prefetch: function() {\n            var buffer = this,\n                pageSize = this.pageSize,\n                prefetchOffset = this.skip + pageSize,\n                dataSource = this.dataSource;\n\n            if (!dataSource.inRange(prefetchOffset, pageSize) && !this._prefetching && this.prefetch) {\n                this._prefetching = true;\n                this.trigger(\"prefetching\", { skip: prefetchOffset, take: pageSize });\n\n                dataSource.prefetch(prefetchOffset, pageSize, function() {\n                    buffer._prefetching = false;\n                    buffer.trigger(\"prefetched\", { skip: prefetchOffset, take: pageSize });\n                });\n            }\n        },\n\n        _goToRange: function(offset, expanding) {\n            if (this.offset !== offset) {\n                return;\n            }\n\n            this.dataOffset = offset;\n            this._expanding = expanding;\n            this.dataSource.range(offset, this.pageSize);\n            this.dataSource.enableRequestsInProgress();\n        },\n\n        _reset: function() {\n            this._syncPending = true;\n        },\n\n        _change: function() {\n            var dataSource = this.dataSource;\n\n            this.length = this.useRanges ? dataSource.lastRange().end : dataSource.view().length;\n\n            if (this._syncPending) {\n                this._syncWithDataSource();\n                this._recalculate();\n                this._syncPending = false;\n                this.trigger(\"reset\", { offset: this.offset });\n            }\n\n            this.trigger(\"resize\");\n\n            if (this._expanding) {\n                this.trigger(\"expand\");\n            }\n\n            delete this._expanding;\n        },\n\n        _syncWithDataSource: function() {\n            var dataSource = this.dataSource;\n\n            this._firstItemUid = dataSource.firstItemUid();\n            this.dataOffset = this.offset = dataSource.skip() || 0;\n            this.pageSize = dataSource.pageSize();\n            this.useRanges = dataSource.options.serverPaging;\n        },\n\n        _recalculate: function() {\n            var pageSize = this.pageSize,\n                offset = this.offset,\n                viewSize = this.viewSize,\n                skip = Math.ceil(offset / pageSize) * pageSize;\n\n            this.skip = skip;\n            this.midPageThreshold = skip + pageSize - 1;\n            this.nextPageThreshold = skip + viewSize - 1;\n            this.prefetchThreshold = skip + Math.floor(pageSize / 3 * 2);\n            this.pullBackThreshold = this.offset - 1;\n\n            this.nextMidRange = skip + pageSize - viewSize;\n            this.nextFullRange = skip;\n            this.previousMidRange = offset - viewSize;\n            this.previousFullRange = skip - pageSize;\n        }\n    });\n\n    var BatchBuffer = kendo.Observable.extend({\n        init: function(dataSource, batchSize) {\n            var batchBuffer = this;\n\n            kendo.Observable.fn.init.call(batchBuffer);\n\n            this.dataSource = dataSource;\n            this.batchSize = batchSize;\n            this._total = 0;\n\n            this.buffer = new Buffer(dataSource, batchSize * 3);\n\n            this.buffer.bind({\n                \"endreached\": function(e) {\n                    batchBuffer.trigger(\"endreached\", { index: e.index });\n                },\n                \"prefetching\": function(e) {\n                    batchBuffer.trigger(\"prefetching\", { skip: e.skip, take: e.take });\n                },\n                \"prefetched\": function(e) {\n                    batchBuffer.trigger(\"prefetched\", { skip: e.skip, take: e.take });\n                },\n                \"reset\": function() {\n                    batchBuffer._total = 0;\n                    batchBuffer.trigger(\"reset\");\n                },\n                \"resize\": function() {\n                    batchBuffer._total = Math.ceil(this.length / batchBuffer.batchSize);\n                    batchBuffer.trigger(\"resize\", { total: batchBuffer.total(), offset: this.offset });\n                }\n            });\n        },\n\n        syncDataSource: function() {\n            this.buffer.syncDataSource();\n        },\n\n        at: function(index) {\n            var buffer = this.buffer,\n                skip = index * this.batchSize,\n                take = this.batchSize,\n                view = [],\n                item;\n\n            if (buffer.offset > skip) {\n                buffer.at(buffer.offset - 1);\n            }\n\n            for (var i = 0; i < take; i++) {\n                item = buffer.at(skip + i);\n\n                if (item === null) {\n                    break;\n                }\n\n                view.push(item);\n            }\n\n            return view;\n        },\n\n        total: function() {\n            return this._total;\n        },\n\n        destroy: function() {\n            this.buffer.destroy();\n            this.unbind();\n        }\n    });\n\n    extend(true, kendo.data, {\n        readers: {\n            json: DataReader\n        },\n        Query: Query,\n        DataSource: DataSource,\n        HierarchicalDataSource: HierarchicalDataSource,\n        Node: Node,\n        Comparer: Comparer,\n        ObservableObject: ObservableObject,\n        ObservableArray: ObservableArray,\n        LazyObservableArray: LazyObservableArray,\n        LocalTransport: LocalTransport,\n        RemoteTransport: RemoteTransport,\n        Cache: Cache,\n        DataReader: DataReader,\n        Model: Model,\n        Buffer: Buffer,\n        BatchBuffer: BatchBuffer\n    });\n})(window.kendo.jQuery);\n"]}