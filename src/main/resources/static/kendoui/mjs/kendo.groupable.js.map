{"version":3,"file":"kendo.groupable.js","names":["__meta__","id","name","category","depends","advanced","$","undefined$1","kendo","window","Widget","ui","outerWidth","_outerWidth","kendoAttr","attr","extend","each","isRtl","ASCENDING","GROUP_SORT","NS","hint","target","title","htmlEncode","html","prepend","dropCue","Groupable","init","element","options","draggable","horizontalCuePosition","that","this","group","guid","intializePositions","_intializePositions","bind","dropCuePositions","_dropCuePositions","fn","call","support","Draggable","filter","draggableElements","groupContainer","kendoDropTarget","dragenter","e","_canDrag","currentTarget","find","removeClass","addClass","css","appendTo","dragleave","remove","drop","position","targetElement","field","colID","sourceIndicator","indicator","lastCuePosition","length","sortOptions","sort","data","dir","hasClass","_dropCuePosition","getOffset","left","parseInt","_canDrop","before","buildIndicator","after","_setIndicatorSortOptions","_change","empty","append","kendoDraggable","dragcancel","_dragCancel","dragstart","marginLeft","elementPosition","dragend","_dragEnd","drag","_drag","on","preventDefault","_removeIndicator","parent","newDir","marginRight","allowDrag","dataSource","_refreshHandler","unbind","refresh","indicatorHtml","groups","fieldAttr","titleAttr","index","compare","_invalidateGroupContainer","destroy","off","events","messages","indicators","grep","item","ns","replace","aggregates","names","idx","map","cell","aggregate","member","split","push","toArray","descriptors","indicatorSortOptions","trigger","removeData","is","Math","ceil","right","event","x","location","source","next","dropped","plugin","jQuery"],"sources":["kendo.groupable.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.draganddrop.js';\n\nvar __meta__ = {\n    id: \"groupable\",\n    name: \"Groupable\",\n    category: \"framework\",\n    depends: [ \"core\", \"draganddrop\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        outerWidth = kendo._outerWidth,\n        kendoAttr = kendo.attr,\n        extend = $.extend,\n        each = $.each,\n        isRtl = false,\n\n        DIR = \"dir\",\n        FIELD = \"field\",\n        TITLE = \"title\",\n        ASCENDING = \"asc\",\n        DESCENDING = \"desc\",\n        REMOVEGROUP = \"removeGroup\",\n        GROUP_SORT = \"group-sort\",\n        NS = \".kendoGroupable\",\n        CHANGE = \"change\",\n        indicatorTmpl = (data) => `<div class=\"k-group-indicator\" data-${data.ns}field=\"${data.field}\" ${data.id ? (\"data-\" + data.ns + \"id=\" + data.id) : \"\"} data-${data.ns}title=\"${data.title || \"\"}\" data-${data.ns}dir=\"${data.dir || \"asc\"}\">\n                <a role=\"button\" title=\"(sorted ${(data.dir || \"asc\") == \"asc\" ? \"ascending\" : \"descending\"})\" href=\"#\" class=\"k-link\">\n                    <span class=\"k-icon k-i-sort-${(data.dir || \"asc\") == \"asc\" ? \"asc-sm\" : \"desc-sm\"}\" title=\"(sorted ${(data.dir || \"asc\") == \"asc\" ? \"ascending\" : \"descending\"})\"></span>\n                    ${data.title ? data.title : data.field}\n                </a>\n                <a href=\"#\" role=\"button\" data-role=\"button\" aria-label=\"Remove grouping by ${data.title || data.field} field\" class=\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button\">\n                    <span class=\"k-button-icon k-icon k-i-close\"></span>\n                </a>\n             </div>`,\n        hint = function(target) {\n            var title = target.attr(kendo.attr(\"title\"));\n            if (title) {\n                title = kendo.htmlEncode(title);\n            }\n\n            return $('<div class=\"k-group-clue k-drag-clue\" />')\n                .html(title || target.attr(kendo.attr(\"field\")))\n                .prepend('<span class=\"k-icon k-drag-status k-i-cancel\"></span>');\n        },\n        dropCue = $('<div class=\"k-grouping-dropclue\"/>');\n\n    var Groupable = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                group = kendo.guid(),\n                intializePositions = that._intializePositions.bind(that),\n                draggable,\n                horizontalCuePosition,\n                dropCuePositions = that._dropCuePositions = [];\n\n            Widget.fn.init.call(that, element, options);\n\n            isRtl = kendo.support.isRtl(element);\n            horizontalCuePosition = isRtl ? \"right\" : \"left\";\n\n            that.draggable = draggable = that.options.draggable || new kendo.ui.Draggable(that.element, {\n                filter: that.options.draggableElements,\n                hint: hint,\n                group: group\n            });\n\n            that.groupContainer = $(that.options.groupContainer, that.element)\n                .kendoDropTarget({\n                    group: draggable.options.group,\n                    dragenter: function(e) {\n                        if (that._canDrag(e.draggable.currentTarget)) {\n                            e.draggable.hint.find(\".k-drag-status\").removeClass(\"k-i-cancel\").addClass(\"k-i-plus\");\n                            dropCue.css(horizontalCuePosition, 0).appendTo(that.groupContainer);\n                        }\n                    },\n                    dragleave: function(e) {\n                        e.draggable.hint.find(\".k-drag-status\").removeClass(\"k-i-plus\").addClass(\"k-i-cancel\");\n                        dropCue.remove();\n                    },\n                    drop: function(e) {\n                        var targetElement = e.draggable.currentTarget,\n                            field = targetElement.attr(kendo.attr(\"field\")),\n                            title = targetElement.attr(kendo.attr(\"title\")),\n                            colID = targetElement.attr(\"id\"),\n                            sourceIndicator = that.indicator(field),\n                            dropCuePositions = that._dropCuePositions,\n                            lastCuePosition = dropCuePositions[dropCuePositions.length - 1],\n                            position;\n                        var sortOptions = extend({}, that.options.sort, targetElement.data(GROUP_SORT));\n                        var dir = sortOptions.dir;\n\n                        if (!targetElement.hasClass(\"k-group-indicator\") && !that._canDrag(targetElement)) {\n                            return;\n                        }\n                        if (lastCuePosition) {\n                            position = that._dropCuePosition(kendo.getOffset(dropCue).left + parseInt(lastCuePosition.element.css(\"marginLeft\"), 10) * (isRtl ? -1 : 1) + parseInt(lastCuePosition.element.css(\"marginRight\"), 10));\n                            if (position && that._canDrop($(sourceIndicator), position.element, position.left)) {\n                                if (position.before) {\n                                    position.element.before(sourceIndicator || that.buildIndicator(field, title, dir, colID));\n                                } else {\n                                    position.element.after(sourceIndicator || that.buildIndicator(field, title, dir, colID));\n                                }\n\n                                that._setIndicatorSortOptions(field, sortOptions);\n                                that._change();\n                            }\n                        } else {\n                            that.groupContainer.empty();\n                            that.groupContainer.append(that.buildIndicator(field, title, dir, colID));\n                            that._setIndicatorSortOptions(field, sortOptions);\n                            that._change();\n                        }\n                    }\n                })\n                .kendoDraggable({\n                    filter: \"div.k-group-indicator\",\n                    hint: hint,\n                    group: draggable.options.group,\n                    dragcancel: that._dragCancel.bind(that),\n                    dragstart: function(e) {\n                        var element = e.currentTarget,\n                            marginLeft = parseInt(element.css(\"marginLeft\"), 10),\n                            elementPosition = element.position(),\n                            left = isRtl ? elementPosition.left - marginLeft : elementPosition.left + outerWidth(element);\n\n                        intializePositions();\n                        dropCue.css(\"left\", left).appendTo(that.groupContainer);\n                        this.hint.find(\".k-drag-status\").removeClass(\"k-i-cancel\").addClass(\"k-i-plus\");\n                    },\n                    dragend: function() {\n                        that._dragEnd(this);\n                    },\n                    drag: that._drag.bind(that)\n                })\n                .on(\"click\" + NS, \".k-button\", function(e) {\n                    e.preventDefault();\n                    that._removeIndicator($(this).parent());\n                })\n                .on(\"click\" + NS,\".k-link\", function(e) {\n                    var indicator = $(this).parent();\n                    var newDir = indicator.attr(kendoAttr(DIR)) === ASCENDING ? DESCENDING : ASCENDING;\n\n                    indicator.attr(kendoAttr(DIR), newDir);\n                    that._change();\n                    e.preventDefault();\n                });\n\n            draggable.bind([ \"dragend\", \"dragcancel\", \"dragstart\", \"drag\" ],\n            {\n                dragend: function() {\n                    that._dragEnd(this);\n                },\n                dragcancel: that._dragCancel.bind(that),\n                dragstart: function(e) {\n                    var element, marginRight, left;\n\n                    if (!that.options.allowDrag && !that._canDrag(e.currentTarget)) {\n                        e.preventDefault();\n                        return;\n                    }\n\n                    intializePositions();\n                    if (dropCuePositions.length) {\n                        element = dropCuePositions[dropCuePositions.length - 1].element;\n                        marginRight = parseInt(element.css(\"marginRight\"), 10);\n                        left = element.position().left + outerWidth(element) + marginRight;\n                    } else {\n                        left = 0;\n                    }\n                },\n                drag: that._drag.bind(that)\n            });\n\n            that.dataSource = that.options.dataSource;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n            }\n\n            if (that.dataSource) {\n                that.dataSource.bind(\"change\", that._refreshHandler);\n                that.refresh();\n            }\n        },\n\n        refresh: function() {\n            var that = this,\n                dataSource = that.dataSource;\n            var groups = dataSource.group() || [];\n            var fieldAttr = kendoAttr(FIELD);\n            var titleAttr = kendoAttr(TITLE);\n            var indicatorHtml;\n\n            if (that.groupContainer) {\n                that.groupContainer.empty();\n\n                each(groups, function(index, group) {\n                    var field = group.field;\n                    var dir = group.dir;\n                    var element = that.element\n                        .find(that.options.filter)\n                        .filter(function() {\n                            return $(this).attr(fieldAttr) === field;\n                        });\n\n                    indicatorHtml = that.buildIndicator(field, element.attr(titleAttr), dir, element.attr(\"id\"));\n                    that.groupContainer.append(indicatorHtml);\n                    that._setIndicatorSortOptions(field, extend({}, that.options.sort, { dir: dir, compare: group.compare }));\n                });\n            }\n\n            that._invalidateGroupContainer();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.groupContainer.off(NS);\n\n            if (that.groupContainer.data(\"kendoDropTarget\")) {\n                that.groupContainer.data(\"kendoDropTarget\").destroy();\n            }\n\n            if (that.groupContainer.data(\"kendoDraggable\")) {\n                that.groupContainer.data(\"kendoDraggable\").destroy();\n            }\n\n            if (!that.options.draggable) {\n                that.draggable.destroy();\n            }\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler);\n                that._refreshHandler = null;\n            }\n\n            that.groupContainer = that.element = that.draggable = null;\n        },\n\n        events: [\"change\", \"removeGroup\"],\n\n        options: {\n            name: \"Groupable\",\n            filter: \"th\",\n            draggableElements: \"th\",\n            messages: {\n                empty: \"Drag a column header and drop it here to group by that column\"\n            },\n            sort: {\n                dir: ASCENDING,\n                compare: null\n            }\n        },\n\n        indicator: function(field) {\n            var indicators = $(\".k-group-indicator\", this.groupContainer);\n            return $.grep(indicators, function(item)\n                {\n                    return $(item).attr(kendo.attr(\"field\")) === field;\n                })[0];\n        },\n\n        buildIndicator: function(field, title, dir, id) {\n            var that = this;\n            var indicator = indicatorTmpl({\n                ns: kendo.ns,\n                field: field.replace(/\"/g, \"'\"),\n                title: title,\n                id: id,\n                dir: dir || (that.options.sort || {}).dir || ASCENDING\n            });\n\n            return indicator;\n        },\n\n        _setIndicatorSortOptions: function(field, options) {\n            var indicator = $(this.indicator(field));\n            indicator.data(GROUP_SORT, options);\n        },\n\n        aggregates: function() {\n            var that = this;\n            var names;\n            var idx;\n            var length;\n\n            return that.element.find(that.options.filter).map(function() {\n                var cell = $(this),\n                    aggregate = cell.attr(kendo.attr(\"aggregates\")),\n                    member = cell.attr(kendo.attr(\"field\"));\n\n                if (aggregate && aggregate !== \"\") {\n                    names = aggregate.split(\",\");\n                    aggregate = [];\n                    for (idx = 0, length = names.length; idx < length; idx++) {\n                        aggregate.push({ field: member, aggregate: names[idx] });\n                    }\n                }\n                return aggregate;\n            }).toArray();\n        },\n\n        descriptors: function() {\n            var that = this,\n                indicators = $(\".k-group-indicator\", that.groupContainer),\n                field,\n                aggregates = that.aggregates();\n\n            return $.map(indicators, function(item) {\n                item = $(item);\n                field = item.attr(kendo.attr(\"field\"));\n                var sortOptions = that.options.sort || {};\n                var indicatorSortOptions = item.data(GROUP_SORT) || {};\n\n                return {\n                    field: field,\n                    dir: item.attr(kendo.attr(\"dir\")),\n                    aggregates: aggregates || [],\n                    colID: item.attr(kendo.attr(\"id\")),\n                    compare: indicatorSortOptions.compare || sortOptions.compare\n                };\n            });\n        },\n\n        _removeIndicator: function(indicator) {\n            var that = this;\n\n            that.trigger(REMOVEGROUP, {\n                field: indicator.attr(kendo.attr(\"field\")),\n                colID: indicator.attr(kendo.attr(\"id\")),\n            });\n            indicator.off();\n            indicator.removeData();\n            indicator.remove();\n            that._invalidateGroupContainer();\n            that._change();\n        },\n\n        _change: function() {\n            var that = this;\n            if (that.dataSource) {\n                var descriptors = that.descriptors();\n                if (that.trigger(\"change\", { groups: descriptors })) {\n                    that.refresh();\n                    return;\n                }\n                that.dataSource.group(descriptors);\n            }\n        },\n\n        _dropCuePosition: function(position) {\n            var dropCuePositions = this._dropCuePositions;\n            if (!dropCue.is(\":visible\") || dropCuePositions.length === 0) {\n                return;\n            }\n\n            position = Math.ceil(position);\n\n            var lastCuePosition = dropCuePositions[dropCuePositions.length - 1],\n                left = lastCuePosition.left,\n                right = lastCuePosition.right,\n                marginLeft = parseInt(lastCuePosition.element.css(\"marginLeft\"), 10),\n                marginRight = parseInt(lastCuePosition.element.css(\"marginRight\"), 10);\n\n            if (position >= right && !isRtl || position < left && isRtl) {\n                position = {\n                    left: lastCuePosition.element.position().left + (!isRtl ? outerWidth(lastCuePosition.element) + marginRight : - marginLeft),\n                    element: lastCuePosition.element,\n                    before: false\n                };\n            } else {\n                position = $.grep(dropCuePositions, function(item) {\n                    return (item.left <= position && position <= item.right) || (isRtl && position > item.right);\n                })[0];\n\n                if (position) {\n                    position = {\n                        left: isRtl ? position.element.position().left + outerWidth(position.element) + marginRight : position.element.position().left - marginLeft,\n                        element: position.element,\n                        before: true\n                    };\n                }\n            }\n\n            return position;\n        },\n        _drag: function(event) {\n            var position = this._dropCuePosition(event.x.location);\n\n            if (position) {\n                dropCue.css({ left: position.left, right: \"auto\" });\n            }\n        },\n        _canDrag: function(element) {\n            var field = element.attr(kendo.attr(\"field\"));\n\n            return element.attr(kendo.attr(\"groupable\")) != \"false\" &&\n                field &&\n                (element.hasClass(\"k-group-indicator\") ||\n                    !this.indicator(field));\n        },\n        _canDrop: function(source, target, position) {\n            var next = source.next(),\n                result = source[0] !== target[0] && (!next[0] || target[0] !== next[0] || (!isRtl && position > next.position().left || isRtl && position < next.position().left));\n            return result;\n        },\n        _dragEnd: function(draggable) {\n            var that = this,\n                field = draggable.currentTarget.attr(kendo.attr(\"field\")),\n                sourceIndicator = that.indicator(field);\n\n            if (draggable !== that.options.draggable && !draggable.dropped && sourceIndicator) {\n                that._removeIndicator($(sourceIndicator));\n            }\n\n            that._dragCancel();\n        },\n        _dragCancel: function() {\n            dropCue.remove();\n            this._dropCuePositions = [];\n        },\n        _intializePositions: function() {\n            var that = this,\n                indicators = $(\".k-group-indicator\", that.groupContainer),\n                left;\n\n            that._dropCuePositions = $.map(indicators, function(item) {\n                item = $(item);\n                left = kendo.getOffset(item).left;\n                return {\n                    left: parseInt(left, 10),\n                    right: parseInt(left + outerWidth(item), 10),\n                    element: item\n                };\n            });\n        },\n        _invalidateGroupContainer: function() {\n            var groupContainer = this.groupContainer;\n            if (groupContainer && groupContainer.is(\":empty\")) {\n                groupContainer.html(this.options.messages.empty);\n            }\n        }\n    });\n\n    kendo.ui.plugin(Groupable);\n\n})(window.kendo.jQuery);\n"]}