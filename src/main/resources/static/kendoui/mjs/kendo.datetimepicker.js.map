{"version":3,"file":"kendo.datetimepicker.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","TimeView","html","parse","parseDate","support","activeElement","_activeElement","extractFormat","_extractFormat","calendar","isInRange","restrictValue","isEqualDatePart","getMilliseconds","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","UP","mouseAndTouchPresent","applyEventMap","slice","DISABLED","READONLY","FOCUSED","STATEDISABLED","MOUSEDOWN","MONTH","ARIA_ACTIVEDESCENDANT","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","DATE","Date","MIN","MAX","dateViewParams","view","timeViewParams","extend","SINGLE_POPUP_TEMPLATE","buttonSize","messages","date","time","cancel","set","STATE_SELECTED","DateTimePicker","init","element","options","initialValue","that","this","componentType","fn","call","disableDates","disabled","min","attr","max","_specifiedRange","normalize","_initialOptions","_wrapper","singlePopup","_popup","_views","_icons","_reset","_template","setAttribute","e","type","addClass","role","dateView","_dateViewID","timeView","_timeViewID","autocomplete","_midnight","_calculateMidnight","is","parents","enable","readonly","value","val","parseFormats","culture","_createDateInput","_old","_update","_oldText","_applyCssClasses","label","_label","notify","format","timeFormat","dates","interval","height","footer","start","depth","animation","month","ARIATemplate","valueType","text","dateButtonText","timeButtonText","dateInput","weekNumber","hour","minute","second","millisecond","now","today","weekColumnHeader","size","fillMode","rounded","events","componentTypes","classic","list","modern","setOptions","currentValue","_value","_current","_dateIcon","off","remove","_timeIcon","_editable","_dateInput","toString","_updateARIA","_inputLabel","_unwrapFloating","dateIcon","timeIcon","wrapper","disable","removeClass","on","_toggleHover","length","removeAttribute","_keydown","bind","_change","current","getToday","close","preventDefault","toggle","_focusElement","labelOptions","isPlainObject","content","floatCheck","_toggleDateMask","_hasDateInput","document","Label","widget","eventType","touch","match","trigger","floatingLabel","destroy","popup","_form","_resetHandler","setTimeout","removeAttr","open","popupHovered","_calendar","ul","find","_hovered","_switchToTimeView","_switchToDateView","_option","visible","secondView","refresh","dateChanged","oldValue","valueUpdated","_typing","textFormatted","option","minDateEqual","maxDateEqual","timeViewOptions","maxSet","getTime","lastTimeOption","dataBind","currentTarget","toggleClass","rebind","old","skip","formattedValue","isSameType","String","grep","d","isDateViewVisible","stopPropagation","stopImmediatePropagation","altKey","keyCode","keys","DOWN","move","ENTER","div","msMin","timeDiv","omitPopup","dateDiv","DateView","anchor","change","_applyDateValue","_currentlySelected","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","_toggleIcons","validateDate","_applyTimeValue","_timeSelected","_adjustListWidth","_updateTitle","active","_optionID","useValueToRender","specifiedRange","adjustedDate","msValue","msMax","setHours","_parse","renderButton","icon","shape","insertAfter","hide","wrap","parent","style","cssText","css","width","className","formId","form","closest","disabledDate","optionsValue","defaultValue","_ariaTemplate","template","DateInput","_updateAria","appendTo","body","append","getValidCssClass","Popup","isRtl","activate","addTranslate","applyValue","_updateRanges","sender","_groupChangeClick","_cancelClickHandler","_setClickHandler","index","eq","_updateCurrentlySelected","getHours","setMinutes","getMinutes","setSeconds","getSeconds","patterns","getCulture","calendars","standard","g","t","unshift","inArray","push","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery"],"sources":["kendo.datetimepicker.js"],"mappings":"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","sourcesContent":["import './kendo.datepicker.js';\nimport './kendo.timepicker.js';\nimport './kendo.html.button.js';\nimport './kendo.label.js';\n\nvar __meta__ = {\n    id: \"datetimepicker\",\n    name: \"DateTimePicker\",\n    category: \"web\",\n    description: \"The DateTimePicker allows the end user to select a value from a calendar or a time drop-down list.\",\n    depends: [ \"datepicker\", \"timepicker\", \"label\" ]\n};\n\n(function($, undefined$1) {\n\n    var kendo = window.kendo,\n        TimeView = kendo.TimeView,\n        html = kendo.html,\n        parse = kendo.parseDate,\n        support = kendo.support,\n        activeElement = kendo._activeElement,\n        extractFormat = kendo._extractFormat,\n        calendar = kendo.calendar,\n        isInRange = calendar.isInRange,\n        restrictValue = calendar.restrictValue,\n        isEqualDatePart = calendar.isEqualDatePart,\n        getMilliseconds = TimeView.getMilliseconds,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        ns = \".kendoDateTimePicker\",\n        CLICK = \"click\" + ns,\n        UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        STATEDISABLED = \"k-disabled\",\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        MOUSEDOWN = \"mousedown\" + ns,\n        MONTH = \"month\",\n        SPAN = \"<span/>\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        DATE = Date,\n        MIN = new DATE(1800, 0, 1),\n        MAX = new DATE(2099, 11, 31),\n        dateViewParams = { view: \"date\" },\n        timeViewParams = { view: \"time\" },\n        extend = $.extend,\n        SINGLE_POPUP_TEMPLATE = ({ buttonSize, messages }) => '<div class=\"k-date-tab k-datetime-wrap\">' +\n                                    '<div class=\"k-datetime-buttongroup\">' +\n                                        '<div class=\"k-button-group k-button-group-stretched\">' +\n                                            `<button class=\"k-button ${buttonSize} k-rounded-md k-button-solid k-button-solid-base k-selected k-group-start\">` +\n                                                `<span class=\"k-button-text\">${messages.date}</span>` +\n                                            '</button>' +\n                                            `<button class=\"k-button ${buttonSize} k-rounded-md k-button-solid k-button-solid-base k-group-end\">` +\n                                                `<span class=\"k-button-text\">${messages.time}</span>` +\n                                            '</button>' +\n                                        '</div>' +\n                                    '</div>' +\n                                    '<div class=\"k-datetime-selector\">' +\n                                        '<div class=\"k-datetime-calendar-wrap\">' +\n                                        '</div>' +\n                                        '<div class=\"k-datetime-time-wrap\">' +\n                                        '</div>' +\n                                    '</div>' +\n                                    '<div class=\"k-datetime-footer k-action-buttons\">' +\n                                        `<button class=\"k-button ${buttonSize} k-rounded-md k-button-solid k-button-solid-base k-time-cancel\" title=\"Cancel\" aria-label=\"Cancel\">` +\n                                            `<span class=\"k-button-text\">${messages.cancel}</span>` +\n                                        '</button>' +\n                                        `<button class=\"k-time-accept k-button ${buttonSize} k-rounded-md k-button-solid k-button-solid-primary\" title=\"Set\" aria-label=\"Set\">` +\n                                            `<span class=\"k-button-text\">${messages.set}</span>` +\n                                        '</button>' +\n                                    '</div>' +\n                                '</div>',\n        STATE_SELECTED = \"k-selected\";\n\n    var DateTimePicker = Widget.extend({\n        init: function(element, options) {\n            var that = this, disabled, initialValue;\n\n            options = options || {};\n            options.componentType = options.componentType || \"classic\";\n            Widget.fn.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n\n            options.disableDates = kendo.calendar.disabled(options.disableDates);\n            options.min = parse(element.attr(\"min\")) || parse(options.min);\n            options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n            if (+options.max != +MAX || +options.min != +MIN) {\n                this._specifiedRange = true;\n            }\n\n            normalize(options);\n\n            that._initialOptions = extend({}, options);\n\n            that._wrapper();\n\n            if (options.singlePopup) {\n                that._popup();\n            }\n\n            that._views();\n\n            that._icons();\n\n            that._reset();\n            that._template();\n\n            try {\n                element[0].setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element[0].type = \"text\";\n            }\n\n            element.addClass(\"k-input-inner\")\n                   .attr({\n                       \"role\": \"combobox\",\n                       \"aria-expanded\": false,\n                       \"aria-haspopup\": \"grid\",\n                       \"aria-controls\": that.dateView._dateViewID + \" \" + that.timeView._timeViewID,\n                       \"autocomplete\": \"off\"\n                   });\n\n\n            that._midnight = that._calculateMidnight(options.min, options.max);\n\n            disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n\n            initialValue = parse(options.value || that.element.val(), options.parseFormats, options.culture);\n\n            that._createDateInput(options);\n\n            that._old = that._update(initialValue || that.element.val());\n            that._oldText = element.val();\n            that._applyCssClasses();\n\n            if (options.label) {\n                that._label();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"DateTimePicker\",\n            value: null,\n            format: \"\",\n            timeFormat: \"\",\n            culture: \"\",\n            parseFormats: [],\n            dates: [],\n            disableDates: null,\n            min: new DATE(MIN),\n            max: new DATE(MAX),\n            interval: 30,\n            height: 200,\n            footer: \"\",\n            start: MONTH,\n            depth: MONTH,\n            animation: {},\n            month: {},\n            ARIATemplate: ({ valueType, text }) => `Current focused ${valueType} is ${text}`,\n            dateButtonText: \"Open the date view\",\n            timeButtonText: \"Open the time view\",\n            dateInput: false,\n            weekNumber: false,\n            messages: {\n                set: \"Set\",\n                cancel: \"Cancel\",\n                hour: \"hour\",\n                minute: \"minute\",\n                second: \"second\",\n                millisecond: \"millisecond\",\n                now: \"Now\",\n                date: \"Date\",\n                time: \"Time\",\n                today: \"Today\",\n                weekColumnHeader: \"\"\n            },\n            componentType: \"classic\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            CHANGE\n        ],\n\n        componentTypes: {\n            \"classic\": {\n                singlePopup: false,\n                timeView: {\n                    list: \"list\"\n                }\n            },\n            \"modern\": {\n                singlePopup: true,\n                timeView: {\n                    list: \"scroll\"\n                }\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                value = that._value,\n                min, max, currentValue;\n\n            Widget.fn.setOptions.call(that, options);\n\n            options = that.options;\n\n            options.min = min = parse(options.min);\n            options.max = max = parse(options.max);\n\n            normalize(options);\n\n            that._midnight = that._calculateMidnight(options.min, options.max);\n\n            currentValue = options.value || that._value || that.dateView._current;\n\n            if (min && !isEqualDatePart(min, currentValue)) {\n                min = new DATE(MIN);\n            }\n\n            if (max && !isEqualDatePart(max, currentValue)) {\n                max = new DATE(MAX);\n            }\n\n            that._dateIcon.off(ns);\n            that._dateIcon.remove();\n            that._timeIcon.off(ns);\n            that._timeIcon.remove();\n\n            that.dateView.setOptions(options);\n\n            that.timeView.setOptions(extend({}, options, {\n                format: options.timeFormat,\n                min: min,\n                max: max\n            }));\n\n            that._icons();\n            that._editable(options);\n            that._createDateInput(options);\n\n            if (!that._dateInput) {\n                that.element.val(kendo.toString(value, options.format, options.culture));\n            }\n\n            if (value) {\n                that._updateARIA(value);\n            }\n\n            if (options.label && that._inputLabel) {\n                that.label.setOptions(options.label);\n            } else if (options.label === false) {\n                that.label._unwrapFloating();\n                that._inputLabel.remove();\n                delete that._inputLabel;\n            } else if (options.label) {\n                that._label();\n            }\n        },\n\n        _editable: function(options) {\n            var that = this,\n                element = that.element.off(ns),\n                dateIcon = that._dateIcon.off(ns),\n                timeIcon = that._timeIcon.off(ns),\n                wrapper = that.wrapper.off(ns),\n                readonly = options.readonly,\n                disable = options.disable;\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n                if (element && element.length) {\n                    element[0].removeAttribute(DISABLED);\n                    element[0].removeAttribute(READONLY, false);\n                    element[0].removeAttribute(ARIA_DISABLED, false);\n                    element[0].removeAttribute(ARIA_READONLY, false);\n                }\n                element.on(\"keydown\" + ns, that._keydown.bind(that))\n                       .on(\"focus\" + ns, function() {\n                           that.wrapper.addClass(FOCUSED);\n                       })\n                       .on(\"focusout\" + ns, function() {\n                           that.wrapper.removeClass(FOCUSED);\n                           if (element.val() !== that._oldText) {\n                               that._change(element.val());\n                               if (!element.val()) {\n                                   that.dateView.current(kendo.calendar.getToday());\n                               }\n                           }\n                           if (that.options.singlePopup) {\n                               return;\n                           }\n                           that.close(\"date\");\n                           that.close(\"time\");\n                       });\n\n               dateIcon.on(MOUSEDOWN, preventDefault)\n                        .on(UP, function(e) {\n                            that.toggle(\"date\");\n                            that._focusElement(e.type);\n                        });\n\n               timeIcon.on(MOUSEDOWN, preventDefault)\n                        .on(UP, function(e) {\n                            that.toggle(\"time\");\n                            that._focusElement(e.type);\n                        });\n\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable)\n                       .attr(ARIA_READONLY, readonly);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var options = that.options;\n            var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                content: options.label\n            };\n\n            if (that._dateInput) {\n                labelOptions.floatCheck = () => {\n                    that._dateInput._toggleDateMask(true);\n\n                    if (!that.value() && !that._dateInput._hasDateInput() && document.activeElement !== that.element[0]) {\n                        that._dateInput._toggleDateMask(false);\n                        return true;\n                    }\n\n                    return false;\n                };\n            }\n\n            that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                widget: that\n            }));\n\n            that._inputLabel = that.label.element;\n        },\n\n        _focusElement: function(eventType) {\n            var element = this.element;\n\n            if ((!support.touch || (support.mouseAndTouchPresent && !(eventType || \"\").match(/touch/i))) && element[0] !== activeElement()) {\n                element.trigger(\"focus\");\n            }\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n            that.dateView.destroy();\n            that.timeView.destroy();\n\n            if (that.label) {\n                that.label.destroy();\n            }\n\n            if (that.options.singlePopup) {\n                that.popup.element.off(ns);\n                that.popup.destroy();\n            }\n\n            that.element.off(ns);\n            that._dateIcon.off(ns);\n            that._timeIcon.off(ns);\n            that.wrapper.off(ns);\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n        },\n\n        close: function(view) {\n            var that = this;\n\n            if (that.options.singlePopup) {\n                that.popup.close();\n            } else {\n                if (view !== \"time\") {\n                    view = \"date\";\n                }\n\n                that[view + \"View\"].close();\n            }\n\n            setTimeout(function() {\n                that.element.removeAttr(\"aria-activedescendant\");\n            });\n        },\n\n        open: function(view) {\n            var that = this;\n            var popupHovered;\n\n            if (that.options.singlePopup) {\n\n                that.dateView._calendar();\n\n                if (that.timeView.ul.find(\"li\").length < 1) {\n                    that.timeView.bind();\n                }\n\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                // Reference: https://github.com/telerik/kendo/pull/7553\n                popupHovered = that.popup._hovered;\n                that.popup._hovered = true;\n\n                that.popup.open();\n\n                if (view === \"time\") {\n                    that._switchToTimeView();\n                } else {\n                    that._switchToDateView();\n                }\n\n                this._dateIcon.toggle(view !== \"time\");\n                this._timeIcon.toggle(view === \"time\");\n\n                setTimeout(function() {\n                    that.popup._hovered = popupHovered;\n                }, 1);\n\n            } else {\n                if (view !== \"time\") {\n                    view = \"date\";\n                }\n\n                this[view + \"View\"].open();\n            }\n        },\n\n        min: function(value) {\n            return this._option(\"min\", value);\n        },\n\n        max: function(value) {\n            return this._option(\"max\", value);\n        },\n\n        toggle: function(view) {\n            if (this.options.singlePopup) {\n                if (this.popup.visible()) {\n                    this.close();\n                } else {\n                    this.open(view);\n                }\n            } else {\n                var secondView = \"timeView\";\n\n                if (view !== \"time\") {\n                    view = \"date\";\n                } else {\n                    secondView = \"dateView\";\n                }\n\n                this[view + \"View\"].toggle();\n                this[secondView].close();\n            }\n\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            that._old = that._update(value);\n            if (that._old === null) {\n                if (that._dateInput) {\n                    that._dateInput.value(that._old);\n                } else {\n                    that.element.val(\"\");\n                }\n            }\n\n            that._oldText = that.element.val();\n\n            if (that.label && that.label.floatingLabel) {\n                that.label.floatingLabel.refresh();\n            }\n        },\n\n        _change: function(value) {\n            var that = this,\n            oldValue = that.element.val(),\n            dateChanged;\n\n            value = that._update(value);\n            dateChanged = +that._old != +value;\n\n            var valueUpdated = dateChanged && !that._typing;\n            var textFormatted = oldValue !== that.element.val();\n\n            if (valueUpdated || textFormatted) {\n                that.element.trigger(CHANGE);\n            }\n\n            if (dateChanged) {\n                that._old = value;\n                that._oldText = that.element.val();\n\n                that.trigger(CHANGE);\n            }\n\n            that._typing = false;\n        },\n\n        _option: function(option, value) {\n            var that = this;\n            var options = that.options;\n            var timeView = that.timeView;\n            var timeViewOptions = timeView.options;\n            var current = that._value || that._old;\n            var minDateEqual;\n            var maxDateEqual;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = parse(value, options.parseFormats, options.culture);\n            timeViewOptions.maxSet = false;\n\n            if (!value) {\n                return;\n            }\n\n            if (options.min.getTime() === options.max.getTime()) {\n                timeViewOptions.dates = [];\n            }\n\n            options[option] = new DATE(value.getTime());\n            that.dateView[option](value);\n\n            that._midnight = that._calculateMidnight(options.min, options.max);\n\n            if (current) {\n                minDateEqual = isEqualDatePart(options.min, current);\n                maxDateEqual = isEqualDatePart(options.max, current);\n            }\n\n            if (minDateEqual || maxDateEqual) {\n                timeViewOptions[option] = value;\n\n                if (minDateEqual && !maxDateEqual) {\n                    timeViewOptions.max = lastTimeOption(options.interval);\n                }\n\n                if (maxDateEqual) {\n                    if (that._midnight) {\n                        timeView.dataBind([MAX]);\n                        return;\n                    } else if (!minDateEqual) {\n                        timeViewOptions.min = MIN;\n                        timeViewOptions.maxSet = true;\n                    }\n                }\n            } else {\n                timeViewOptions.max = MAX;\n                timeViewOptions.min = MIN;\n            }\n\n            timeView.bind();\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _update: function(value) {\n            var that = this,\n                options = that.options,\n                min = options.min,\n                max = options.max,\n                dates = options.dates,\n                timeView = that.timeView,\n                current = that._value,\n                date = parse(value, options.parseFormats, options.culture),\n                isSameType = (date === null && current === null) || (date instanceof Date && current instanceof Date),\n                rebind, timeViewOptions, old, skip, formattedValue;\n\n            if (options.disableDates && options.disableDates(date)) {\n                date = null;\n                if (!that._old && !that.element.val()) {\n                    value = null;\n                }\n            }\n\n            if (+date === +current && isSameType) {\n                formattedValue = kendo.toString(date, options.format, options.culture);\n\n                if (formattedValue !== value ) {\n                    that.element.val(date === null ? value : formattedValue);\n                    if (value instanceof String) {\n                        that.element.trigger(CHANGE);\n                    }\n                }\n\n                return date;\n            }\n\n            if (date !== null && isEqualDatePart(date, min)) {\n                date = restrictValue(date, min, max);\n            } else if (!isInRange(date, min, max)) {\n                date = null;\n            }\n\n            that._value = date;\n            timeView.value(date);\n            that.dateView.value(date);\n\n            if (date) {\n                old = that._old;\n                timeViewOptions = timeView.options;\n                timeViewOptions.maxSet = false;\n\n                if (dates[0]) {\n                    dates = $.grep(dates, function(d) { return isEqualDatePart(date, d); });\n\n                    if (dates[0]) {\n                        timeView.dataBind(dates);\n                        skip = true;\n                    }\n                }\n\n                if (!skip) {\n                    if (isEqualDatePart(date, min)) {\n                        timeViewOptions.min = min;\n                        timeViewOptions.max = lastTimeOption(options.interval);\n                        rebind = true;\n                    }\n\n                    if (isEqualDatePart(date, max)) {\n                        if (that._midnight) {\n                            timeView.dataBind([MAX]);\n                            skip = true;\n                        } else {\n                            timeViewOptions.max = max;\n                            timeViewOptions.maxSet = true;\n                            if (!rebind) {\n                                timeViewOptions.min = MIN;\n                            }\n                            rebind = true;\n                        }\n                    }\n                }\n\n                if (!skip && ((!old && rebind) || (old && !isEqualDatePart(old, date)))) {\n                    if (!rebind) {\n                        timeViewOptions.max = MAX;\n                        timeViewOptions.min = MIN;\n                    }\n\n                    timeView.bind();\n                }\n            }\n            if (that._dateInput) {\n                if (date) {\n                    that._dateInput.value(date);\n                }\n            } else {\n                that.element.val(kendo.toString(date || value, options.format, options.culture));\n            }\n            that._updateARIA(date);\n\n            return date;\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                dateView = that.dateView,\n                timeView = that.timeView,\n                value = that.element.val(),\n                isDateViewVisible = that.options.singlePopup ? that.popup.visible() : dateView.popup.visible();\n\n            var stopPropagation = that._dateInput && e.stopImmediatePropagation;\n\n            if (e.altKey && e.keyCode === kendo.keys.DOWN) {\n                that.toggle(isDateViewVisible ? \"time\" : \"date\");\n            } else if (isDateViewVisible) {\n                dateView.move(e);\n                that._updateARIA(dateView._current);\n\n                if (e.keyCode === kendo.keys.ENTER) {\n                    that.toggle(\"time\");\n                }\n            } else if (!that.options.singlePopup && timeView.popup.visible()) {\n                timeView.move(e);\n            } else if (e.keyCode === kendo.keys.ENTER && value !== that._oldText) {\n                that._change(value);\n            } else {\n                that._typing = true;\n                stopPropagation = false;\n            }\n            if (stopPropagation) {\n                e.stopImmediatePropagation();\n            }\n        },\n\n        _views: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                id = element.attr(\"id\"),\n                dateView, timeView,\n                div, ul, msMin,\n                date,\n                timeDiv,\n                omitPopup,\n                timeViewOptions;\n\n            if (options.singlePopup) {\n                options.dateDiv = that.popup.element.find(\".k-datetime-calendar-wrap\");\n                timeDiv = that.popup.element.find(\".k-datetime-time-wrap\");\n                options.omitPopup = omitPopup = true;\n                timeViewOptions = options.timeView;\n            }\n\n            that.dateView = dateView = new kendo.DateView(extend({}, options, {\n                id: id,\n                anchor: that.wrapper,\n                change: function() {\n                    var value = that._applyDateValue();\n\n                    if (options.singlePopup) {\n                        if (!that.timeView._currentlySelected) {\n                            that.timeView._currentlySelected = new Date();\n                        }\n                        that.timeView._currentlySelected.setFullYear(value.getFullYear());\n                        that.timeView._currentlySelected.setMonth(value.getMonth());\n                        that.timeView._currentlySelected.setDate(value.getDate());\n                        that._switchToTimeView();\n                        that._toggleIcons();\n                    } else {\n                        that._change(value);\n                        that.close(\"date\");\n                    }\n                },\n                close: function(e) {\n                    if (that.trigger(CLOSE, dateViewParams)) {\n                        e.preventDefault();\n                    } else {\n                        element.attr(ARIA_EXPANDED, false);\n                        div.attr(ARIA_HIDDEN, true);\n                    }\n                },\n                open: function(e) {\n                    if (that.trigger(OPEN, dateViewParams)) {\n                        e.preventDefault();\n                    } else {\n\n                        if (element.val() !== that._oldText) {\n                            date = parse(element.val(), options.parseFormats, options.culture);\n\n                            that.dateView[date ? \"current\" : \"value\"](date);\n                        }\n\n                        div.attr(ARIA_HIDDEN, false);\n                        element.attr(ARIA_EXPANDED, true);\n\n                        that._updateARIA(date);\n                    }\n                }\n            }));\n            div = dateView.div;\n\n            msMin = options.min.getTime();\n            that.timeView = timeView = new TimeView({\n                id: id,\n                value: options.value,\n                size: options.size,\n                anchor: that.wrapper,\n                animation: options.animation,\n                format: options.timeFormat,\n                culture: options.culture,\n                height: options.componentType === \"modern\" ? null : options.height,\n                interval: options.interval,\n                min: options.componentType === \"modern\" ? options.min : new DATE(MIN),\n                max: options.componentType === \"modern\" ? options.max : new DATE(MAX),\n                dates: msMin === options.max.getTime() ? [new Date(msMin)] : [],\n                parseFormats: options.parseFormats,\n                validateDate: true,\n                change: function(value, trigger) {\n                    value = that._applyTimeValue(value);\n\n                    if (trigger) {\n                        that._timeSelected = true;\n                        that._change(value);\n                    } else {\n                        element.val(kendo.toString(value, options.format, options.culture));\n                        dateView.value(value);\n                        that._updateARIA(value);\n                    }\n                },\n                close: function(e) {\n                    if (that.trigger(CLOSE, timeViewParams)) {\n                        e.preventDefault();\n                    } else {\n                        ul.attr(ARIA_HIDDEN, true);\n                        element.attr(ARIA_EXPANDED, false);\n                    }\n                },\n                open: function(e) {\n                    if (that.options.componentType !== \"modern\") {\n                        timeView._adjustListWidth();\n                    } else {\n                        that.timeView._updateTitle();\n                    }\n\n                    if (that.trigger(OPEN, timeViewParams)) {\n                        e.preventDefault();\n                    } else {\n                        if (element.val() !== that._oldText) {\n                            date = parse(element.val(), options.parseFormats, options.culture);\n\n                            that.timeView.value(date);\n                        }\n\n                        ul.attr(ARIA_HIDDEN, false);\n                        element.attr(ARIA_EXPANDED, true);\n\n                        timeView.options.active(timeView.current());\n                    }\n                },\n                active: function(current) {\n                    if (element && element.length) {\n                        element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                    }\n                    if (current) {\n                        element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                    }\n                },\n                popup: options.popup,\n                useValueToRender: true,\n                specifiedRange: that._specifiedRange,\n                omitPopup: omitPopup,\n                timeDiv: timeDiv,\n                timeView: timeViewOptions,\n                messages: that.options.messages\n            });\n            ul = timeView.ul;\n        },\n\n        _applyDateValue: function() {\n            var that = this;\n            var options = that.options;\n            var dateView = that.dateView;\n            var value = dateView.calendar.value();\n            var msValue = +value;\n            var msMin = +options.min;\n            var msMax = +options.max;\n            var current, adjustedDate;\n\n            if (msValue === msMin || msValue === msMax) {\n                current = msValue === msMin ? msMin : msMax;\n                current = new DATE(that._value || current);\n                current.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n\n                if (isInRange(current, msMin, msMax)) {\n                    value = current;\n                }\n            }\n\n            if (that._value) {\n\n                adjustedDate = kendo.date.setHours(new Date(value), that._value);\n\n                if (isInRange(adjustedDate, msMin, msMax)) {\n                    value = adjustedDate;\n                }\n            }\n\n            return value;\n        },\n\n        _applyTimeValue: function(value) {\n            var timeView = this.timeView;\n            var options = this.options;\n\n            value = timeView._parse(value);\n\n            if (value < options.min) {\n                value = new DATE(+options.min);\n                timeView.options.min = value;\n            } else if (value > options.max) {\n                value = new DATE(+options.max);\n                timeView.options.max = value;\n            }\n\n            return value;\n        },\n\n        _icons: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var icons;\n\n            icons = that.wrapper.find(\"button.k-input-button\");\n\n            if (!icons[0]) {\n                that._dateIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.dateButtonText + '\"></button>', {\n                    icon: \"calendar\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(element);\n                that._timeIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.timeButtonText + '\"></button>', {\n                    icon: \"clock\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(element);\n            }\n\n            if (options.singlePopup) {\n                that._timeIcon.hide();\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n            element = that.element,\n            wrapper;\n\n            wrapper = element.parents(\".k-datetimepicker\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap(SPAN).parent();\n            }\n\n            wrapper[0].style.cssText = element[0].style.cssText;\n            element.css({\n                width: \"100%\",\n                height: element[0].style.height\n            });\n\n            that.wrapper = wrapper.addClass(\"k-datetimepicker k-input\")\n                .addClass(element[0].className).removeClass('input-validation-error');\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\"),\n                options = that.options,\n                disabledDate = options.disableDates,\n                parseFormats = options.parseFormats.length ? options.parseFormats : null,\n                optionsValue = that._initialOptions.value,\n                initialValue = element[0].defaultValue;\n\n            if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                optionsValue = null;\n            }\n\n            if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                element.attr(\"value\", kendo.toString(optionsValue, options.format, options.culture));\n            }\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    that.value(optionsValue || element[0].defaultValue);\n                    that.max(that._initialOptions.max);\n                    that.min(that._initialOptions.min);\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _template: function() {\n            this._ariaTemplate = kendo.template(this.options.ARIATemplate).bind(this);\n        },\n\n        _createDateInput: function(options) {\n            if (this._dateInput) {\n                this._dateInput.destroy();\n                this._dateInput = null;\n            }\n\n            if (options.dateInput ) {\n                this._dateInput = new ui.DateInput(this.element, {\n                    culture: options.culture,\n                    format: options.format,\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    rounded: options.rounded,\n                    min: options.min,\n                    max: options.max,\n                    interval: options.interval\n                });\n            }\n        },\n\n        _calculateMidnight: function(min, max) {\n            return getMilliseconds(min) + getMilliseconds(max) === 0;\n        },\n\n        _updateARIA: function(date) {\n            var that = this;\n            var calendar = that.dateView.calendar;\n\n            if (that.element && that.element.length) {\n                that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n            }\n\n            if (calendar) {\n                that.element.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n            }\n        },\n        _popup: function() {\n            var that = this;\n            var options = that.options;\n            var div = $(\"<div></div>\").attr(ARIA_HIDDEN, \"true\")\n                .addClass(\"k-datetime-container k-group k-reset\")\n                .appendTo(document.body);\n\n            div.append(kendo.template(SINGLE_POPUP_TEMPLATE)(extend({}, that.options, {\n                buttonSize: kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size)\n            })));\n            that.popup = new ui.Popup(div, extend(options.popup, options, {\n                name: \"Popup\",\n                isRtl: kendo.support.isRtl(that.wrapper),\n                anchor: that.wrapper,\n                activate: function() {\n                    if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                        that.timeView.addTranslate();\n                        that.timeView.applyValue(that._value);\n                        that.timeView._updateRanges();\n                    }\n                },\n                open: function(e) {\n                    if (that.trigger(OPEN, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                        e.preventDefault();\n                    } else {\n                        this.element.attr(ARIA_HIDDEN, false);\n                        that.element.attr(ARIA_EXPANDED, true);\n                    }\n\n                    that.timeView._updateTitle();\n                },\n                close: function(e) {\n                    if (that.trigger(CLOSE, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                        e.preventDefault();\n                    } else {\n                        that.element.attr(ARIA_EXPANDED, false);\n                        this.element.attr(ARIA_HIDDEN, true);\n                    }\n                }\n            }));\n\n            div.on(CLICK + ns, \".k-datetime-buttongroup .k-button\", that._groupChangeClick.bind(that));\n            div.on(CLICK + ns, \".k-datetime-footer button.k-time-cancel\", that._cancelClickHandler.bind(that));\n            div.on(CLICK + ns, \".k-datetime-footer button.k-time-accept\", that._setClickHandler.bind(that));\n        },\n\n        _groupChangeClick: function(e) {\n            preventDefault(e);\n            var button = $(e.currentTarget);\n            var index = button.index();\n\n            if (index) {\n                this._switchToTimeView();\n            } else {\n                this._switchToDateView();\n            }\n            this._toggleIcons();\n        },\n\n        _switchToDateView: function() {\n            this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(0).addClass(STATE_SELECTED);\n            this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-time-tab\").addClass(\"k-date-tab\");\n        },\n\n        _switchToTimeView: function() {\n            this.timeView.addTranslate();\n            this.timeView.applyValue(this._value);\n            this.timeView._updateRanges();\n            this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(1).addClass(STATE_SELECTED);\n            this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-date-tab\").addClass(\"k-time-tab\");\n        },\n\n        _toggleIcons: function() {\n            this._dateIcon.toggle();\n            this._timeIcon.toggle();\n        },\n\n        _cancelClickHandler: function(e) {\n            preventDefault(e);\n            if (this._value) {\n                this.value(this._value);\n                this.dateView.value(this._value);\n            }\n            this.popup.close();\n        },\n\n        _setClickHandler: function(e) {\n            preventDefault(e);\n            var value = this._applyDateValue();\n            var time;\n\n            value = value || new Date();\n            time = this.timeView._currentlySelected || value;\n            this.timeView._updateCurrentlySelected();\n            value.setHours(time.getHours());\n            value.setMinutes(time.getMinutes());\n            value.setSeconds(time.getSeconds());\n            value = this._applyTimeValue(value);\n\n            this._change(value);\n            this.popup.close();\n        }\n    });\n\n    function lastTimeOption(interval) {\n        var date = new Date(2100, 0, 1);\n        date.setMinutes(-interval);\n        return date;\n    }\n\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n\n    function normalize(options) {\n        var patterns = kendo.getCulture(options.culture).calendars.standard.patterns,\n            parseFormats = !options.parseFormats.length,\n            timeFormat;\n\n        options.format = extractFormat(options.format || patterns.g);\n        options.timeFormat = timeFormat = extractFormat(options.timeFormat || patterns.t);\n        kendo.DateView.normalize(options);\n\n        if (parseFormats) {\n           options.parseFormats.unshift(\"yyyy-MM-ddTHH:mm:ss\");\n        }\n\n        if ($.inArray(timeFormat, options.parseFormats) === -1) {\n            options.parseFormats.push(timeFormat);\n        }\n    }\n\n    kendo.cssProperties.registerPrefix(\"DateTimePicker\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"DateTimePicker\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(DateTimePicker);\n\n})(window.kendo.jQuery);\n"]}