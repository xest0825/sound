{"version":3,"file":"kendo.taskboard.js","names":["$","undefined$1","kendo","window","extend","ToolBar","ui","Item","toolbar","ACTION","CHANGE","NS","TaskBoardToolBar","init","element","options","that","this","_extendOptions","fn","call","_attachEvents","events","concat","defaultTools","addColumn","type","text","name","command","icon","rules","spacer","search","overflow","bind","_click","_change","tools","items","Object","keys","navigateOnTab","_extendToolsOptions","messages","length","map","tool","toolOptions","attr","isPlainObject","_validateRules","deepExtend","id","guid","attributes","title","buttons","_mapButtonGroups","menuButtons","_mapMenuButtons","hidden","button","states","split","i","ev","target","action","value","val","isToolEnabled","toolName","found","args","trigger","destroy","SearchTool","styles","searchbox","searchInputIcon","input","searchInput","renderIcon","addUidAttr","addIdAttr","addOverflowAttr","placeholder","append","_bindEvents","addClass","searchIcon","_inputHandler","_input","on","off","registerComponent","taskboard","jQuery","Observable","DOT","CLICK","preventDefault","TaskBoardColumn","dataItem","_dataItem","sortableUniqueClass","sortableIdentifier","sortableSuffix","_render","isReorderable","_initSortable","empty","container","addCard","cardHtml","edit","editColumn","_renderEditHeader","getDataItem","cards","children","template","editTemplate","actionButton","builtinButtons","deleteColumn","defaultButtons","headerLabelId","uid","css","width","header","cardsContainer","columnCards","appendTo","_renderHeader","format","dataTextField","_buildActionsHtml","html","setTimeout","find","actions","disabled","spriteCssClass","_actionClick","closest","_textboxBlur","keyCode","ENTER","card","cardTitle","dirClass","isRtl","sortable","Sortable","ignore","ignoreDrag","connectWith","filter","hint","clone","dragHint","grabbingCursor","offsetWidth","height","offsetHeight","dragPlaceholder","move","_move","start","_start","end","_end","change","draggable","userEvents","unbind","_select","ignoreDragSelectors","event","is","columnElement","sender","parents","newIndex","oldIndex","TaskBoardNewColumn","newColumn","Column","NewColumn","headerText","ellipsis","textbox","TaskBoardCard","resources","headerTemplate","bodyTemplate","cardMenuButtonTemplate","categoryColor","_buildTemplate","moveCursor","cardMenu","_resources","borderDir","isDisabled","toggleClass","dataCategoryField","color","get","categoryBorder","cardMenuButton","selectable","isSelectable","key","resource","field","cardResources","getter","multiple","data","dataSource","view","resourceIndex","cardResource","valuePrimitive","dataValueField","dataIndex","resourceColor","dataColorField","result","push","dataTitleField","dataDescriptionField","Card","hbox","link","flatButton","body","actionsIcon","headerActions","ContextMenu","TaskBoardCardMenu","_overrideTemplates","_extendItems","_onSelect","_onOpen","_focus","templates","sprite","defaultItems","editCard","deleteCard","item","_append","_extendItem","isEmptyObject","CardMenu","TaskBoardCommand","Class","_confirm","content","okText","cancel","confirm","taskboardOptions","editable","confirmation","fakePromise","Deferred","resolve","kendoConfirm","buttonLayout","open","AddColumnCommand","exec","column","columns","each","index","enableByColumn","EditColumnCommand","DeleteColumnCommand","columnDS","columnsDataSource","deleteColumnConfirm","done","cancelChanges","remove","sync","SaveColumnCommand","columnSettings","set","CancelEditColumnCommand","MoveFocusCommand","columnIndex","cardElement","currentColumnIndex","direction","Math","max","min","_getColumnByElement","eq","_moveFromCardFocus","focusCard","currentIndex","seekFocusableCard","_getFocusableCard","focus","lastIndex","focusable","TaskBoardBaseCardCommand","_updateOrder","nextCard","dataOrderField","currentCard","cardIndex","idx","prevCard","SelectCardCommand","SaveChangesCommand","taskBoardOptions","receivedStatus","dataStatusField","targetColumn","_getColumn","activeElm","document","activeElement","pane","form","validate","then","DeleteCardCommand","deleteCardConfirm","fail","MoveCardCommand","EditCardCommand","_openPane","AddCardCommand","OpenPaneCommand","ClosePaneCommand","_closePane","SearchCommand","filters","searchOptions","operator","fields","_buildFilters","logic","Command","commands","Form","TaskBoardPane","_commandClick","buttonTemplate","contentTemplate","primary","delete","saveChanges","create","buttonsContainer","footerActions","footerActionButtons","_renderContent","_buildButtonsHtml","_buildHeaderTemplate","TaskBoardPreviewPane","previewPane","_contentTemplate","preview","TaskBoardEditPane","formSettings","label","buttonsTemplate","formLabelId","formData","TaskBoardCreatePane","columnStatusField","firstColumn","at","status","add","createNewCard","Pane","panes","Preview","Edit","Create","footerButton","baseButton","primaryButton","Keyboard","register","registerShortcut","selector","shortcut","isNaN","toUpperCase","charCodeAt","ctrlKey","shiftKey","altKey","handler","_handler","shortcuts","_getAction","_trigger","_compareShortcut","_getShortcutModifier","navigator","platform","indexOf","metaKey","KeyboardManager","__meta__","category","description","depends","TaskBoardStyles","wrapper","columnsContainer","selected","Widget","DataSource","isArray","Array","GENERIC","MOVE","MOVE_START","MOVE_END","SELECT","EXECUTE","ERROR","DATABINDING","DATABOUND","COLUMNSDATABINDING","COLUMNSDATABOUND","TaskBoard","_sortableIdentifier","_wrapper","_columnsDataSource","_initResources","_dataSource","_initToolbar","_initCardMenu","_initKeyboard","autoBind","load","notify","reorderable","previewCard","close","_columns","merge","itemsByStatus","itemsByColumn","columnElm","fetchPromises","_progress","fetch","when","apply","read","cardElm","getByUid","columnDataItem","columnByStatus","select","toggle","removeClass","_extendExecArgs","saveCard","model","_buildStates","_createNewModel","insert","before","executeCommand","saveColumn","keyboardManager","enable","readOnly","readOnlyByColumn","setDataSource","setColumnsDataSource","_renderCards","focusableElement","after","outerWidth","parseInt","ESC","headerElm","contentElm","colsContainer","toolbarElm","toolbarOptions","isEditable","_isEditable","_isReorderable","_isSelectable","isReadOnly","isSearchable","_isSearchable","notLocalColumns","transport","LocalTransport","support","commandName","commandOptions","console","warn","cardDataItem","draggableEvent","elm","ns","sort","dir","schema","defaultValue","_columnsChangeHandler","_columnsErrorHandler","_columnsDataSourceChange","_error","statusField","_moveEnd","_moveStart","_changeOrder","_tabindex","_changeHandler","_errorHandler","_clearColumns","_renderCard","cardMenuOptions","showOn","alignToAnchor","_addResource","_resourceDataSource","resourceDS","progress","_registerShortcuts","DELETE","UP","DOWN","LEFT","RIGHT","closePane","plugin"],"sources":["kendo.taskboard.js"],"mappings":"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","sourcesContent":["import './kendo.toolbar.js';\nimport './kendo.sortable.js';\nimport './kendo.core.js';\nimport './kendo.menu.js';\nimport './kendo.dialog.js';\nimport './kendo.form.js';\nimport './kendo.data.js';\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        ToolBar = kendo.ui.ToolBar,\n        Item = kendo.toolbar.Item,\n\n        CLICK = \"click\",\n        TOGGLE = \"toggle\",\n        CLOSE = \"close\",\n        ACTION = \"action\",\n        CHANGE = \"change\",\n        NS = \".taskBoardToolbar\";\n\n    var TaskBoardToolbarStyles = {\n        searchbox: \"k-searchbox k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n        searchIcon: \"k-input-icon k-icon k-i-search\",\n        searchInput: \"k-input-inner\"\n    };\n\n    var TaskBoardToolBar = ToolBar.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that._extendOptions(options);\n\n            ToolBar.fn.init.call(that, element, options);\n\n            that._attachEvents();\n        },\n\n        events: ToolBar.fn.events.concat([\n            ACTION\n        ]),\n\n        defaultTools: {\n            addColumn: { type: \"button\", text: \"Add Column\", name: \"addColumn\", command: \"AddColumnCommand\", icon: \"plus\", rules: \"isEditable\" },\n            spacer: { type: \"spacer\" },\n            search: { type: \"TaskBoardSearch\", text: \"Search\", name: \"search\", command: \"SearchCommand\", icon: \"search\", overflow: \"never\", rules: \"isSearchable\" }\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.bind(TOGGLE, that._click.bind(that));\n            that.bind(CLOSE, that._click.bind(that));\n            that.bind(CLICK, that._click.bind(that));\n            that.bind(CHANGE, that._change.bind(that));\n        },\n\n        _extendOptions: function(options) {\n            var that = this,\n                tools = options.items ? options.items : Object.keys(that.defaultTools);\n\n            options.navigateOnTab = true;\n\n            that.options = options;\n\n            that.options.items = that._extendToolsOptions(tools);\n        },\n\n        _extendToolsOptions: function(tools) {\n            var that = this,\n                messages = that.options.messages;\n\n            if (!tools.length) {\n                return;\n            }\n\n            return tools.map(function(tool) {\n                var isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name,\n                    attr = {},\n                    toolOptions;\n\n\n                tool = isBuiltInTool ? tool.name : tool;\n                toolOptions = $.isPlainObject(tool) ? tool : extend({}, that.defaultTools[tool] || { name: tool, command: tool + \"Command\", type: \"button\" });\n\n                if (!that._validateRules(toolOptions)) {\n                    return { hidden: true };\n                }\n\n                attr[kendo.attr(\"command\")] = toolOptions.command;\n                attr[kendo.attr(\"options\")] = toolOptions.options;\n\n                kendo.deepExtend(toolOptions, {\n                    id: toolOptions.id || toolOptions.name + \"-\" + kendo.guid(),\n                    name: toolOptions.name,\n                    text: messages[toolOptions.name] || toolOptions.name,\n                    attributes: extend({\n                        \"aria-label\": messages[toolOptions.name] || toolOptions.name,\n                        \"title\": messages[toolOptions.name]\n                    }, attr),\n                    overflow: toolOptions.overflow\n                });\n\n                if (toolOptions.type === \"buttonGroup\") {\n                    toolOptions.buttons = toolOptions.buttons.map(that._mapButtonGroups.bind(that));\n                }\n\n                if (toolOptions.type === \"splitButton\") {\n                    toolOptions.menuButtons = toolOptions.menuButtons.map(that._mapMenuButtons.bind(that));\n                }\n\n                return toolOptions;\n            }, that);\n        },\n\n        _mapButtonGroups: function(button) {\n            var that = this,\n                messages = that.options.messages,\n                attr = {};\n\n            attr[kendo.attr(\"command\")] = button.command;\n            attr[kendo.attr(\"options\")] = button.options;\n\n            return kendo.deepExtend(button, {\n                attributes: extend({}, button.attributes, {\n                    \"aria-label\": messages[button.name],\n                    \"title\": messages[button.name]\n                }, attr)\n            });\n        },\n\n        _mapMenuButtons: function(button) {\n            var that = this,\n                messages = that.options.messages,\n                attr = {};\n\n            attr[kendo.attr(\"command\")] = button.command;\n            attr[kendo.attr(\"options\")] = button.options;\n\n            return kendo.deepExtend(button,{\n                text: messages[button.name],\n                attributes: extend({}, button.attributes, {\n                    \"aria-label\": messages[button.name],\n                    \"title\": messages[button.name]\n                }, attr)\n            });\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _click: function(ev) {\n            var command = $(ev.target).attr(kendo.attr(\"command\")),\n                options = $(ev.target).attr(kendo.attr(\"options\"));\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: options\n            });\n        },\n\n        _change: function(ev) {\n            var command = $(ev.target).attr(kendo.attr(\"command\")),\n                options = $(ev.target).attr(kendo.attr(\"options\"));\n\n            options = extend({}, options, { value: $(ev.target).val() });\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: options\n            });\n        },\n\n        isToolEnabled: function(toolName) {\n            var that = this,\n                options = that.options,\n                found = false;\n\n            for (var i = 0; i < options.items.length; i++) {\n                if (options.items[i].name == toolName) {\n                    found = true;\n                    break;\n                }\n            }\n\n            return options.items[toolName] || found;\n        },\n\n        action: function(args) {\n            this.trigger(ACTION, args);\n        },\n\n        destroy: function() {\n            if (this.search) {\n                this.search.destroy();\n            }\n\n            ToolBar.fn.destroy.call(this);\n        }\n    });\n\n    var SearchTool = Item.extend({\n        init: function(options, toolbar) {\n            var that = this,\n                styles = TaskBoardToolBar.styles,\n                element = $(\"<span class='\" + styles.searchbox + \"'></span>\"),\n                icon = $(\"<span class='\" + styles.searchInputIcon + \"'></span>\"),\n                input = $(\"<input class='\" + styles.searchInput + \"' autocomplete='off' />\");\n\n            that.element = element;\n            that.input = input;\n            that.icon = icon;\n            that.options = options;\n            that.options.type = \"taskBoardSearch\";\n            that.toolbar = toolbar;\n\n            that.attributes();\n            that.renderIcon();\n            that.addUidAttr();\n            that.addIdAttr();\n            that.addOverflowAttr();\n\n            that.input.attr({\n                placeholder: that.options.text,\n                title: that.options.text\n            });\n\n            that.element.append(icon).append(that.input);\n\n            that._bindEvents();\n            that.toolbar.search = that;\n        },\n        attributes: function() {\n            if (this.options.attributes) {\n                this.input.attr(this.options.attributes);\n            }\n        },\n        renderIcon: function() {\n            if (this.options.icon) {\n                this.icon.addClass(TaskBoardToolBar.styles.searchIcon);\n            }\n        },\n        _bindEvents: function() {\n            this._inputHandler = this._input.bind(this);\n            this.input.on(\"input\" + NS, this._inputHandler);\n        },\n        _input: function(ev) {\n            this.toolbar.trigger(CHANGE, { target: ev.target });\n        },\n        destroy: function() {\n            this.element.off(NS);\n        }\n    });\n\n    kendo.toolbar.registerComponent(\"TaskBoardSearch\", SearchTool);\n\n\n    extend(kendo.ui, {\n        taskboard: {\n            ToolBar: TaskBoardToolBar\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.ToolBar, { styles: TaskBoardToolbarStyles });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Observable = kendo.Observable,\n        extend = $.extend,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardColumn\",\n\n        CLICK = \"click\",\n        BLUR = \"blur\",\n\n        MOVE = \"move\",\n        MOVE_START = \"moveStart\",\n        MOVE_END = \"moveEnd\",\n        CHANGE = \"change\",\n        ACTION = \"action\";\n\n    var TaskBoardColumnStyles = {\n        element: \"k-taskboard-column\",\n        header: \"k-taskboard-column-header\",\n        headerText: \"k-taskboard-column-header-text\",\n        ellipsis: \"k-text-ellipsis\",\n        spacer: \"k-spacer\",\n        actions: \"k-taskboard-column-header-actions\",\n        cardsContainer: \"k-taskboard-column-cards-container\",\n        columnCards: \"k-taskboard-column-cards\",\n        actionButton: \"k-taskboard-column-action-button\",\n        button: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        card: \"k-taskboard-card\",\n        cardTitle: \"k-card-title\",\n        sortableSuffix: \"-kendosortable\",\n        textbox: \"k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n        input: \"k-input-inner\",\n        newColumn: \"k-taskboard-column-new\",\n        editColumn: \"k-taskboard-column-edit\",\n        disabled: \"k-disabled\",\n        dragPlaceholder: \"k-taskboard-drag-placeholder\",\n        dragHint: \"k-taskboard-drag-hint\",\n        ignoreDrag: \"k-taskboard-drag-ignore\",\n        grabbingCursor: \"k-cursor-grabbing\"\n    };\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    var TaskBoardColumn = Observable.extend({\n        init: function(options, dataItem) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.options = extend(true, {}, options);\n\n            that.sortableUniqueClass = that.options.sortableIdentifier + TaskBoardColumn.styles.sortableSuffix;\n            that._render();\n            that._attachEvents();\n\n            if (options.states.isReorderable) {\n                that._initSortable();\n            }\n\n            Observable.fn.init.call(that);\n        },\n\n        empty: function() {\n            var that = this;\n            that.container.empty();\n        },\n\n        addCard: function(cardHtml) {\n            var that = this;\n            that.container.append(cardHtml);\n        },\n\n        edit: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles;\n\n            that.element.addClass(styles.editColumn);\n            that._renderEditHeader();\n        },\n\n        getDataItem: function() {\n            return this._dataItem;\n        },\n\n        cards: function() {\n            var that = this;\n\n            return that.container.children();\n        },\n\n        template: '<div class=\"#: styles.headerText # #: styles.ellipsis #\">{0}</div>' +\n                  '<span class=\"#: styles.spacer #\"></span>' +\n                  '#=buttons#',\n\n        editTemplate: '<div class=\"#: styles.headerText # #: styles.ellipsis #\">' +\n                        '<span class=\"#: styles.textbox #\">' +\n                            '<input class=\"#: styles.input #\" placeholder=\"#: {0} ? messages.editColumn : messages.newColumn #\" #:kendo.attr(\"command\")#=\"SaveColumnCommand\" value=\"#:{0}#\" />' +\n                        '</span>' +\n                        '</div>' +\n                        '<span class=\"#: styles.spacer #\"></span>' +\n                        '#=buttons#',\n\n        actionButton: '<button class=\"#: styles.actionButton # #: styles.button #\" title=\"#:text#\" #:kendo.attr(\"command\")#=\"#:command#\" #if(options){##:kendo.attr(\"options\")#=\"#:options#\"#}#>' +\n                        '<i class=\"k-button-icon #:icon# #:spriteCssClass#\"></i>' +\n                      '</button>',\n\n        builtinButtons: {\n            \"editColumn\": { name: \"editColumn\", icon: \"edit\", text: \"Edit Column\", command: \"EditColumnCommand\", rules: \"isEditable\" },\n            \"addCard\": { name: \"addCard\", icon: \"add\", text: \"Add Card\", command: \"AddCardCommand\", rules: \"isEditable\" },\n            \"deleteColumn\": { name: \"deleteColumn\", icon: \"close\", text: \"Delete Column\", command: \"DeleteColumnCommand\", rules: \"isEditable\" }\n        },\n\n        defaultButtons: [ \"editColumn\", \"addCard\", \"deleteColumn\" ],\n\n        _render: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                headerLabelId = kendo.guid(),\n                element = $(\"<div class='\" + styles.element + \"'></div>\")\n                    .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                    .css({\n                        width: that.options.width\n                    })\n                    .attr(\"role\", \"list\").attr(\"aria-labelledby\", headerLabelId),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                cardsContainer = $(\"<div class='\" + styles.cardsContainer + \"'></div>\"),\n                columnCards = $(\"<div class='\" + styles.columnCards + \"'></div>\");\n\n            that.header = header.appendTo(element).attr(\"id\", headerLabelId);\n\n            that._renderHeader();\n\n            cardsContainer.appendTo(element);\n            that.container = columnCards\n                                .appendTo(cardsContainer)\n                                .addClass(that.sortableUniqueClass);\n\n            that.element = element;\n        },\n\n        _renderHeader: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.template ? options.template : kendo.format(that.template, \"#:\" + options.dataTextField + \"#\");\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                buttons: that._buildActionsHtml()\n            }, that._dataItem)));\n        },\n\n        _renderEditHeader: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.editTemplate ? options.editTemplate : kendo.format(that.editTemplate, options.dataTextField);\n\n            that.header.html(\"\");\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                messages: options.messages,\n                buttons: that._buildActionsHtml()\n            }, that._dataItem)));\n\n            setTimeout(function() {\n                that.header.find(\"input\").trigger(\"focus\");\n            }, 0);\n\n            that.header.find(DOT + styles.actions).addClass(styles.disabled);\n        },\n\n        _buildActionsHtml: function() {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardColumn.styles,\n                html = \"<div class='\" + styles.actions + \"'>\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if (typeof button === \"string\") {\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                button.icon = icon;\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.actionButton)(extend(true, {}, {\n                    styles: styles,\n                    options: false\n                }, button));\n            }\n\n            html += \"</div>\";\n\n            return html;\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _actionClick: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _textboxBlur: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.header.on(CLICK + NS,\n                DOT + TaskBoardColumn.styles.actionButton,\n                that._actionClick.bind(that));\n\n            that.header.on(BLUR + NS,\n                DOT + TaskBoardColumn.styles.input,\n                that._textboxBlur.bind(that));\n\n            that.header.on(\"keyup\" + NS,\n                DOT + TaskBoardColumn.styles.input,\n                function(ev) {\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        that._textboxBlur(ev);\n                    }\n                }\n            );\n\n            if (that.container) {\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" [\" + kendo.attr(\"command\") + \"]\",\n                    that._actionClick.bind(that));\n\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" a.\" + TaskBoardColumn.styles.cardTitle,\n                    preventDefault);\n\n            }\n        },\n\n        _initSortable: function() {\n            var that = this,\n                isRtl = that.options.states.isRtl,\n                dirClass = isRtl ? \" k-rtl\" : \"\",\n                container = that.container;\n\n            if (!that.container) {\n                return;\n            }\n\n            that.sortable = new ui.Sortable(container, {\n                ignore: DOT + TaskBoardColumn.styles.ignoreDrag + \" *\",\n                connectWith: DOT + that.sortableUniqueClass,\n                filter: DOT + TaskBoardColumn.styles.card,\n                hint: function(element) {\n                    return element.clone()\n                        .addClass(TaskBoardColumn.styles.dragHint + \" \" + TaskBoardColumn.styles.grabbingCursor + dirClass)\n                        .css({\n                        width: element[0].offsetWidth,\n                        height: element[0].offsetHeight\n                    });\n                },\n                placeholder: function(element) {\n                    return $(\"<div></div>\")\n                        .addClass(TaskBoardColumn.styles.dragPlaceholder)\n                        .css({\n                            height: element[0].offsetHeight\n                        });\n                },\n                move: that._move.bind(that),\n                start: that._start.bind(that),\n                end: that._end.bind(that),\n                change: that._change.bind(that)\n            });\n\n            that.sortable.draggable.userEvents.unbind(\"select\");\n            that.sortable.draggable.userEvents.bind(\"select\", that._select.bind(that));\n        },\n\n        _select: function(ev) {\n            var ignoreDragSelectors = TaskBoardColumn.ignoreDragSelectors;\n            var target = $(ev.event.target);\n\n            for (var i = 0; i < ignoreDragSelectors.length; i++) {\n                if (target.is(ignoreDragSelectors[i])) {\n                    ev.preventDefault();\n                    break;\n                }\n            }\n        },\n\n        _move: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE, ev);\n        },\n\n        _start: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_START, ev);\n        },\n\n        _end: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_END, ev);\n        },\n\n        _change: function(ev) {\n            var that = this;\n\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n\n            that.trigger(CHANGE, ev);\n\n            if ((ev.action === \"receive\" && ev.newIndex >= 0) || (ev.action === \"sort\" && ev.newIndex !== ev.oldIndex)) {\n                that.trigger(ACTION, {\n                    command: \"MoveCardCommand\",\n                    options: ev\n                });\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.header.off(NS);\n            that.container.off(NS);\n\n            if (that.sortable) {\n                that.sortable.destroy();\n            }\n        }\n    });\n\n    var TaskBoardNewColumn = TaskBoardColumn.extend({\n        _render: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\").addClass(styles.newColumn).attr(kendo.attr(\"uid\"), that._dataItem.uid),\n                header = $(\"<div class='\" + styles.header + \"'></div>\");\n\n            that.header = header.appendTo(element);\n\n            that._renderEditHeader();\n\n            that.element = element;\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        Column: TaskBoardColumn,\n        NewColumn: TaskBoardNewColumn\n    });\n\n    extend(true, kendo.ui.taskboard.Column, {\n        styles: TaskBoardColumnStyles,\n        ignoreDragSelectors: [\"img\"]\n    });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n        extend = $.extend;\n\n    var TaskBoardCardStyles = {\n        element: \"k-taskboard-card\",\n        card: \"k-card\",\n        header: \"k-card-header\",\n        hbox: \"k-hbox\",\n        title: \"k-card-title\",\n        link: \"k-link\",\n        spacer: \"k-spacer\",\n        button: \"k-button\",\n        cardMenuButton: \"k-taskboard-card-menu-button k-icon-button\",\n        flatButton: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        body: \"k-card-body\",\n        actionsIcon: \"k-icon k-i-more-vertical\",\n        moveCursor: \"k-cursor-move\",\n        categoryBorder: \"k-taskboard-card-category\",\n        headerActions: \"k-card-header-actions\",\n        disabled: \"k-disabled\"\n    };\n\n    var TaskBoardCard = Observable.extend({\n        init: function(options, dataItem, resources) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.resources = resources;\n\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            Observable.fn.init.call(that);\n        },\n\n        headerTemplate: '<div class=\"#:styles.header# #:styles.hbox#\">' +\n                            '<a class=\"#:styles.title# #:styles.link#\" href=\"\\\\#\" #if(selectable){##:kendo.attr(\"command\")#=\"SelectCardCommand\"#}#>#:{0}#</a>' +\n                            '<span class=\"#:styles.spacer#\"></span>' +\n                            '#=cardMenuButton#' +\n                        '</div>',\n        bodyTemplate: '<div class=\"#:styles.body#\"><p>#:{0}#</p></div>',\n        cardMenuButtonTemplate: '<div class=\"#:styles.headerActions#\"><button aria-label=\"menu\" class=\"#:styles.button# #:styles.flatButton# #:styles.cardMenuButton#\">' +\n                                    '<span class=\"k-button-icon #:styles.actionsIcon#\"></span>' +\n                                '</button></div>',\n\n        _render: function() {\n            var that = this,\n                options = that.options,\n                styles = TaskBoardCard.styles,\n                template = options.template || that._buildTemplate(),\n                element = $(\"<div class='\" + styles.element + \" \" + styles.card + \" \" + styles.moveCursor + \"'></div>\"),\n                cardMenuButtonTemplate = options.cardMenu ? that.cardMenuButtonTemplate : \"\",\n                resources = that._resources(that._dataItem),\n                borderDir = options.states.isRtl ? \"borderRightColor\" : \"borderLeftColor\",\n                categoryColor;\n\n            element\n                .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                .attr(\"aria-disabled\", !options.states.isDisabled)\n                .attr(\"role\", \"listitem\")\n                .toggleClass(styles.disabled, options.states.isDisabled);\n\n            categoryColor = (resources[options.dataCategoryField] && resources[options.dataCategoryField].color) ||\n                                that._dataItem.get(options.dataCategoryField);\n\n            if (categoryColor) {\n                element.addClass(styles.categoryBorder).css(borderDir, categoryColor);\n            }\n\n            element.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                cardMenuButton: kendo.template(cardMenuButtonTemplate)({ styles: styles }),\n                selectable: options.states.isSelectable,\n                resources: resources\n            }, that._dataItem)));\n\n            that.element = element;\n        },\n\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if (resource.multiple) {\n                            if (resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n\n        _buildTemplate: function() {\n            var that = this,\n                options = that.options,\n                headerTemplate = kendo.format(that.headerTemplate, options.dataTitleField),\n                bodyTemplate = kendo.format(that.bodyTemplate, options.dataDescriptionField);\n\n            return headerTemplate + bodyTemplate;\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        Card: TaskBoardCard\n    });\n\n    extend(true, kendo.ui.taskboard.Card, { styles: TaskBoardCardStyles });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        template = kendo.template,\n        ContextMenu = kendo.ui.ContextMenu,\n\n        ACTION = \"action\";\n\n    var TaskBoardCardMenu = ContextMenu.extend({\n        init: function(element, options) {\n            var that = this;\n\n            ContextMenu.fn.init.call(that, element, options);\n\n            that._overrideTemplates();\n            that._extendItems();\n\n            that.bind(\"select\", that._onSelect.bind(that));\n            that.bind(\"open\", that._onOpen.bind(that));\n            that.bind(\"activate\", that._focus.bind(that));\n        },\n\n        _overrideTemplates: function() {\n            this.templates.sprite = template(\"#if(spriteCssClass) {#<span class='#: spriteCssClass #'></span>#}#\");\n        },\n\n        defaultItems: {\n            \"editCard\": { name: \"editCard\", text: \"Edit card\", icon: \"edit\", command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"deleteCard\": { name: \"deleteCard\", text: \"Delete card\", icon: \"delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" }\n        },\n\n        events: ContextMenu.fn.events.concat([\n            ACTION\n        ]),\n\n        _extendItems: function() {\n            var that = this,\n                items = that.options.items,\n                item, isBuiltInTool;\n\n            if (items && items.length) {\n                for (var i = 0; i < items.length; i++) {\n                    item = items[i];\n                    isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                    if (isBuiltInTool) {\n                        item = item.name;\n                    }\n\n                    if ($.isPlainObject(item)) {\n                        that._append(item);\n                    } else if (that.defaultItems[item]) {\n                        item = that.defaultItems[item];\n                        that._append(item);\n                    } else if (typeof(item) === \"string\") {\n                        item = { name: item, text: item, spriteCssClass: item, command: item + \"Command\" };\n                        that._append(item);\n                    }\n                }\n            } else {\n                for (var key in that.defaultItems) {\n                    item = that.defaultItems[key];\n                    that._append(item);\n                }\n            }\n        },\n\n        _append: function(item) {\n            var that = this;\n\n            that._extendItem(item);\n\n            if (that._validateRules(item)) {\n                that.append(item);\n            }\n        },\n\n        _extendItem: function(item) {\n            var that = this,\n                messages = that.options.messages,\n                icon = item.icon ? \"k-icon k-i-\" + item.icon : \"\",\n                attr = {};\n\n            attr[kendo.attr(\"command\")] = item.command;\n\n            if (item.options) {\n                attr[kendo.attr(\"options\")] = item.options;\n            }\n\n            extend(item, {\n                text: messages[item.name],\n                spriteCssClass: icon + \" \" + item.spriteCssClass || \"\",\n                attr: attr,\n                uid: kendo.guid()\n            });\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _onSelect: function(ev) {\n            var command = $(ev.item).attr(kendo.attr(\"command\")),\n                options = $(ev.item).attr(kendo.attr(\"options\")),\n                target = $(ev.target);\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _onOpen: function(ev) {\n            var menu = ev.sender,\n                items = menu.options.items;\n\n            if (!items && $.isEmptyObject(this.defaultItems)) {\n                ev.preventDefault();\n            }\n        },\n\n        _focus: function(ev) {\n            if (ev.sender) {\n                ev.sender.element.trigger(\"focus\");\n            }\n        },\n\n        action: function(args) {\n            this.trigger(ACTION, args);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        CardMenu: TaskBoardCardMenu\n    });\n\n    })(window.kendo.jQuery);\n\n(function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            isPlainObject = $.isPlainObject,\n            Class = kendo.Class;\n\n        var TaskBoardCommand = Class.extend({\n            init: function(options) {\n                this.options = options;\n                this.taskboard = options.taskboard;\n            },\n            _confirm: function(title, content, okText, cancel) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    confirm;\n\n                if (isPlainObject(taskboardOptions.editable) && taskboardOptions.editable.confirmation === false ) {\n                    var fakePromise = $.Deferred();\n                    fakePromise.resolve();\n                    return fakePromise;\n                }\n\n                confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                    title: title,\n                    content: content,\n                    messages: {\n                        okText: okText,\n                        cancel: cancel\n                    },\n                    buttonLayout: \"normal\"\n                })).data(\"kendoConfirm\");\n\n                confirm.open();\n\n                setTimeout(function() {\n                    confirm.element.trigger(\"focus\");\n                });\n\n                return confirm.result;\n            }\n        });\n\n        // Column commands\n        var AddColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: null })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.addColumn();\n            }\n        });\n\n        var EditColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: options.column })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.editColumn(options.columnElement);\n            }\n        });\n\n        var DeleteColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    messages = taskboardOptions.messages,\n                    columnDS = taskboard.columnsDataSource;\n\n                var result = that._confirm(messages.deleteColumn, messages.deleteColumnConfirm, messages[\"delete\"], messages.cancel);\n\n                result.done(function() {\n                    if (taskboard.trigger(\"deleteColumn\", { column: options.column })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    columnDS.remove(options.column);\n                    columnDS.sync();\n                });\n            }\n        });\n\n        var SaveColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    columnSettings = taskboard.options.columnSettings,\n                    columnDS = taskboard.columnsDataSource,\n                    column = options.column,\n                    text = options.target.val();\n\n                if (taskboard.trigger(\"saveColumn\", { column: options.column })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                column.set(columnSettings.dataTextField, text);\n                columnDS.sync();\n            }\n        });\n\n        var CancelEditColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    columnDS = taskboard.columnsDataSource;\n\n                columnDS.cancelChanges();\n            }\n        });\n\n        //Move focus command\n        var MoveFocusCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement,\n                    columnElement = options.columnElement,\n                    columns = taskboard.columns(),\n                    currentColumnIndex = columnElement.index(),\n                    direction = options.value,\n                    columnIndex, column;\n\n                switch (direction) {\n                    case \"left\":\n                        columnIndex = Math.max(0, currentColumnIndex - 1);\n                        break;\n                    case \"right\":\n                        columnIndex = Math.min(columns.length - 1, currentColumnIndex + 1);\n                        break;\n                    default:\n                        columnIndex = currentColumnIndex;\n                        break;\n                }\n\n                that.columns = columns;\n                that.columnIndex = columnIndex;\n                that.column = column = taskboard._getColumnByElement(columns.eq(columnIndex));\n                that.cards = column.cards();\n\n                if (cardElement) {\n                    that._moveFromCardFocus(direction, cardElement);\n                } else if (columnElement && direction === \"down\") {\n                    that.cards.eq(0).trigger(\"focus\");\n                } else {\n                    columns.eq(columnIndex).trigger(\"focus\");\n                }\n            },\n            _moveFromCardFocus: function(direction, cardElement) {\n                var that = this,\n                    currentIndex = cardElement.index(),\n                    focusCard, index, seekFocusableCard = false;\n\n                switch (direction) {\n                    case \"up\":\n                        index = currentIndex - 1;\n                        break;\n                    case \"down\":\n                        index = currentIndex + 1;\n                        break;\n                    default:\n                        seekFocusableCard = true;\n                        index = currentIndex;\n                        break;\n                }\n\n                focusCard = that.cards.eq(index);\n\n                if (!focusCard.length && seekFocusableCard) {\n                    focusCard = that._getFocusableCard(index, direction);\n                }\n\n                if (index >= 0) {\n                    focusCard.trigger(\"focus\");\n                } else {\n                    that.options.columnElement.focus();\n                }\n            },\n            _getFocusableCard: function(index, direction) {\n                var that = this,\n                    lastIndex = that.cards.length - 1,\n                    focusable = that.cards.eq(Math.min(index, lastIndex));\n\n                if (focusable.length) {\n                    return focusable;\n                }\n\n                if (that.columnIndex <= 0 || that.columnIndex >= that.columns.length - 1) {\n                    return;\n                }\n\n                switch (direction) {\n                    case \"left\":\n                        that.columnIndex = Math.max(0, that.columnIndex - 1);\n                        break;\n                    case \"right\":\n                        that.columnIndex = Math.min(that.columns.length - 1, that.columnIndex + 1);\n                        break;\n                }\n\n                that.column = that.taskboard._getColumnByElement(that.columns.eq(that.columnIndex));\n                that.cards = that.column.cards();\n\n                return that._getFocusableCard(index, direction);\n\n            }\n        });\n\n        // Card commands\n        var TaskBoardBaseCardCommand = TaskBoardCommand.extend({\n            _updateOrder: function(column, currentIndex) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    dataOrderField = taskBoardOptions.dataOrderField,\n                    options = that.options,\n                    currentCard = options.card,\n                    cardIndex = options.cardElement ? options.cardElement.index() : column.cards().length,\n                    newIndex = currentIndex,\n                    cards = column.cards().map(function(idx, card) {\n                        return taskboard.dataItem(card);\n                    }),\n                    prevCard = cards[cardIndex - 1],\n                    nextCard;\n\n                    currentCard.set(dataOrderField, newIndex);\n\n                    if (prevCard && prevCard.get(dataOrderField) >= currentCard.get(dataOrderField)) {\n                        currentCard.set(dataOrderField, prevCard.get(dataOrderField) + 1);\n                    }\n\n                    for (var i = newIndex + 1; i < cards.length; i++) {\n                        nextCard = cards[i];\n\n                        if (nextCard.get(dataOrderField) <= currentCard.get(dataOrderField)) {\n                            nextCard.set(dataOrderField, currentCard.get(dataOrderField) + 1);\n                            currentCard = nextCard;\n                        } else {\n                            break;\n                        }\n                    }\n            }\n        });\n\n        var SelectCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement;\n\n                taskboard._select(cardElement, true);\n                cardElement.focus();\n            }\n        });\n\n        var SaveChangesCommand = TaskBoardBaseCardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    options = that.options,\n                    receivedStatus = options.card.get(taskBoardOptions.dataStatusField),\n                    targetColumn = taskboard._getColumn(receivedStatus),\n                    activeElm = $(document.activeElement);\n\n                if (activeElm.length) {\n                    activeElm.trigger(\"change\");\n                }\n\n                if (taskboard.pane && taskboard.pane.form && !taskboard.pane.form.validate()) {\n                    return;\n                }\n\n                if (taskboard.trigger(\"saveCard\", { card: options.card })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                if (targetColumn && taskBoardOptions.dataOrderField) {\n                    that._updateOrder(targetColumn, options.card.get(taskBoardOptions.dataOrderField));\n                }\n\n                taskboard.dataSource.sync().then(function() {\n                    taskboard.columns().eq(0).trigger(\"focus\");\n                });\n            }\n        });\n\n        var DeleteCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    messages = taskboard.options.messages,\n                    options = that.options;\n\n                var result = that._confirm(messages.deleteCard, messages.deleteCardConfirm, messages[\"delete\"], messages.cancel);\n\n                result\n                    .done(function() {\n                        if (taskboard.trigger(\"deleteCard\", { card: options.card })) {\n                            taskboard.dataSource.cancelChanges();\n                            return;\n                        }\n\n                        taskboard.dataSource.remove(options.card);\n                        taskboard.dataSource.sync().then(function() {\n                            taskboard.columns().eq(0).trigger(\"focus\");\n                        });\n                    })\n                    .fail(function() {\n                        options.cardElement.trigger(\"focus\");\n                    });\n            }\n        });\n\n        var MoveCardCommand = TaskBoardBaseCardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    columnSettings = taskBoardOptions.columnSettings,\n                    options = that.options,\n                    receivedStatus = options.column.get(columnSettings.dataStatusField);\n\n                options.card.set(taskBoardOptions.dataStatusField, receivedStatus);\n\n                if (taskBoardOptions.dataOrderField) {\n                    that._updateOrder(taskboard._getColumn(receivedStatus), options.newIndex);\n                }\n\n                taskboard.dataSource.sync();\n            }\n        });\n\n        var EditCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: options.card })) {\n                    return;\n                }\n\n                taskboard._openPane(extend({\n                    pane: \"Edit\"\n                }, options));\n            }\n        });\n\n        var AddCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: null })) {\n                    return;\n                }\n                taskboard.dataSource.cancelChanges();\n                taskboard._openPane(extend({\n                    pane: \"Create\"\n                }, options));\n            }\n        });\n\n        // Pane commands\n        var OpenPaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                taskboard._openPane({\n                    pane: options.value,\n                    card: options.card,\n                    cardElement: options.cardElement,\n                    column: options.column,\n                    columnElement: options.columnElement\n                });\n            }\n        });\n\n        var ClosePaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                taskboard._closePane();\n                taskboard.dataSource.cancelChanges();\n            }\n        });\n\n        // Search command\n\n        var SearchCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    value = that.options.value,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    searchOptions = taskboardOptions.search,\n                    operator = searchOptions.operator,\n                    fields = (searchOptions && searchOptions.fields) || [ taskboardOptions.dataTitleField, taskboardOptions.dataDescriptionField ],\n                    filters;\n\n                filters = that._buildFilters(fields, operator, value);\n\n                taskboard.dataSource.filter(filters);\n            },\n            _buildFilters: function(fields, operator, value) {\n                var filters = fields.map(function(field) {\n                    return { field: field, operator: operator, value: value };\n                });\n\n                return { logic: \"or\", filters: filters };\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            Command: TaskBoardCommand,\n            commands: {\n                AddColumnCommand: AddColumnCommand,\n                EditColumnCommand: EditColumnCommand,\n                DeleteColumnCommand: DeleteColumnCommand,\n                SaveColumnCommand: SaveColumnCommand,\n                CancelEditColumnCommand: CancelEditColumnCommand,\n                OpenPaneCommand: OpenPaneCommand,\n                ClosePaneCommand: ClosePaneCommand,\n                SelectCardCommand: SelectCardCommand,\n                MoveFocusCommand: MoveFocusCommand,\n                SaveChangesCommand: SaveChangesCommand,\n                DeleteCardCommand: DeleteCardCommand,\n                MoveCardCommand: MoveCardCommand,\n                EditCardCommand: EditCardCommand,\n                AddCardCommand: AddCardCommand,\n                SearchCommand: SearchCommand\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        Observable = kendo.Observable,\n\n        Form = kendo.ui.Form,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardPane\",\n\n        ACTION = \"action\",\n        CLICK = \"click\";\n\n    var TaskBoardPaneStyles = {\n        element: \"k-taskboard-pane\",\n        edit: \"k-taskboard-edit-pane\",\n        preview: \"k-taskboard-preview-pane\",\n        header: \"k-taskboard-pane-header\",\n        headerText: \"k-taskboard-pane-header-text\",\n        spacer: \"k-spacer\",\n        headerActions: \"k-taskboard-pane-header-actions\",\n        flatButton: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        content: \"k-taskboard-pane-content\",\n        footerActions: \"k-taskboard-pane-actions\",\n        footerActionButtons: \"k-actions k-hstack k-justify-content-end\",\n        footerButton: \"k-button k-button-md k-rounded-md k-button-solid\",\n        baseButton: \"k-button-solid-base\",\n        primaryButton: \"k-button-solid-primary\"\n    };\n\n    var TaskBoardPane = Observable.extend({\n        init: function(taskboard, options, dataItem, resources) {\n            var that = this;\n\n            that.taskboard = taskboard;\n            that._dataItem = dataItem;\n            that.resources = resources;\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            that.element.on(CLICK + NS,\n                \"[\" + kendo.attr(\"command\") + \"]\",\n                that._commandClick.bind(that));\n\n            Observable.fn.init.call(that);\n        },\n        headerTemplate: '<div class=\"#:styles.headerText#\">{0}</div>' +\n                        '<span class=\"#:styles.spacer#\"></span>' +\n                        '<div class=\"#:styles.headerActions#\">' +\n                            '<button class=\"#:styles.flatButton#\" title=\"#:messages.close#\" #:kendo.attr(\"command\")#=\"ClosePaneCommand\">' +\n                                '<span class=\"k-button-icon k-icon k-i-close\"></span>' +\n                            '</button>' +\n                        '</div>',\n        buttonTemplate: '<button class=\"#:styles.footerButton##if(primary){# #:styles.primaryButton# # } else { # #:styles.baseButton# # } #\" title=\"#:text#\" #:kendo.attr(\"command\")#=\"#:command#\" #:kendo.attr(\"options\")#=\"#:options#\">' +\n                            '<span class=\"k-button-icon #:icon# #:spriteCssClass#\"></span>' +\n                            '<span class=\"k-button-text\">#:text#</span>' +\n                        '</button>',\n        contentTemplate: '',\n        builtinButtons: {\n            \"edit\": { name: \"edit\", icon: \"edit\", text: \"Edit\", primary: true, command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"delete\": { name: \"delete\", icon: \"delete\", text: \"Delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" },\n            \"cancel\": { name: \"cancel\", text: \"Cancel\", command: \"ClosePaneCommand\" },\n            \"saveChanges\": { name: \"saveChanges\", text: \"Save\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" },\n            \"create\": { name: \"create\", text: \"Create\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" }\n        },\n        defaultButtons: [],\n        _render: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\"),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                content = $(\"<div class='\" + styles.content + \"'></div>\"),\n                buttonsContainer = $(\"<div class='\" + styles.footerActions + \" \" + styles.footerActionButtons + \"'></div>\");\n\n            that.header = header.appendTo(element);\n            that._renderHeader();\n            that.content = content.appendTo(element);\n            that._renderContent();\n            that.buttonsContainer = buttonsContainer.appendTo(element);\n            that.buttonsContainer.append(that._buildButtonsHtml());\n            that.element = element;\n        },\n        _renderHeader: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                headerTemplate = options.headerTemplate ? options.headerTemplate : that._buildHeaderTemplate(),\n                resources = that._resources(that._dataItem);\n\n            that.header.append(kendo.template(headerTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources\n            }, that._dataItem)));\n        },\n        _buildHeaderTemplate: function() {\n            var that = this;\n            return kendo.format(that.headerTemplate, \"#:\" + that.options.dataTitleField + \"#\");\n        },\n        _renderContent: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                contentTemplate = options.template || that.contentTemplate,\n                resources = that._resources(that._dataItem);\n\n            that.content.append(kendo.template(contentTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources\n            }, that._dataItem)));\n        },\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if (resource.multiple) {\n                            if (resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n        _buildButtonsHtml: function() {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardPane.styles,\n                html = \"\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if (typeof button === \"string\") {\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                button.icon = icon;\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.buttonTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    primary: false,\n                    options: null\n                }, button));\n            }\n\n            return html;\n        },\n        _commandClick: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\")),\n                card = that._dataItem;\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ card: card }, options)\n            });\n        },\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n            that.element.remove();\n        }\n    });\n\n    var TaskBoardPreviewPane = TaskBoardPane.extend({\n        init: function(taskboard, options, dataItem, resources) {\n            var that = this;\n\n            options = extend({}, options.previewPane, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.contentTemplate = kendo.format(that._contentTemplate, options.dataDescriptionField);\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem, resources);\n\n            that.element.addClass(TaskBoardPane.styles.preview);\n        },\n        _contentTemplate: \"<p>#:{0}#</p>\",\n        defaultButtons: [ \"delete\", \"edit\" ]\n    });\n\n    var TaskBoardEditPane = TaskBoardPane.extend({\n        init: function(taskboard, options, dataItem) {\n            var that = this;\n\n            options = extend({}, options.editable, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.formSettings = extend(that.formSettings, {\n                items: [\n                    { field: options.dataTitleField, label: options.messages[options.dataTitleField] },\n                    { field: options.dataDescriptionField, label: options.messages[options.dataDescriptionField] }\n                ]\n            }, options.form);\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem);\n\n            that.element.addClass(TaskBoardPane.styles.edit);\n        },\n        defaultButtons: [ \"cancel\", \"saveChanges\" ],\n        formSettings: {\n            buttonsTemplate: \"\"\n        },\n        _buildHeaderTemplate: function() {\n            var that = this;\n            return kendo.format(that.headerTemplate, that.options.messages.edit + \" #:\" + that.options.dataTitleField + \"#\");\n        },\n        _renderContent: function() {\n            var that = this,\n                options = that.options,\n                styles = TaskBoardPane.styles,\n                formSettings = options.form || that.formSettings,\n                formLabelId = kendo.guid(),\n                element = $(\"<div></div>\")\n                    .attr(\"role\", \"form\")\n                    .attr(\"aria-labelledby\", formLabelId);\n\n            that.header.find(DOT + styles.headerText).attr(\"id\", formLabelId);\n\n            that.content.append(element);\n\n            that.form = new Form(element, extend({}, formSettings, {\n                formData: that._dataItem\n            }));\n\n            that.form.element.find(\"input\").trigger(\"focus\");\n        }\n    });\n\n    var TaskBoardCreatePane = TaskBoardEditPane.extend({\n        init: function(taskboard, options, dataItem, resources, column) {\n            var that = this,\n                columnStatusField = options.columnSettings.dataStatusField,\n                firstColumn = taskboard.columnsDataSource.view().at(0),\n                status = column ? column[columnStatusField] : firstColumn[columnStatusField],\n                clone = extend({}, dataItem);\n\n            dataItem = taskboard.dataSource.add();\n            dataItem.set(options.dataStatusField, status);\n\n            for (var key in clone) {\n                dataItem.set(key, clone[key]);\n            }\n\n            TaskBoardEditPane.fn.init.call(that, taskboard, options, dataItem, resources);\n        },\n        _buildHeaderTemplate: function() {\n            var that = this;\n            return kendo.format(that.headerTemplate, that.options.messages.createNewCard);\n        },\n        defaultButtons: [ \"cancel\", \"create\" ]\n    });\n\n    extend(kendo.ui.taskboard, {\n        Pane: TaskBoardPane,\n        panes: {\n            Preview: TaskBoardPreviewPane,\n            Edit: TaskBoardEditPane,\n            Create: TaskBoardCreatePane\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.Pane, { styles: TaskBoardPaneStyles });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n\n        extend = $.extend,\n\n        DOT = \".\",\n        NS = DOT + \"kendoKeboardManager\",\n        KEYDOWN = \"keydown\",\n        ACTION = \"action\";\n\n\n    var Keyboard = Observable.extend({\n        init: function(element) {\n            var that = this;\n\n            that.register = {};\n            that.element = element;\n\n            that._attachEvents();\n\n            Observable.fn.init.call(that);\n        },\n\n        registerShortcut: function(selector, shortcut, options) {\n            var that = this;\n\n            if (!that.register[selector]) {\n                that.register[selector] = [];\n            }\n\n            if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n                shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n            }\n\n            that.register[selector].push({\n                shortcut: extend({\n                    keyCode: null,\n                    ctrlKey: false,\n                    shiftKey: false,\n                    altKey: false\n                }, shortcut),\n                options: options\n            });\n\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                handler = that._handler.bind(that);\n\n            that.element.on(KEYDOWN + NS, handler);\n        },\n\n        _handler: function(ev) {\n            var that = this,\n                target = $(ev.target),\n                shortcuts, action;\n\n            for (var selector in that.register) {\n                if (target.is(selector)) {\n                    shortcuts = that.register[selector];\n                    action = that._getAction(shortcuts, ev);\n\n                    if (action) {\n                        that._trigger(action, ev);\n                        break;\n                    }\n                }\n            }\n        },\n\n        _trigger: function(action, ev) {\n            var that = this,\n                target = $(ev.target);\n\n            if (action.command) {\n                that.trigger(ACTION, extend({}, ev, {\n                    command: action.command,\n                    options: extend({}, {\n                        target: target\n                    }, action.options)\n                }));\n            }\n\n            if (action.handler) {\n                action.handler(ev);\n            }\n        },\n\n        _getAction: function(shortcuts, ev) {\n            var that = this;\n\n            for (var i = 0; i < shortcuts.length; i++) {\n                if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                    return shortcuts[i].options;\n                }\n            }\n        },\n\n        _compareShortcut: function(shortcut, ev) {\n            var that = this;\n\n            for (var key in shortcut) {\n                var result = false;\n\n                switch (key) {\n                    case \"ctrlKey\":\n                        result = shortcut[key] !== that._getShortcutModifier(ev);\n                        break;\n                    default:\n                        result = shortcut[key] !== ev[key];\n                        break;\n                }\n\n                if (result) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _getShortcutModifier: function(ev) {\n            var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n            return mac ? ev.metaKey : ev.ctrlKey;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        KeyboardManager: Keyboard\n    });\n\n})(window.kendo.jQuery);\n\nvar __meta__ = {\n        id: \"taskboard\",\n        name: \"TaskBoard\",\n        category: \"web\",\n        description: \"The TaskBoard widget displays cards.\",\n        depends: [\"data\", \"sortable\", \"dialog\", \"form\", \"menu\", \"toolbar\"]\n    };\n\n    var TaskBoardStyles = {\n        wrapper: \"k-taskboard\",\n        header: \"k-taskboard-header\",\n        content: \"k-taskboard-content\",\n        toolbar: \"k-taskboard-toolbar k-toolbar-flat\",\n        columnsContainer: \"k-taskboard-columns-container\",\n        card: \"k-taskboard-card\",\n        column: \"k-taskboard-column\",\n        selected: \"k-selected\",\n        disabled: \"k-disabled\",\n        ignoreDrag: \"k-taskboard-drag-ignore\"\n    };\n\n    var preventDefault = function(ev) { ev.preventDefault(); };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            DataSource = kendo.data.DataSource,\n            extend = $.extend,\n            ui = kendo.ui,\n            isArray = Array.isArray,\n            isPlainObject = $.isPlainObject,\n\n            GENERIC = \"_generic\",\n\n            DOT = \".\",\n\n            MOVE = \"move\",\n            MOVE_START = \"moveStart\",\n            MOVE_END = \"moveEnd\",\n            SELECT = \"select\",\n            EXECUTE = \"execute\",\n            ACTION = \"action\",\n            CHANGE = \"change\",\n            ERROR = \"change\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            EDIT_CARD = \"editCard\",\n            SAVE_CARD = \"saveCard\",\n            DELETE_CARD = \"deleteCard\",\n            EDIT_COLUMN = \"editColumn\",\n            SAVE_COLUMN = \"saveColumn\",\n            DELETE_COLUMN = \"deleteColumn\",\n\n            COLUMNSDATABINDING = \"columnsDataBinding\",\n            COLUMNSDATABOUND = \"columnsDataBound\";\n\n        var TaskBoard = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n\n                that._sortableIdentifier = that.element.attr(\"id\") || kendo.guid();\n\n                that._wrapper();\n                that._columnsDataSource();\n                that._initResources();\n                that._dataSource();\n                that._initToolbar();\n                that._initCardMenu();\n                that._initKeyboard();\n\n                if (that.options.autoBind) {\n                    that.load();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                MOVE,\n                MOVE_START,\n                MOVE_END,\n                CHANGE,\n                EXECUTE,\n                SELECT,\n                DATABINDING,\n                DATABOUND,\n                COLUMNSDATABINDING,\n                COLUMNSDATABOUND,\n                EDIT_CARD,\n                SAVE_CARD,\n                DELETE_CARD,\n                EDIT_COLUMN,\n                SAVE_COLUMN,\n                DELETE_COLUMN\n            ],\n\n            options: {\n                name: \"TaskBoard\",\n                autoBind: true,\n                height: 600,\n                width: \"100%\",\n                toolbar: true,\n                dataStatusField: \"status\",\n                dataTitleField: \"title\",\n                dataDescriptionField: \"description\",\n                dataCategoryField: \"category\",\n                dataOrderField: null,\n                cardMenu: true,\n                editable: true,\n                selectable: true,\n                reorderable: true,\n                previewPane: true,\n                search: {\n                    operator: \"contains\"\n                },\n                dataSource: [],\n                columns: [],\n                columnSettings: {\n                    dataStatusField: \"status\",\n                    dataTextField: \"text\",\n                    dataOrderField: null\n                },\n                resources: [],\n                messages: {\n                    edit: \"Edit\",\n                    createNewCard: \"Create new card\",\n                    create: \"Create\",\n                    search: \"Search\",\n                    previewCard: \"Preview card\",\n                    addCard: \"Add card\",\n                    editCard: \"Edit card\",\n                    deleteCard: \"Delete Card\",\n                    addColumn: \"Add column\",\n                    editColumn: \"Edit column\",\n                    deleteColumn: \"Delete column\",\n                    close: \"Close\",\n                    cancel: \"Cancel\",\n                    \"delete\": \"Delete\",\n                    saveChanges: \"Save changes\",\n                    title: \"Title:\",\n                    description: \"Description:\",\n                    newColumn: \"New column\",\n                    deleteColumnConfirm: \"Are you sure you want to delete this column?\",\n                    deleteCardConfirm: \"Are you sure you want to delete this card?\"\n                }\n            },\n\n            items: function() {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].cards());\n                }\n\n                return result;\n            },\n\n            itemsByStatus: function(status) {\n                var that = this,\n                    result = that._getColumn(status).cards();\n\n                return result;\n            },\n\n            itemsByColumn: function(columnElm) {\n                var that = this,\n                    column = that._getColumnByElement(columnElm);\n\n                if (column) {\n                    return column.cards();\n                }\n            },\n\n            load: function() {\n                var that = this,\n                    fetchPromises = [];\n\n                that._progress(true);\n\n                fetchPromises.push(that.columnsDataSource.fetch());\n\n                for (var key in that.resources) {\n                    fetchPromises.push(that.resources[key].dataSource.fetch());\n                }\n\n                $.when.apply(null, fetchPromises)\n                    .then(that.dataSource.read.bind(that.dataSource));\n            },\n\n            dataItem: function(cardElm) {\n                var that = this,\n                    dataSource = that.dataSource,\n                    uid;\n\n                cardElm = $(cardElm);\n                uid = cardElm.attr(kendo.attr(\"uid\"));\n\n                return dataSource.getByUid(uid);\n            },\n\n            columnDataItem: function(columnElm) {\n                var that = this,\n                    columnsDataSource = that.columnsDataSource,\n                    uid;\n\n                columnElm = $(columnElm);\n                uid = columnElm.attr(kendo.attr(\"uid\"));\n\n                return columnsDataSource.getByUid(uid);\n            },\n\n            columns: function() {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].element);\n                }\n\n                return result;\n            },\n\n            columnByStatus: function(status) {\n                return this._getColumn(status).element;\n            },\n\n            select: function(card, toggle) {\n                var that = this;\n\n                if (!card) {\n                    return that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).eq(0);\n                }\n\n                card = $(card);\n                toggle = toggle !== false;\n\n                if (toggle) {\n                    that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected)\n                        .removeClass(TaskBoard.styles.selected);\n                }\n\n                card.toggleClass(TaskBoard.styles.selected, toggle);\n            },\n\n            previewCard: function(cardElement) {\n                var that = this,\n                    options = that.options,\n                    args = that._extendExecArgs({ target: cardElement });\n\n                if (options.previewPane) {\n                    that._openPane(extend({\n                        pane: \"Preview\"\n                    }, args));\n                }\n            },\n\n            editCard: function(cardElement) {\n                var that = this,\n                    options = that.options,\n                    args;\n\n                cardElement = $(cardElement);\n                args = that._extendExecArgs({ target: cardElement });\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Edit\"\n                    }, args));\n                }\n            },\n\n            saveCard: function() {\n                var that = this;\n\n                that.dataSource.sync();\n            },\n\n            deleteCard: function(cardElement) {\n                var that = this,\n                    card = that.dataItem(cardElement);\n\n                that.dataSource.remove(card);\n                that.dataSource.sync();\n            },\n\n            addCard: function(dataItem) {\n                var that = this,\n                    options = that.options,\n                    args = { card: dataItem };\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Create\"\n                    }, args));\n                }\n            },\n\n            addColumn: function(index, data) {\n                var that = this,\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                    }),\n                    newColumn, model, column;\n\n                if (isNaN(index) && !data) {\n                    data = index;\n                    index = null;\n                }\n\n                model = that.columnsDataSource._createNewModel(data);\n                index = isNaN(index) || index === null ? that.columnsDataSource.data().length : index;\n                column = that.columns().eq(index);\n                that.columnsDataSource.insert(index, model);\n\n                newColumn = new ui.taskboard.NewColumn(columnSettings, model);\n\n                if (isNaN(index) || !column.length) {\n                    that.columnsContainer.append(newColumn.element);\n                } else {\n                    column.before(newColumn.element);\n                }\n\n                newColumn.bind(ACTION, that.executeCommand.bind(that));\n            },\n\n            editColumn: function(columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that._getColumnByElement(columnElement).edit();\n            },\n\n            saveColumn: function() {\n                var that = this;\n\n                that.columnsDataSource.sync();\n            },\n\n            deleteColumn: function(columnElement) {\n                var that = this,\n                    column = that.columnDataItem(columnElement);\n\n                that.columnsDataSource.remove(column);\n                that.columnsDataSource.sync();\n            },\n\n            registerShortcut: function(selector, shortcut, options) {\n                var that = this;\n\n                that.keyboardManager.registerShortcut(selector, shortcut, options);\n            },\n\n            enable: function(cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                cardElement.toggleClass(TaskBoard.styles.disabled, toggle === false);\n                cardElement.attr(\"aria-disabled\", toggle === false);\n            },\n\n            enableByColumn: function(columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card) {\n                    that.enable(card, toggle);\n                });\n            },\n\n            readOnly: function(cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                toggle = toggle !== false;\n\n                cardElement.find(\"[\" + kendo.attr(\"command\") + \"]\").toggleClass(TaskBoard.styles.disabled, toggle);\n                cardElement.find(\"a,button\").toggleClass(TaskBoard.styles.disabled, toggle);\n\n                cardElement.toggleClass(TaskBoard.styles.ignoreDrag, toggle);\n                cardElement.attr(\"aria-readonly\", toggle);\n            },\n\n            readOnlyByColumn: function(columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card) {\n                    that.readOnly(card, toggle);\n                });\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n\n                if (that.options.autoBind) {\n                    that.dataSource.read();\n                }\n            },\n\n            setColumnsDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.columns = dataSource;\n                that._columnsDataSource();\n\n                if (that.options.autoBind) {\n                    that.columnsDataSource.fetch(function() {\n                        that._renderCards(that.dataSource.view());\n                    });\n                }\n            },\n\n            _getColumn: function(status) {\n                return this._columns[status];\n            },\n\n            _getColumnByElement: function(columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                for (var key in that._columns) {\n                    if (that._columns[key].element[0] === columnElement[0]) {\n                        return that._columns[key];\n                    }\n                }\n            },\n\n            _openPane: function(options) {\n                var that = this,\n                    pane = new ui.taskboard.panes[options.pane](that, extend({}, that.options, {\n                        states: that._buildStates()\n                    }), options.card, that.resources, options.column),\n                    focusableElement, keyboardManager;\n\n                if (that.pane) {\n                    that._closePane();\n                }\n\n                that.pane = pane;\n                that.content.after(that.pane.element);\n                that.content.css(\"margin-right\",\n                    that.pane.element.outerWidth() -\n                    parseInt(that.content.css(\"paddingRight\"), 10));\n\n                that.pane.bind(ACTION, that.executeCommand.bind(that));\n\n                that.pane.keyboardManager = keyboardManager = new ui.taskboard.KeyboardManager(that.pane.element);\n\n                keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ESC\n                }, { command: \"ClosePaneCommand\" });\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ENTER\n                }, { command: \"SaveChangesCommand\", options: {\n                    card: that.pane._dataItem\n                } });\n\n                focusableElement = that.pane.element.find(\"input\");\n\n                if (!focusableElement.length) {\n                    focusableElement = that.pane.element.find(\"button\");\n                }\n\n                setTimeout(function() {\n                    focusableElement.eq(0).trigger(\"focus\");\n                }, 0);\n            },\n\n            _closePane: function() {\n                var that = this;\n\n                if (that.pane) {\n                    that.pane.keyboardManager.destroy();\n                    that.pane.unbind(ACTION);\n                    that.pane.destroy();\n                    delete that.pane;\n\n                    that.content.css(\"margin-right\", \"\");\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoard.styles,\n                    headerElm = \"<div class='\" + styles.header + \"'></div>\",\n                    contentElm = \"<div class='\" + styles.content + \"'></div>\",\n                    colsContainer = \"<div class='\" + styles.columnsContainer + \"'></div>\";\n\n                that.element.addClass(styles.wrapper)\n                    .width(options.width)\n                    .height(options.height)\n                    .attr(\"role\", \"application\");\n                that.header = $(headerElm).appendTo(that.element);\n                that.content = $(contentElm).appendTo(that.element);\n                that.columnsContainer = $(colsContainer).appendTo(that.content);\n            },\n\n            _initToolbar: function() {\n                var that = this,\n                    styles = TaskBoard.styles,\n                    options = that.options,\n                    toolbarElm = $(\"<div class='\" + styles.toolbar + \"'></div>\"),\n                    toolbarOptions = isArray(options.toolbar) ? { items: options.toolbar } : options.toolbar;\n\n                if (options.toolbar === false) {\n                    return;\n                }\n\n                toolbarOptions = extend({}, toolbarOptions, {\n                    taskboard: this,\n                    messages: options.messages,\n                    action: that.executeCommand.bind(that),\n                    states: that._buildStates()\n                });\n\n                that.header.append(toolbarElm);\n                that.toolbar = new ui.taskboard.ToolBar(toolbarElm, toolbarOptions);\n            },\n\n            _buildStates: function() {\n                var that = this;\n\n                return {\n                    isEditable: that._isEditable(),\n                    isReorderable: that._isReorderable(),\n                    isSelectable: that._isSelectable(),\n                    isReadOnly: !that._isReorderable() && !that._isEditable(),\n                    isDisabled: !that._isReorderable() && !that._isEditable() && !that._isSelectable(),\n                    isSearchable: that._isSearchable(),\n                    notLocalColumns: !(that.columnsDataSource.transport instanceof kendo.data.LocalTransport),\n                    isRtl: kendo.support.isRtl(that.wrapper)\n                };\n            },\n\n            _isSearchable: function() {\n                return !!this.options.search;\n            },\n\n            _isEditable: function() {\n                return !!this.options.editable;\n            },\n\n            _isReorderable: function() {\n                return !!this.options.reorderable;\n            },\n\n            _isSelectable: function() {\n                return !!this.options.selectable;\n            },\n\n            executeCommand: function(args) {\n                var that = this,\n                    commandName = args.command,\n                    commandOptions = extend({ taskboard: this }, isPlainObject(args.options) ? that._extendExecArgs(args.options) : { value: args.options }),\n                    command = ui.taskboard.commands[commandName] && new ui.taskboard.commands[commandName](commandOptions);\n\n\n                if (!that.trigger(EXECUTE, args)) {\n                    if (command) {\n                        command.exec();\n                    } else {\n                        window.console.warn(kendo.format(\"Trying to use {0} command, but such is not available in the kendo.ui.taskboard.commands namespace!\", commandName));\n                    }\n                }\n            },\n\n            _extendExecArgs: function(args) {\n                var that = this,\n                    target = args.draggableEvent ? args.item : args.target,\n                    columnElm, cardElm, columnDataItem, cardDataItem;\n\n                if (args.card) {\n                    target = that.items().filter(function(idx, elm) {\n                        return $(elm).attr(kendo.attr(\"uid\")) === args.card.get(\"uid\");\n                    });\n                }\n\n                if (!target || !(target && target.length)) {\n                    return args;\n                }\n\n                columnElm = args.columnElement || (target.is(DOT + TaskBoard.styles.column) ? target : target.parents(DOT + TaskBoard.styles.column));\n                columnDataItem = that.columnsDataSource.getByUid(columnElm.data(kendo.ns + \"uid\"));\n                cardElm = target.is(DOT + TaskBoard.styles.card) ? target : target.closest(DOT + TaskBoard.styles.card);\n                cardDataItem = that.dataSource.getByUid(cardElm.data(kendo.ns + \"uid\"));\n\n                return extend(args, {\n                    card: cardDataItem,\n                    cardElement: cardElm.length ? cardElm : undefined$1,\n                    column: columnDataItem,\n                    columnElement: columnElm.length ? columnElm : undefined$1\n                });\n            },\n\n\n            _select: function(card, toggle) {\n                var that = this;\n\n                if (toggle === null) {\n                    toggle = true;\n                }\n\n                if (!that.trigger(SELECT, { card: card })) {\n                    that.select(card, toggle);\n                    that.previewCard(card);\n                }\n            },\n\n            _columnsDataSource: function() {\n                var that = this,\n                    options = that.options,\n                    columnSettings = options.columnSettings,\n                    columnsDataSource = options.columns;\n\n                columnsDataSource = isArray(columnsDataSource) ? { data: columnsDataSource } : columnsDataSource;\n\n                if (columnSettings.dataOrderField && !columnsDataSource.sort) {\n                    columnsDataSource.sort = { field: columnSettings.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!columnsDataSource.schema) {\n                    var fields = {};\n\n                    fields[columnSettings.dataStatusField] = { type: \"string\", defaultValue: function() { return kendo.guid().split(\"-\")[0]; } };\n                    fields[columnSettings.dataTextField] = { type: \"string\" };\n\n                    if (columnSettings.dataOrderField) {\n                        fields[columnSettings.dataOrderField] = { type: \"number\" };\n                    }\n\n                    columnsDataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.columnsDataSource && that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                } else {\n                    that._columnsChangeHandler = that._columnsDataSourceChange.bind(that);\n                    that._columnsErrorHandler = that._error.bind(that);\n                }\n\n                that.columnsDataSource = DataSource.create(columnsDataSource)\n                                .bind(CHANGE, that._columnsChangeHandler)\n                                .bind(ERROR, that._columnsErrorHandler);\n            },\n\n            _columnsDataSourceChange: function(ev) {\n                var that = this,\n                    view = that.columnsDataSource.view(),\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                     }),\n                    statusField = columnSettings.dataStatusField;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(COLUMNSDATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._columns = {};\n                that.columnsContainer.html(\"\");\n\n                for (var i = 0; i < view.length; i++) {\n                    var data = view[i];\n                    var status = data[statusField] || GENERIC;\n                    var column;\n\n                    column = that._columns[status] = new ui.taskboard.Column(columnSettings, data);\n                    that.columnsContainer.append(column.element);\n                    column.bind(ACTION, that.executeCommand.bind(that));\n                    column.bind(MOVE, that._move.bind(that));\n                    column.bind(MOVE_END, that._moveEnd.bind(that));\n                    column.bind(MOVE_START, that._moveStart.bind(that));\n                    column.bind(CHANGE, that._changeOrder.bind(that));\n                    that._tabindex(column.element);\n                }\n\n                if (ev.action === \"sync\" || ev.action === undefined$1) {\n                    that._renderCards(that.dataSource.view());\n                }\n\n                that._progress(false);\n                that.trigger(COLUMNSDATABOUND, ev);\n            },\n\n            _move: function(ev) {\n                this.trigger(MOVE, this._extendExecArgs(ev));\n            },\n\n            _moveEnd: function(ev) {\n                this.trigger(MOVE_END, this._extendExecArgs(ev));\n            },\n\n            _moveStart: function(ev) {\n                this.trigger(MOVE_START, this._extendExecArgs(ev));\n            },\n\n            _changeOrder: function(ev) {\n                this.trigger(CHANGE, this._extendExecArgs(ev));\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                    dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (options.dataOrderField && !dataSource.sort) {\n                    dataSource.sort = { field: options.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!dataSource.schema) {\n                    var fields = {};\n\n                    fields[options.dataStatusField] = { type: \"string\" };\n                    fields[options.dataTitleField] = { type: \"string\" };\n                    fields[options.dataDescriptionField] = { type: \"string\" };\n                    fields[options.dataCategoryField] = { type: \"string\" };\n\n                    if (options.dataOrderField) {\n                        fields[options.dataOrderField] = { type: \"number\" };\n                    }\n\n                    dataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.dataSource && that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                } else {\n                    that._changeHandler = that._change.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = DataSource.create(dataSource)\n                                .bind(CHANGE, that._changeHandler);\n            },\n\n            _change: function(ev) {\n                var that = this;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(DATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._clearColumns();\n                that._renderCards(that.dataSource.view());\n                that._closePane();\n\n                that.trigger(DATABOUND, ev);\n                that._progress(false);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _renderCards: function(data) {\n                var that = this;\n\n                for (var i = 0; i < data.length; i++) {\n                    that._renderCard(data[i]);\n                }\n            },\n\n            _renderCard: function(card) {\n                var that = this,\n                    options = extend({}, that.options, { states: that._buildStates() }),\n                    statusField = options.dataStatusField,\n                    status = card[statusField] || GENERIC;\n\n                if (status && that._columns[status]) {\n                    card = new ui.taskboard.Card(options, card, that.resources);\n                    that._columns[status].addCard(card.element);\n                    that._tabindex(card.element);\n                }\n            },\n\n            _clearColumns: function() {\n                var that = this;\n\n                for (var key in that._columns) {\n                    that._columns[key].empty();\n                }\n            },\n\n            _initCardMenu: function() {\n                var that = this,\n                    options = that.options,\n                    cardMenuOptions = isArray(options.cardMenu) ? { items: options.cardMenu } : options.cardMenu;\n\n                cardMenuOptions = extend({}, {\n                    messages: options.messages,\n                    target: that.columnsContainer,\n                    filter: \".k-taskboard-card-menu-button\",\n                    action: that.executeCommand.bind(that),\n                    showOn: \"click\",\n                    alignToAnchor: true,\n                    states: that._buildStates()\n                }, cardMenuOptions);\n\n                if (options.cardMenu === false) {\n                    return;\n                }\n\n                that.cardMenu = new ui.taskboard.CardMenu(\"<ul></ul>\", cardMenuOptions);\n            },\n\n            _initResources: function() {\n                var that = this,\n                    resources = that.options.resources;\n\n                for (var i = 0; i < resources.length; i++) {\n                    that._addResource(resources[i]);\n                }\n            },\n\n            _addResource: function(resource) {\n                var that = this;\n\n                if (!that.resources) {\n                    that.resources = {};\n                }\n\n                that.resources[resource.field] = {\n                    field: resource.field,\n                    name: resource.name,\n                    title: resource.title || resource.field,\n                    dataTextField: resource.dataTextField || \"text\",\n                    dataValueField: resource.dataValueField || \"value\",\n                    dataColorField: resource.dataColorField || \"color\",\n                    valuePrimitive: resource.valuePrimitive === false ? false : true,\n                    multiple: resource.multiple || false,\n                    dataSource: that._resourceDataSource(resource.dataSource)\n                };\n            },\n\n            _resourceDataSource: function(resourceDS) {\n                var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS,\n                    dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n                return dataSourceInstance;\n            },\n\n            _progress: function(toggle) {\n                var that = this;\n\n                kendo.ui.progress(that.element, toggle);\n            },\n\n            _initKeyboard: function() {\n                var that = this;\n\n                that.keyboardManager = new ui.taskboard.KeyboardManager(that.element);\n\n                that.keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                that._registerShortcuts();\n            },\n\n            _registerShortcuts: function() {\n                var that = this,\n                    states = that._buildStates();\n\n                if (states.isEditable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditColumnCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"a\",\n                        ctrlKey: true\n                    }, { command: \"AddCardCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column + \" *\", {\n                        keyCode: kendo.keys.ESC\n                    }, { command: \"CancelEditColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteCardCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditCardCommand\", handler: preventDefault });\n                }\n\n                if (states.isSelectable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.ENTER\n                    }, { command: \"SelectCardCommand\", handler: preventDefault });\n                }\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.UP\n                }, { command: \"MoveFocusCommand\", options: { value: \"up\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                }\n\n                if (that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                }\n\n                for (var key in that._columns) {\n                    that._columns[key].destroy();\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                }\n\n                if (that.cardMenu) {\n                    that.cardMenu.destroy();\n                }\n\n                if (that.keyboardManager) {\n                    that.keyboardManager.destroy();\n                }\n\n                if (that.pane) {\n                    that.closePane();\n                }\n\n                Widget.fn.destroy.call(that);\n            }\n        });\n\n        kendo.ui.plugin(TaskBoard);\n\n        extend(true, TaskBoard, { styles: TaskBoardStyles });\n\n    })(window.kendo.jQuery);\n"]}