{"version":3,"file":"kendo.taskboard.js","names":["$","undefined$1","kendo","window","ui","Observable","encode","htmlEncode","extend","DOT","NS","CLICK","ACTION","preventDefault","ev","TaskBoardColumn","init","options","dataItem","that","this","_dataItem","sortableUniqueClass","sortableIdentifier","styles","sortableSuffix","_render","_attachEvents","states","isReorderable","_initSortable","fn","call","empty","container","addCard","cardHtml","append","edit","element","addClass","editColumn","_renderEditHeader","getDataItem","cards","children","template","data","headerText","ellipsis","getter","dataTextField","spacer","buttons","editTemplate","textbox","input","messages","newColumn","attr","actionButton","icon","spriteCssClass","text","command","button","builtinButtons","name","rules","deleteColumn","defaultButtons","headerLabelId","guid","uid","css","width","header","cardsContainer","columnCards","appendTo","_renderHeader","_buildActionsHtml","html","setTimeout","find","trigger","actions","disabled","i","length","isPlainObject","Object","keys","_validateRules","tool","split","_actionClick","target","closest","value","_textboxBlur","on","bind","keyCode","ENTER","card","cardTitle","dirClass","isRtl","sortable","Sortable","ignore","ignoreDrag","connectWith","filter","hint","clone","dragHint","grabbingCursor","offsetWidth","height","offsetHeight","placeholder","dragPlaceholder","move","_move","start","_start","end","_end","change","_change","draggable","userEvents","unbind","_select","ignoreDragSelectors","event","is","columnElement","sender","parents","action","newIndex","oldIndex","destroy","off","TaskBoardNewColumn","taskboard","Column","NewColumn","jQuery","TaskBoardCard","resources","contentTemplate","hbox","title","link","selectable","dataTitleField","cardMenuButton","body","dataDescriptionField","cardMenuButtonTemplate","headerActions","flatButton","actionsIcon","categoryColor","moveCursor","cardMenu","_resources","borderDir","isDisabled","toggleClass","dataCategoryField","color","get","categoryBorder","isSelectable","key","resource","field","cardResources","multiple","dataSource","view","resourceIndex","cardResource","valuePrimitive","dataValueField","dataIndex","resourceColor","dataColorField","result","push","_buildTemplate","format","headerTemplate","bodyTemplate","Card","ContextMenu","TaskBoardCardMenu","_overrideTemplates","_extendItems","_onSelect","_onOpen","_focus","templates","sprite","defaultItems","editCard","deleteCard","events","concat","item","items","_append","_extendItem","isEmptyObject","args","CardMenu","TaskBoardCommand","Class","_confirm","content","okText","cancel","confirm","taskboardOptions","editable","confirmation","fakePromise","Deferred","resolve","kendoConfirm","buttonLayout","open","AddColumnCommand","exec","column","columns","each","index","enableByColumn","addColumn","EditColumnCommand","DeleteColumnCommand","columnDS","columnsDataSource","deleteColumnConfirm","done","cancelChanges","remove","sync","SaveColumnCommand","columnSettings","val","set","CancelEditColumnCommand","MoveFocusCommand","columnIndex","cardElement","currentColumnIndex","direction","Math","max","min","_getColumnByElement","eq","_moveFromCardFocus","focusCard","currentIndex","seekFocusableCard","_getFocusableCard","focus","lastIndex","focusable","TaskBoardBaseCardCommand","_updateOrder","nextCard","dataOrderField","currentCard","cardIndex","map","idx","prevCard","SelectCardCommand","SaveChangesCommand","taskBoardOptions","receivedStatus","dataStatusField","targetColumn","_getColumn","activeElm","document","activeElement","pane","form","validate","then","DeleteCardCommand","deleteCardConfirm","fail","MoveCardCommand","EditCardCommand","_openPane","AddCardCommand","OpenPaneCommand","ClosePaneCommand","_closePane","SearchCommand","filters","searchOptions","search","operator","fields","_buildFilters","logic","Command","commands","Form","TaskBoardPane","_commandClick","fieldFormat","close","buttonTemplate","primary","footerButton","primaryButton","baseButton","delete","saveChanges","create","buttonsContainer","footerActions","footerActionButtons","_renderContent","_buildButtonsHtml","_buildHeaderTemplate","TaskBoardPreviewPane","previewPane","preview","TaskBoardEditPane","formSettings","label","buttonsTemplate","formLabelId","formData","TaskBoardCreatePane","columnStatusField","firstColumn","at","status","add","createNewCard","Pane","panes","Preview","Edit","Create","Keyboard","register","registerShortcut","selector","shortcut","isNaN","toUpperCase","charCodeAt","ctrlKey","shiftKey","altKey","handler","_handler","shortcuts","_getAction","_trigger","_compareShortcut","_getShortcutModifier","navigator","platform","indexOf","metaKey","KeyboardManager","__meta__","id","category","description","depends","TaskBoardStyles","wrapper","toolbar","columnsContainer","selected","Widget","DataSource","isArray","Array","GENERIC","MOVE","MOVE_START","MOVE_END","SELECT","EXECUTE","CHANGE","ERROR","DATABINDING","DATABOUND","COLUMNSDATABINDING","COLUMNSDATABOUND","TaskBoard","_sortableIdentifier","_wrapper","_columnsDataSource","_initResources","_dataSource","_initToolbar","_initCardMenu","_initKeyboard","autoBind","load","notify","reorderable","previewCard","defaultTools","type","overflow","component","componentOptions","commandOn","_columns","merge","itemsByStatus","itemsByColumn","columnElm","fetchPromises","_progress","fetch","when","apply","read","cardElm","getByUid","columnDataItem","columnByStatus","select","toggle","removeClass","_extendExecArgs","saveCard","model","_buildStates","_createNewModel","insert","before","executeCommand","saveColumn","keyboardManager","enable","readOnly","readOnlyByColumn","setDataSource","setColumnsDataSource","_renderCards","focusableElement","after","outerWidth","parseInt","ESC","headerElm","contentElm","colsContainer","tools","toolbarElm","toolbarOptions","_processTools","parentMessages","ToolBar","_toolbarClick","forEach","t","hidden","_isToolEnabled","toolName","found","isEditable","_isEditable","_isReorderable","_isSelectable","isReadOnly","isSearchable","_isSearchable","notLocalColumns","transport","LocalTransport","support","commandName","commandOptions","console","warn","cardDataItem","draggableEvent","elm","ns","sort","dir","schema","defaultValue","_columnsChangeHandler","_columnsErrorHandler","_columnsDataSourceChange","_error","statusField","_moveEnd","_moveStart","_changeOrder","_tabindex","_changeHandler","_errorHandler","_clearColumns","_renderCard","cardMenuOptions","showOn","alignToAnchor","_addResource","_resourceDataSource","resourceDS","progress","_registerShortcuts","DELETE","UP","DOWN","LEFT","RIGHT","closePane","plugin"],"sources":["kendo.taskboard.js"],"mappings":"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","sourcesContent":["import './kendo.sortable.js';\nimport './kendo.core.js';\nimport './kendo.menu.js';\nimport './kendo.dialog.js';\nimport './kendo.form.js';\nimport './kendo.data.js';\nimport './kendo.toolbar.js';\nimport './kendo.textbox.js';\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Observable = kendo.Observable,\n        encode = kendo.htmlEncode,\n        extend = $.extend,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardColumn\",\n\n        CLICK = \"click\",\n        BLUR = \"blur\",\n\n        MOVE = \"move\",\n        MOVE_START = \"moveStart\",\n        MOVE_END = \"moveEnd\",\n        CHANGE = \"change\",\n        ACTION = \"action\";\n\n    var TaskBoardColumnStyles = {\n        element: \"k-taskboard-column\",\n        header: \"k-taskboard-column-header\",\n        headerText: \"k-taskboard-column-header-text\",\n        ellipsis: \"k-text-ellipsis\",\n        spacer: \"k-spacer\",\n        actions: \"k-taskboard-column-header-actions\",\n        cardsContainer: \"k-taskboard-column-cards-container\",\n        columnCards: \"k-taskboard-column-cards\",\n        actionButton: \"k-taskboard-column-action-button\",\n        button: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        card: \"k-taskboard-card\",\n        cardTitle: \"k-card-title\",\n        sortableSuffix: \"-kendosortable\",\n        textbox: \"k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n        input: \"k-input-inner\",\n        newColumn: \"k-taskboard-column-new\",\n        editColumn: \"k-taskboard-column-edit\",\n        disabled: \"k-disabled\",\n        dragPlaceholder: \"k-taskboard-drag-placeholder\",\n        dragHint: \"k-taskboard-drag-hint\",\n        ignoreDrag: \"k-taskboard-drag-ignore\",\n        grabbingCursor: \"k-cursor-grabbing\"\n    };\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    var TaskBoardColumn = Observable.extend({\n        init: function(options, dataItem) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.options = extend(true, {}, options);\n\n            that.sortableUniqueClass = that.options.sortableIdentifier + TaskBoardColumn.styles.sortableSuffix;\n            that._render();\n            that._attachEvents();\n\n            if (options.states.isReorderable) {\n                that._initSortable();\n            }\n\n            Observable.fn.init.call(that);\n        },\n\n        empty: function() {\n            var that = this;\n            that.container.empty();\n        },\n\n        addCard: function(cardHtml) {\n            var that = this;\n            that.container.append(cardHtml);\n        },\n\n        edit: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles;\n\n            that.element.addClass(styles.editColumn);\n            that._renderEditHeader();\n        },\n\n        getDataItem: function() {\n            return this._dataItem;\n        },\n\n        cards: function() {\n            var that = this;\n\n            return that.container.children();\n        },\n\n        template: (data) => `<div class=\"${encode(data.styles.headerText)} ${encode(data.styles.ellipsis)}\">${kendo.getter(data.dataTextField)(data)}</div>` +\n                  `<span class=\"${encode(data.styles.spacer)}\"></span>` +\n                  `${data.buttons}`,\n\n        editTemplate: (data) => `<div class=\"${encode(data.styles.headerText)} ${encode(data.styles.ellipsis)}\">` +\n                        `<span class=\"${encode(data.styles.textbox)}\">` +\n                            `<input class=\"${encode(data.styles.input)}\" placeholder=\"${encode(kendo.getter(data.dataTextField)(data) ? data.messages.editColumn : data.messages.newColumn)}\" ${encode(kendo.attr(\"command\"))}=\"SaveColumnCommand\" value=\"${encode(kendo.getter(data.dataTextField)(data))}\" />` +\n                        '</span>' +\n                        '</div>' +\n                        `<span class=\"${encode(data.styles.spacer)}\"></span>` +\n                        `${data.buttons}`,\n\n        actionButton: ({ styles, icon, spriteCssClass, text, command, options }) =>\n                      `<button class=\"${encode(styles.actionButton)} ${encode(styles.button)}\" title=\"${encode(text)}\" ${encode(kendo.attr(\"command\"))}=\"${encode(command)}\" ${options ? encode(kendo.attr('options')) + \"=\" + encode(options) : \"\"}>` +\n                        `<i class=\"k-button-icon ${encode(icon)} ${encode(spriteCssClass)}\"></i>` +\n                      '</button>',\n\n        builtinButtons: {\n            \"editColumn\": { name: \"editColumn\", icon: \"edit\", text: \"Edit Column\", command: \"EditColumnCommand\", rules: \"isEditable\" },\n            \"addCard\": { name: \"addCard\", icon: \"add\", text: \"Add Card\", command: \"AddCardCommand\", rules: \"isEditable\" },\n            \"deleteColumn\": { name: \"deleteColumn\", icon: \"close\", text: \"Delete Column\", command: \"DeleteColumnCommand\", rules: \"isEditable\" }\n        },\n\n        defaultButtons: [ \"editColumn\", \"addCard\", \"deleteColumn\" ],\n\n        _render: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                headerLabelId = kendo.guid(),\n                element = $(\"<div class='\" + styles.element + \"'></div>\")\n                    .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                    .css({\n                        width: that.options.width\n                    })\n                    .attr(\"role\", \"list\").attr(\"aria-labelledby\", headerLabelId),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                cardsContainer = $(\"<div class='\" + styles.cardsContainer + \"'></div>\"),\n                columnCards = $(\"<div class='\" + styles.columnCards + \"'></div>\");\n\n            that.header = header.appendTo(element).attr(\"id\", headerLabelId);\n\n            that._renderHeader();\n\n            cardsContainer.appendTo(element);\n            that.container = columnCards\n                                .appendTo(cardsContainer)\n                                .addClass(that.sortableUniqueClass);\n\n            that.element = element;\n        },\n\n        _renderHeader: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.template ? options.template : that.template;\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                buttons: that._buildActionsHtml(),\n                dataTextField: options.dataTextField\n            }, that._dataItem)));\n        },\n\n        _renderEditHeader: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.editTemplate ? options.editTemplate : that.editTemplate;\n\n            that.header.html(\"\");\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                messages: options.messages,\n                buttons: that._buildActionsHtml(),\n                dataTextField: options.dataTextField\n            }, that._dataItem)));\n\n            setTimeout(function() {\n                that.header.find(\"input\").trigger(\"focus\");\n            }, 0);\n\n            that.header.find(DOT + styles.actions).addClass(styles.disabled);\n        },\n\n        _buildActionsHtml: function() {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardColumn.styles,\n                html = \"<div class='\" + styles.actions + \"'>\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if (typeof button === \"string\") {\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                button.icon = icon;\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.actionButton)(extend(true, {}, {\n                    styles: styles,\n                    options: false\n                }, button));\n            }\n\n            html += \"</div>\";\n\n            return html;\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _actionClick: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _textboxBlur: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.header.on(CLICK + NS,\n                DOT + TaskBoardColumn.styles.actionButton,\n                that._actionClick.bind(that));\n\n            that.header.on(BLUR + NS,\n                DOT + TaskBoardColumn.styles.input,\n                that._textboxBlur.bind(that));\n\n            that.header.on(\"keyup\" + NS,\n                DOT + TaskBoardColumn.styles.input,\n                function(ev) {\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        that._textboxBlur(ev);\n                    }\n                }\n            );\n\n            if (that.container) {\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" [\" + kendo.attr(\"command\") + \"]\",\n                    that._actionClick.bind(that));\n\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" a.\" + TaskBoardColumn.styles.cardTitle,\n                    preventDefault);\n\n            }\n        },\n\n        _initSortable: function() {\n            var that = this,\n                isRtl = that.options.states.isRtl,\n                dirClass = isRtl ? \" k-rtl\" : \"\",\n                container = that.container;\n\n            if (!that.container) {\n                return;\n            }\n\n            that.sortable = new ui.Sortable(container, {\n                ignore: DOT + TaskBoardColumn.styles.ignoreDrag + \" *\",\n                connectWith: DOT + that.sortableUniqueClass,\n                filter: DOT + TaskBoardColumn.styles.card,\n                hint: function(element) {\n                    return element.clone()\n                        .addClass(TaskBoardColumn.styles.dragHint + \" \" + TaskBoardColumn.styles.grabbingCursor + dirClass)\n                        .css({\n                        width: element[0].offsetWidth,\n                        height: element[0].offsetHeight\n                    });\n                },\n                placeholder: function(element) {\n                    return $(\"<div></div>\")\n                        .addClass(TaskBoardColumn.styles.dragPlaceholder)\n                        .css({\n                            height: element[0].offsetHeight\n                        });\n                },\n                move: that._move.bind(that),\n                start: that._start.bind(that),\n                end: that._end.bind(that),\n                change: that._change.bind(that)\n            });\n\n            that.sortable.draggable.userEvents.unbind(\"select\");\n            that.sortable.draggable.userEvents.bind(\"select\", that._select.bind(that));\n        },\n\n        _select: function(ev) {\n            var ignoreDragSelectors = TaskBoardColumn.ignoreDragSelectors;\n            var target = $(ev.event.target);\n\n            for (var i = 0; i < ignoreDragSelectors.length; i++) {\n                if (target.is(ignoreDragSelectors[i])) {\n                    ev.preventDefault();\n                    break;\n                }\n            }\n        },\n\n        _move: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE, ev);\n        },\n\n        _start: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_START, ev);\n        },\n\n        _end: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_END, ev);\n        },\n\n        _change: function(ev) {\n            var that = this;\n\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n\n            that.trigger(CHANGE, ev);\n\n            if ((ev.action === \"receive\" && ev.newIndex >= 0) || (ev.action === \"sort\" && ev.newIndex !== ev.oldIndex)) {\n                that.trigger(ACTION, {\n                    command: \"MoveCardCommand\",\n                    options: ev\n                });\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.header.off(NS);\n            that.container.off(NS);\n\n            if (that.sortable) {\n                that.sortable.destroy();\n            }\n        }\n    });\n\n    var TaskBoardNewColumn = TaskBoardColumn.extend({\n        _render: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\").addClass(styles.newColumn).attr(kendo.attr(\"uid\"), that._dataItem.uid),\n                header = $(\"<div class='\" + styles.header + \"'></div>\");\n\n            that.header = header.appendTo(element);\n\n            that._renderEditHeader();\n\n            that.element = element;\n        }\n    });\n\n    extend(kendo.ui, {\n        taskboard: {\n            Column: TaskBoardColumn,\n            NewColumn: TaskBoardNewColumn\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.Column, {\n        styles: TaskBoardColumnStyles,\n        ignoreDragSelectors: [\"img\"]\n    });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n        encode = kendo.htmlEncode,\n        extend = $.extend;\n\n    var TaskBoardCardStyles = {\n        element: \"k-taskboard-card\",\n        card: \"k-card\",\n        header: \"k-card-header\",\n        hbox: \"k-hbox\",\n        title: \"k-card-title\",\n        link: \"k-link\",\n        spacer: \"k-spacer\",\n        button: \"k-button\",\n        cardMenuButton: \"k-taskboard-card-menu-button k-icon-button\",\n        flatButton: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        body: \"k-card-body\",\n        actionsIcon: \"k-icon k-i-more-vertical\",\n        moveCursor: \"k-cursor-move\",\n        categoryBorder: \"k-taskboard-card-category\",\n        headerActions: \"k-card-header-actions\",\n        disabled: \"k-disabled\"\n    };\n\n    var TaskBoardCard = Observable.extend({\n        init: function(options, dataItem, resources) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.resources = resources;\n\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            Observable.fn.init.call(that);\n        },\n\n        contentTemplate: (data) => `<div class=\"${encode(data.styles.header)} ${encode(data.styles.hbox)}\">` +\n            `<a class=\"${encode(data.styles.title)} ${encode(data.styles.link)}\" href=\"#\" ${data.selectable ? kendo.attr(\"command\") + '=SelectCardCommand' : ''}>${encode(kendo.getter(data.dataTitleField)(data))}</a>` +\n            `<span class=\"${encode(data.styles.spacer)}\"></span>` +\n            `${data.cardMenuButton}` +\n        '</div>' +\n        `<div class=\"${encode(data.styles.body)}\"><p>${encode(kendo.getter(data.dataDescriptionField)(data))}</p></div>`,\n\n        cardMenuButtonTemplate: ({ styles }) => `<div class=\"${encode(styles.headerActions)}\"><button aria-label=\"menu\" class=\"${encode(styles.button)} ${encode(styles.flatButton)} ${encode(styles.cardMenuButton)}\">` +\n                                    `<span class=\"k-button-icon ${encode(styles.actionsIcon)}\"></span>` +\n                                '</button></div>',\n\n        _render: function() {\n            var that = this,\n                options = that.options,\n                styles = TaskBoardCard.styles,\n                template = options.template || that.contentTemplate,\n                element = $(\"<div class='\" + styles.element + \" \" + styles.card + \" \" + styles.moveCursor + \"'></div>\"),\n                cardMenuButtonTemplate = options.cardMenu ? that.cardMenuButtonTemplate : \"\",\n                resources = that._resources(that._dataItem),\n                borderDir = options.states.isRtl ? \"borderRightColor\" : \"borderLeftColor\",\n                categoryColor;\n\n            element\n                .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                .attr(\"aria-disabled\", !options.states.isDisabled)\n                .attr(\"role\", \"listitem\")\n                .toggleClass(styles.disabled, options.states.isDisabled);\n\n            categoryColor = (resources[options.dataCategoryField] && resources[options.dataCategoryField].color) ||\n                                that._dataItem.get(options.dataCategoryField);\n\n            if (categoryColor) {\n                element.addClass(styles.categoryBorder).css(borderDir, categoryColor);\n            }\n\n            element.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                cardMenuButton: kendo.template(cardMenuButtonTemplate)({ styles: styles }),\n                selectable: options.states.isSelectable,\n                resources: resources,\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField\n            }, that._dataItem)));\n\n            that.element = element;\n        },\n\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if (resource.multiple) {\n                            if (resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n\n        _buildTemplate: function() {\n            var that = this,\n                options = that.options,\n                headerTemplate = kendo.format(that.headerTemplate, options.dataTitleField),\n                bodyTemplate = kendo.format(that.bodyTemplate, options.dataDescriptionField);\n\n            return headerTemplate + bodyTemplate;\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        Card: TaskBoardCard\n    });\n\n    extend(true, kendo.ui.taskboard.Card, { styles: TaskBoardCardStyles });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        template = kendo.template,\n        ContextMenu = kendo.ui.ContextMenu,\n        encode = kendo.htmlEncode,\n\n        ACTION = \"action\";\n\n    var TaskBoardCardMenu = ContextMenu.extend({\n        init: function(element, options) {\n            var that = this;\n\n            ContextMenu.fn.init.call(that, element, options);\n\n            that._overrideTemplates();\n            that._extendItems();\n\n            that.bind(\"select\", that._onSelect.bind(that));\n            that.bind(\"open\", that._onOpen.bind(that));\n            that.bind(\"activate\", that._focus.bind(that));\n        },\n\n        _overrideTemplates: function() {\n            this.templates.sprite = ({ spriteCssClass }) => `${spriteCssClass ? '<span class=\"' + encode(spriteCssClass) + '\"></span>' : ''}`;\n        },\n\n        defaultItems: {\n            \"editCard\": { name: \"editCard\", text: \"Edit card\", icon: \"edit\", command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"deleteCard\": { name: \"deleteCard\", text: \"Delete card\", icon: \"delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" }\n        },\n\n        events: ContextMenu.fn.events.concat([\n            ACTION\n        ]),\n\n        _extendItems: function() {\n            var that = this,\n                items = that.options.items,\n                item, isBuiltInTool;\n\n            if (items && items.length) {\n                for (var i = 0; i < items.length; i++) {\n                    item = items[i];\n                    isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                    if (isBuiltInTool) {\n                        item = item.name;\n                    }\n\n                    if ($.isPlainObject(item)) {\n                        that._append(item);\n                    } else if (that.defaultItems[item]) {\n                        item = that.defaultItems[item];\n                        that._append(item);\n                    } else if (typeof(item) === \"string\") {\n                        item = { name: item, text: item, spriteCssClass: item, command: item + \"Command\" };\n                        that._append(item);\n                    }\n                }\n            } else {\n                for (var key in that.defaultItems) {\n                    item = that.defaultItems[key];\n                    that._append(item);\n                }\n            }\n        },\n\n        _append: function(item) {\n            var that = this;\n\n            that._extendItem(item);\n\n            if (that._validateRules(item)) {\n                that.append(item);\n            }\n        },\n\n        _extendItem: function(item) {\n            var that = this,\n                messages = that.options.messages,\n                icon = item.icon ? \"k-icon k-i-\" + item.icon : \"\",\n                attr = {};\n\n            attr[kendo.attr(\"command\")] = item.command;\n\n            if (item.options) {\n                attr[kendo.attr(\"options\")] = item.options;\n            }\n\n            extend(item, {\n                text: messages[item.name],\n                spriteCssClass: icon + \" \" + item.spriteCssClass || \"\",\n                attr: attr,\n                uid: kendo.guid()\n            });\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _onSelect: function(ev) {\n            var command = $(ev.item).attr(kendo.attr(\"command\")),\n                options = $(ev.item).attr(kendo.attr(\"options\")),\n                target = $(ev.target);\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _onOpen: function(ev) {\n            var menu = ev.sender,\n                items = menu.options.items;\n\n            if (!items && $.isEmptyObject(this.defaultItems)) {\n                ev.preventDefault();\n            }\n        },\n\n        _focus: function(ev) {\n            if (ev.sender) {\n                ev.sender.element.trigger(\"focus\");\n            }\n        },\n\n        action: function(args) {\n            this.trigger(ACTION, args);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        CardMenu: TaskBoardCardMenu\n    });\n\n    })(window.kendo.jQuery);\n\n(function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            isPlainObject = $.isPlainObject,\n            Class = kendo.Class;\n\n        var TaskBoardCommand = Class.extend({\n            init: function(options) {\n                this.options = options;\n                this.taskboard = options.taskboard;\n            },\n            _confirm: function(title, content, okText, cancel) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    confirm;\n\n                if (isPlainObject(taskboardOptions.editable) && taskboardOptions.editable.confirmation === false ) {\n                    var fakePromise = $.Deferred();\n                    fakePromise.resolve();\n                    return fakePromise;\n                }\n\n                confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                    title: title,\n                    content: content,\n                    messages: {\n                        okText: okText,\n                        cancel: cancel\n                    },\n                    buttonLayout: \"normal\"\n                })).data(\"kendoConfirm\");\n\n                confirm.open();\n\n                setTimeout(function() {\n                    confirm.element.trigger(\"focus\");\n                });\n\n                return confirm.result;\n            }\n        });\n\n        // Column commands\n        var AddColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: null })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.addColumn();\n            }\n        });\n\n        var EditColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: options.column })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.editColumn(options.columnElement);\n            }\n        });\n\n        var DeleteColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    messages = taskboardOptions.messages,\n                    columnDS = taskboard.columnsDataSource;\n\n                var result = that._confirm(messages.deleteColumn, messages.deleteColumnConfirm, messages[\"delete\"], messages.cancel);\n\n                result.done(function() {\n                    if (taskboard.trigger(\"deleteColumn\", { column: options.column })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    columnDS.remove(options.column);\n                    columnDS.sync();\n                });\n            }\n        });\n\n        var SaveColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    columnSettings = taskboard.options.columnSettings,\n                    columnDS = taskboard.columnsDataSource,\n                    column = options.column,\n                    text = options.target.val();\n\n                if (taskboard.trigger(\"saveColumn\", { column: options.column })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                column.set(columnSettings.dataTextField, text);\n                columnDS.sync();\n            }\n        });\n\n        var CancelEditColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    columnDS = taskboard.columnsDataSource;\n\n                columnDS.cancelChanges();\n            }\n        });\n\n        //Move focus command\n        var MoveFocusCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement,\n                    columnElement = options.columnElement,\n                    columns = taskboard.columns(),\n                    currentColumnIndex = columnElement.index(),\n                    direction = options.value,\n                    columnIndex, column;\n\n                switch (direction) {\n                    case \"left\":\n                        columnIndex = Math.max(0, currentColumnIndex - 1);\n                        break;\n                    case \"right\":\n                        columnIndex = Math.min(columns.length - 1, currentColumnIndex + 1);\n                        break;\n                    default:\n                        columnIndex = currentColumnIndex;\n                        break;\n                }\n\n                that.columns = columns;\n                that.columnIndex = columnIndex;\n                that.column = column = taskboard._getColumnByElement(columns.eq(columnIndex));\n                that.cards = column.cards();\n\n                if (cardElement) {\n                    that._moveFromCardFocus(direction, cardElement);\n                } else if (columnElement && direction === \"down\") {\n                    that.cards.eq(0).trigger(\"focus\");\n                } else {\n                    columns.eq(columnIndex).trigger(\"focus\");\n                }\n            },\n            _moveFromCardFocus: function(direction, cardElement) {\n                var that = this,\n                    currentIndex = cardElement.index(),\n                    focusCard, index, seekFocusableCard = false;\n\n                switch (direction) {\n                    case \"up\":\n                        index = currentIndex - 1;\n                        break;\n                    case \"down\":\n                        index = currentIndex + 1;\n                        break;\n                    default:\n                        seekFocusableCard = true;\n                        index = currentIndex;\n                        break;\n                }\n\n                focusCard = that.cards.eq(index);\n\n                if (!focusCard.length && seekFocusableCard) {\n                    focusCard = that._getFocusableCard(index, direction);\n                }\n\n                if (index >= 0) {\n                    focusCard.trigger(\"focus\");\n                } else {\n                    that.options.columnElement.focus();\n                }\n            },\n            _getFocusableCard: function(index, direction) {\n                var that = this,\n                    lastIndex = that.cards.length - 1,\n                    focusable = that.cards.eq(Math.min(index, lastIndex));\n\n                if (focusable.length) {\n                    return focusable;\n                }\n\n                if (that.columnIndex <= 0 || that.columnIndex >= that.columns.length - 1) {\n                    return;\n                }\n\n                switch (direction) {\n                    case \"left\":\n                        that.columnIndex = Math.max(0, that.columnIndex - 1);\n                        break;\n                    case \"right\":\n                        that.columnIndex = Math.min(that.columns.length - 1, that.columnIndex + 1);\n                        break;\n                }\n\n                that.column = that.taskboard._getColumnByElement(that.columns.eq(that.columnIndex));\n                that.cards = that.column.cards();\n\n                return that._getFocusableCard(index, direction);\n\n            }\n        });\n\n        // Card commands\n        var TaskBoardBaseCardCommand = TaskBoardCommand.extend({\n            _updateOrder: function(column, currentIndex) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    dataOrderField = taskBoardOptions.dataOrderField,\n                    options = that.options,\n                    currentCard = options.card,\n                    cardIndex = options.cardElement ? options.cardElement.index() : column.cards().length,\n                    newIndex = currentIndex,\n                    cards = column.cards().map(function(idx, card) {\n                        return taskboard.dataItem(card);\n                    }),\n                    prevCard = cards[cardIndex - 1],\n                    nextCard;\n\n                    currentCard.set(dataOrderField, newIndex);\n\n                    if (prevCard && prevCard.get(dataOrderField) >= currentCard.get(dataOrderField)) {\n                        currentCard.set(dataOrderField, prevCard.get(dataOrderField) + 1);\n                    }\n\n                    for (var i = newIndex + 1; i < cards.length; i++) {\n                        nextCard = cards[i];\n\n                        if (nextCard.get(dataOrderField) <= currentCard.get(dataOrderField)) {\n                            nextCard.set(dataOrderField, currentCard.get(dataOrderField) + 1);\n                            currentCard = nextCard;\n                        } else {\n                            break;\n                        }\n                    }\n            }\n        });\n\n        var SelectCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement;\n\n                taskboard._select(cardElement, true);\n                cardElement.focus();\n            }\n        });\n\n        var SaveChangesCommand = TaskBoardBaseCardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    options = that.options,\n                    receivedStatus = options.card.get(taskBoardOptions.dataStatusField),\n                    targetColumn = taskboard._getColumn(receivedStatus),\n                    activeElm = $(document.activeElement);\n\n                if (activeElm.length) {\n                    activeElm.trigger(\"change\");\n                }\n\n                if (taskboard.pane && taskboard.pane.form && !taskboard.pane.form.validate()) {\n                    return;\n                }\n\n                if (taskboard.trigger(\"saveCard\", { card: options.card })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                if (targetColumn && taskBoardOptions.dataOrderField) {\n                    that._updateOrder(targetColumn, options.card.get(taskBoardOptions.dataOrderField));\n                }\n\n                taskboard.dataSource.sync().then(function() {\n                    taskboard.columns().eq(0).trigger(\"focus\");\n                });\n            }\n        });\n\n        var DeleteCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    messages = taskboard.options.messages,\n                    options = that.options;\n\n                var result = that._confirm(messages.deleteCard, messages.deleteCardConfirm, messages[\"delete\"], messages.cancel);\n\n                result\n                    .done(function() {\n                        if (taskboard.trigger(\"deleteCard\", { card: options.card })) {\n                            taskboard.dataSource.cancelChanges();\n                            return;\n                        }\n\n                        taskboard.dataSource.remove(options.card);\n                        taskboard.dataSource.sync().then(function() {\n                            taskboard.columns().eq(0).trigger(\"focus\");\n                        });\n                    })\n                    .fail(function() {\n                        options.cardElement.trigger(\"focus\");\n                    });\n            }\n        });\n\n        var MoveCardCommand = TaskBoardBaseCardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    columnSettings = taskBoardOptions.columnSettings,\n                    options = that.options,\n                    receivedStatus = options.column.get(columnSettings.dataStatusField);\n\n                options.card.set(taskBoardOptions.dataStatusField, receivedStatus);\n\n                if (taskBoardOptions.dataOrderField) {\n                    that._updateOrder(taskboard._getColumn(receivedStatus), options.newIndex);\n                }\n\n                taskboard.dataSource.sync();\n            }\n        });\n\n        var EditCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: options.card })) {\n                    return;\n                }\n\n                taskboard._openPane(extend({\n                    pane: \"Edit\"\n                }, options));\n            }\n        });\n\n        var AddCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: null })) {\n                    return;\n                }\n                taskboard.dataSource.cancelChanges();\n                taskboard._openPane(extend({\n                    pane: \"Create\"\n                }, options));\n            }\n        });\n\n        // Pane commands\n        var OpenPaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                taskboard._openPane({\n                    pane: options.value,\n                    card: options.card,\n                    cardElement: options.cardElement,\n                    column: options.column,\n                    columnElement: options.columnElement\n                });\n            }\n        });\n\n        var ClosePaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                taskboard._closePane();\n                taskboard.dataSource.cancelChanges();\n            }\n        });\n\n        // Search command\n\n        var SearchCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    value = that.options.value,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    searchOptions = taskboardOptions.search,\n                    operator = searchOptions.operator,\n                    fields = (searchOptions && searchOptions.fields) || [ taskboardOptions.dataTitleField, taskboardOptions.dataDescriptionField ],\n                    filters;\n\n                filters = that._buildFilters(fields, operator, value);\n\n                taskboard.dataSource.filter(filters);\n            },\n            _buildFilters: function(fields, operator, value) {\n                var filters = fields.map(function(field) {\n                    return { field: field, operator: operator, value: value };\n                });\n\n                return { logic: \"or\", filters: filters };\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            Command: TaskBoardCommand,\n            commands: {\n                AddColumnCommand: AddColumnCommand,\n                EditColumnCommand: EditColumnCommand,\n                DeleteColumnCommand: DeleteColumnCommand,\n                SaveColumnCommand: SaveColumnCommand,\n                CancelEditColumnCommand: CancelEditColumnCommand,\n                OpenPaneCommand: OpenPaneCommand,\n                ClosePaneCommand: ClosePaneCommand,\n                SelectCardCommand: SelectCardCommand,\n                MoveFocusCommand: MoveFocusCommand,\n                SaveChangesCommand: SaveChangesCommand,\n                DeleteCardCommand: DeleteCardCommand,\n                MoveCardCommand: MoveCardCommand,\n                EditCardCommand: EditCardCommand,\n                AddCardCommand: AddCardCommand,\n                SearchCommand: SearchCommand\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        Observable = kendo.Observable,\n        encode = kendo.htmlEncode,\n\n        Form = kendo.ui.Form,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardPane\",\n\n        ACTION = \"action\",\n        CLICK = \"click\";\n\n    var TaskBoardPaneStyles = {\n        element: \"k-taskboard-pane\",\n        edit: \"k-taskboard-edit-pane\",\n        preview: \"k-taskboard-preview-pane\",\n        header: \"k-taskboard-pane-header\",\n        headerText: \"k-taskboard-pane-header-text\",\n        spacer: \"k-spacer\",\n        headerActions: \"k-taskboard-pane-header-actions\",\n        flatButton: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        content: \"k-taskboard-pane-content\",\n        footerActions: \"k-taskboard-pane-actions\",\n        footerActionButtons: \"k-actions k-hstack k-justify-content-end\",\n        footerButton: \"k-button k-button-md k-rounded-md k-button-solid\",\n        baseButton: \"k-button-solid-base\",\n        primaryButton: \"k-button-solid-primary\"\n    };\n\n    var TaskBoardPane = Observable.extend({\n        init: function(taskboard, options, dataItem, resources) {\n            var that = this;\n\n            that.taskboard = taskboard;\n            that._dataItem = dataItem;\n            that.resources = resources;\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            that.element.on(CLICK + NS,\n                \"[\" + kendo.attr(\"command\") + \"]\",\n                that._commandClick.bind(that));\n\n            Observable.fn.init.call(that);\n        },\n        headerTemplate: ({ styles, messages, fieldFormat }) => `<div class=\"${encode(styles.headerText)}\">${fieldFormat}</div>` +\n                        `<span class=\"${encode(styles.spacer)}\"></span>` +\n                        `<div class=\"${encode(styles.headerActions)}\">` +\n                            `<button class=\"${encode(styles.flatButton)}\" title=\"${encode(messages.close)}\" ${encode(kendo.attr(\"command\"))}=\"ClosePaneCommand\">` +\n                                '<span class=\"k-button-icon k-icon k-i-close\"></span>' +\n                            '</button>' +\n                        '</div>',\n        buttonTemplate: ({ styles, icon, spriteCssClass, text, primary, command, options }) =>\n                        `<button class=\"${encode(styles.footerButton)} ${primary ? encode(styles.primaryButton) : encode(styles.baseButton)}\" title=\"${encode(text)}\" ${encode(kendo.attr(\"command\"))}=\"${encode(command)}\" ${encode(kendo.attr(\"options\"))}=\"${encode(options)}\">` +\n                            `<span class=\"k-button-icon ${encode(icon)} ${encode(spriteCssClass)}\"></span>` +\n                            `<span class=\"k-button-text\">${encode(text)}</span>` +\n                        '</button>',\n        contentTemplate: () => ``,\n        builtinButtons: {\n            \"edit\": { name: \"edit\", icon: \"edit\", text: \"Edit\", primary: true, command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"delete\": { name: \"delete\", icon: \"delete\", text: \"Delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" },\n            \"cancel\": { name: \"cancel\", text: \"Cancel\", command: \"ClosePaneCommand\" },\n            \"saveChanges\": { name: \"saveChanges\", text: \"Save\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" },\n            \"create\": { name: \"create\", text: \"Create\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" }\n        },\n        defaultButtons: [],\n        _render: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\"),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                content = $(\"<div class='\" + styles.content + \"'></div>\"),\n                buttonsContainer = $(\"<div class='\" + styles.footerActions + \" \" + styles.footerActionButtons + \"'></div>\");\n\n            that.header = header.appendTo(element);\n            that._renderHeader();\n            that.content = content.appendTo(element);\n            that._renderContent();\n            that.buttonsContainer = buttonsContainer.appendTo(element);\n            that.buttonsContainer.append(that._buildButtonsHtml());\n            that.element = element;\n        },\n        _renderHeader: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                headerTemplate = options.headerTemplate ? options.headerTemplate : that.headerTemplate,\n                resources = that._resources(that._dataItem);\n\n            that.header.append(kendo.template(headerTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources,\n                fieldFormat: that._buildHeaderTemplate(that._dataItem)\n            }, that._dataItem)));\n        },\n        _buildHeaderTemplate: function(dataItem) {\n            var that = this;\n            return encode(kendo.getter(that.options.dataTitleField)(dataItem));\n        },\n        _renderContent: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                contentTemplate = options.template || that.contentTemplate,\n                resources = that._resources(that._dataItem);\n\n            that.content.append(kendo.template(contentTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources\n            }, that._dataItem)));\n        },\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if (resource.multiple) {\n                            if (resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n        _buildButtonsHtml: function() {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardPane.styles,\n                html = \"\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if (typeof button === \"string\") {\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                button.icon = icon;\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.buttonTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    primary: false,\n                    options: null\n                }, button));\n            }\n\n            return html;\n        },\n        _commandClick: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\")),\n                card = that._dataItem;\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ card: card }, options)\n            });\n        },\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n            that.element.remove();\n        }\n    });\n\n    var TaskBoardPreviewPane = TaskBoardPane.extend({\n        init: function(taskboard, options, dataItem, resources) {\n            var that = this;\n\n            options = extend({}, options.previewPane, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.contentTemplate = (data) => encode(kendo.getter(options.dataDescriptionField)(data));\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem, resources);\n\n            that.element.addClass(TaskBoardPane.styles.preview);\n        },\n        defaultButtons: [ \"delete\", \"edit\" ]\n    });\n\n    var TaskBoardEditPane = TaskBoardPane.extend({\n        init: function(taskboard, options, dataItem) {\n            var that = this;\n\n            options = extend({}, options.editable, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.formSettings = extend(that.formSettings, {\n                items: [\n                    { field: options.dataTitleField, label: options.messages[options.dataTitleField] },\n                    { field: options.dataDescriptionField, label: options.messages[options.dataDescriptionField] }\n                ]\n            }, options.form);\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem);\n\n            that.element.addClass(TaskBoardPane.styles.edit);\n        },\n        defaultButtons: [ \"cancel\", \"saveChanges\" ],\n        formSettings: {\n            buttonsTemplate: () => \"\"\n        },\n        _buildHeaderTemplate: function(dataItem) {\n            var that = this;\n            return `${that.options.messages.edit} ${encode(kendo.getter(that.options.dataTitleField)(dataItem))}`;\n        },\n        _renderContent: function() {\n            var that = this,\n                options = that.options,\n                styles = TaskBoardPane.styles,\n                formSettings = options.form || that.formSettings,\n                formLabelId = kendo.guid(),\n                element = $(\"<div></div>\")\n                    .attr(\"role\", \"form\")\n                    .attr(\"aria-labelledby\", formLabelId);\n\n            that.header.find(DOT + styles.headerText).attr(\"id\", formLabelId);\n\n            that.content.append(element);\n\n            that.form = new Form(element, extend({}, formSettings, {\n                formData: that._dataItem\n            }));\n\n            that.form.element.find(\"input\").trigger(\"focus\");\n        }\n    });\n\n    var TaskBoardCreatePane = TaskBoardEditPane.extend({\n        init: function(taskboard, options, dataItem, resources, column) {\n            var that = this,\n                columnStatusField = options.columnSettings.dataStatusField,\n                firstColumn = taskboard.columnsDataSource.view().at(0),\n                status = column ? column[columnStatusField] : firstColumn[columnStatusField],\n                clone = extend({}, dataItem);\n\n            dataItem = taskboard.dataSource.add();\n            dataItem.set(options.dataStatusField, status);\n\n            for (var key in clone) {\n                dataItem.set(key, clone[key]);\n            }\n\n            TaskBoardEditPane.fn.init.call(that, taskboard, options, dataItem, resources);\n        },\n        _buildHeaderTemplate: function(dataItem) {\n            var that = this;\n            return that.options.messages.createNewCard;\n        },\n        defaultButtons: [ \"cancel\", \"create\" ]\n    });\n\n    extend(kendo.ui.taskboard, {\n        Pane: TaskBoardPane,\n        panes: {\n            Preview: TaskBoardPreviewPane,\n            Edit: TaskBoardEditPane,\n            Create: TaskBoardCreatePane\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.Pane, { styles: TaskBoardPaneStyles });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n\n        extend = $.extend,\n\n        DOT = \".\",\n        NS = DOT + \"kendoKeboardManager\",\n        KEYDOWN = \"keydown\",\n        ACTION = \"action\";\n\n\n    var Keyboard = Observable.extend({\n        init: function(element) {\n            var that = this;\n\n            that.register = {};\n            that.element = element;\n\n            that._attachEvents();\n\n            Observable.fn.init.call(that);\n        },\n\n        registerShortcut: function(selector, shortcut, options) {\n            var that = this;\n\n            if (!that.register[selector]) {\n                that.register[selector] = [];\n            }\n\n            if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n                shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n            }\n\n            that.register[selector].push({\n                shortcut: extend({\n                    keyCode: null,\n                    ctrlKey: false,\n                    shiftKey: false,\n                    altKey: false\n                }, shortcut),\n                options: options\n            });\n\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                handler = that._handler.bind(that);\n\n            that.element.on(KEYDOWN + NS, handler);\n        },\n\n        _handler: function(ev) {\n            var that = this,\n                target = $(ev.target),\n                shortcuts, action;\n\n            for (var selector in that.register) {\n                if (target.is(selector)) {\n                    shortcuts = that.register[selector];\n                    action = that._getAction(shortcuts, ev);\n\n                    if (action) {\n                        that._trigger(action, ev);\n                        break;\n                    }\n                }\n            }\n        },\n\n        _trigger: function(action, ev) {\n            var that = this,\n                target = $(ev.target);\n\n            if (action.command) {\n                that.trigger(ACTION, extend({}, ev, {\n                    command: action.command,\n                    options: extend({}, {\n                        target: target\n                    }, action.options)\n                }));\n            }\n\n            if (action.handler) {\n                action.handler(ev);\n            }\n        },\n\n        _getAction: function(shortcuts, ev) {\n            var that = this;\n\n            for (var i = 0; i < shortcuts.length; i++) {\n                if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                    return shortcuts[i].options;\n                }\n            }\n        },\n\n        _compareShortcut: function(shortcut, ev) {\n            var that = this;\n\n            for (var key in shortcut) {\n                var result = false;\n\n                switch (key) {\n                    case \"ctrlKey\":\n                        result = shortcut[key] !== that._getShortcutModifier(ev);\n                        break;\n                    default:\n                        result = shortcut[key] !== ev[key];\n                        break;\n                }\n\n                if (result) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _getShortcutModifier: function(ev) {\n            var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n            return mac ? ev.metaKey : ev.ctrlKey;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        KeyboardManager: Keyboard\n    });\n\n})(window.kendo.jQuery);\n\nvar __meta__ = {\n        id: \"taskboard\",\n        name: \"TaskBoard\",\n        category: \"web\",\n        description: \"The TaskBoard widget displays cards.\",\n        depends: [\"data\", \"sortable\", \"dialog\", \"form\", \"menu\", \"toolbar\", \"textbox\"]\n    };\n\n    var TaskBoardStyles = {\n        wrapper: \"k-taskboard\",\n        header: \"k-taskboard-header\",\n        content: \"k-taskboard-content\",\n        toolbar: \"k-taskboard-toolbar k-toolbar-flat\",\n        columnsContainer: \"k-taskboard-columns-container\",\n        card: \"k-taskboard-card\",\n        column: \"k-taskboard-column\",\n        selected: \"k-selected\",\n        disabled: \"k-disabled\",\n        ignoreDrag: \"k-taskboard-drag-ignore\"\n    };\n\n    var preventDefault = function(ev) { ev.preventDefault(); };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            DataSource = kendo.data.DataSource,\n            extend = $.extend,\n            ui = kendo.ui,\n            isArray = Array.isArray,\n            isPlainObject = $.isPlainObject,\n\n            GENERIC = \"_generic\",\n\n            DOT = \".\",\n\n            MOVE = \"move\",\n            MOVE_START = \"moveStart\",\n            MOVE_END = \"moveEnd\",\n            SELECT = \"select\",\n            EXECUTE = \"execute\",\n            ACTION = \"action\",\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            ERROR = \"change\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            EDIT_CARD = \"editCard\",\n            SAVE_CARD = \"saveCard\",\n            DELETE_CARD = \"deleteCard\",\n            EDIT_COLUMN = \"editColumn\",\n            SAVE_COLUMN = \"saveColumn\",\n            DELETE_COLUMN = \"deleteColumn\",\n\n            COLUMNSDATABINDING = \"columnsDataBinding\",\n            COLUMNSDATABOUND = \"columnsDataBound\";\n\n        var TaskBoard = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n\n                that._sortableIdentifier = that.element.attr(\"id\") || kendo.guid();\n\n                that._wrapper();\n                that._columnsDataSource();\n                that._initResources();\n                that._dataSource();\n                that._initToolbar();\n                that._initCardMenu();\n                that._initKeyboard();\n\n                if (that.options.autoBind) {\n                    that.load();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                MOVE,\n                MOVE_START,\n                MOVE_END,\n                CHANGE,\n                EXECUTE,\n                SELECT,\n                DATABINDING,\n                DATABOUND,\n                COLUMNSDATABINDING,\n                COLUMNSDATABOUND,\n                EDIT_CARD,\n                SAVE_CARD,\n                DELETE_CARD,\n                EDIT_COLUMN,\n                SAVE_COLUMN,\n                DELETE_COLUMN\n            ],\n\n            options: {\n                name: \"TaskBoard\",\n                autoBind: true,\n                height: 600,\n                width: \"100%\",\n                toolbar: true,\n                dataStatusField: \"status\",\n                dataTitleField: \"title\",\n                dataDescriptionField: \"description\",\n                dataCategoryField: \"category\",\n                dataOrderField: null,\n                cardMenu: true,\n                editable: true,\n                selectable: true,\n                reorderable: true,\n                previewPane: true,\n                search: {\n                    operator: \"contains\"\n                },\n                dataSource: [],\n                columns: [],\n                columnSettings: {\n                    dataStatusField: \"status\",\n                    dataTextField: \"text\",\n                    dataOrderField: null\n                },\n                resources: [],\n                messages: {\n                    edit: \"Edit\",\n                    createNewCard: \"Create new card\",\n                    create: \"Create\",\n                    search: \"Search\",\n                    previewCard: \"Preview card\",\n                    addCard: \"Add card\",\n                    editCard: \"Edit card\",\n                    deleteCard: \"Delete Card\",\n                    addColumn: \"Add column\",\n                    editColumn: \"Edit column\",\n                    deleteColumn: \"Delete column\",\n                    close: \"Close\",\n                    cancel: \"Cancel\",\n                    \"delete\": \"Delete\",\n                    saveChanges: \"Save changes\",\n                    title: \"Title:\",\n                    description: \"Description:\",\n                    newColumn: \"New column\",\n                    deleteColumnConfirm: \"Are you sure you want to delete this column?\",\n                    deleteCardConfirm: \"Are you sure you want to delete this card?\"\n                }\n            },\n\n            defaultTools: {\n                addColumn: { type: \"button\", name: \"addColumn\", command: \"AddColumnCommand\", icon: \"plus\", rules: \"isEditable\" },\n                spacer: { type: \"spacer\" },\n                search: {\n                    type: \"component\",\n                    name: \"search\",\n                    command: \"SearchCommand\",\n                    options: \"{ \\\"field\\\": \\\"name\\\", \\\"operator\\\": \\\"startswith\\\" }\",\n                    rules: \"isSearchable\",\n                    overflow: \"never\",\n                    component: \"TextBox\",\n                    componentOptions: {\n                        placeholder: \"Search\",\n                        icon: \"search\",\n                        commandOn: \"input\"\n                    }\n                }\n            },\n\n            items: function() {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].cards());\n                }\n\n                return result;\n            },\n\n            itemsByStatus: function(status) {\n                var that = this,\n                    result = that._getColumn(status).cards();\n\n                return result;\n            },\n\n            itemsByColumn: function(columnElm) {\n                var that = this,\n                    column = that._getColumnByElement(columnElm);\n\n                if (column) {\n                    return column.cards();\n                }\n            },\n\n            load: function() {\n                var that = this,\n                    fetchPromises = [];\n\n                that._progress(true);\n\n                fetchPromises.push(that.columnsDataSource.fetch());\n\n                for (var key in that.resources) {\n                    fetchPromises.push(that.resources[key].dataSource.fetch());\n                }\n\n                $.when.apply(null, fetchPromises)\n                    .then(that.dataSource.read.bind(that.dataSource));\n            },\n\n            dataItem: function(cardElm) {\n                var that = this,\n                    dataSource = that.dataSource,\n                    uid;\n\n                cardElm = $(cardElm);\n                uid = cardElm.attr(kendo.attr(\"uid\"));\n\n                return dataSource.getByUid(uid);\n            },\n\n            columnDataItem: function(columnElm) {\n                var that = this,\n                    columnsDataSource = that.columnsDataSource,\n                    uid;\n\n                columnElm = $(columnElm);\n                uid = columnElm.attr(kendo.attr(\"uid\"));\n\n                return columnsDataSource.getByUid(uid);\n            },\n\n            columns: function() {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].element);\n                }\n\n                return result;\n            },\n\n            columnByStatus: function(status) {\n                return this._getColumn(status).element;\n            },\n\n            select: function(card, toggle) {\n                var that = this;\n\n                if (!card) {\n                    return that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).eq(0);\n                }\n\n                card = $(card);\n                toggle = toggle !== false;\n\n                if (toggle) {\n                    that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected)\n                        .removeClass(TaskBoard.styles.selected);\n                }\n\n                card.toggleClass(TaskBoard.styles.selected, toggle);\n            },\n\n            previewCard: function(cardElement) {\n                var that = this,\n                    options = that.options,\n                    args = that._extendExecArgs({ target: cardElement });\n\n                if (options.previewPane) {\n                    that._openPane(extend({\n                        pane: \"Preview\"\n                    }, args));\n                }\n            },\n\n            editCard: function(cardElement) {\n                var that = this,\n                    options = that.options,\n                    args;\n\n                cardElement = $(cardElement);\n                args = that._extendExecArgs({ target: cardElement });\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Edit\"\n                    }, args));\n                }\n            },\n\n            saveCard: function() {\n                var that = this;\n\n                that.dataSource.sync();\n            },\n\n            deleteCard: function(cardElement) {\n                var that = this,\n                    card = that.dataItem(cardElement);\n\n                that.dataSource.remove(card);\n                that.dataSource.sync();\n            },\n\n            addCard: function(dataItem) {\n                var that = this,\n                    options = that.options,\n                    args = { card: dataItem };\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Create\"\n                    }, args));\n                }\n            },\n\n            addColumn: function(index, data) {\n                var that = this,\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                    }),\n                    newColumn, model, column;\n\n                if (isNaN(index) && !data) {\n                    data = index;\n                    index = null;\n                }\n\n                model = that.columnsDataSource._createNewModel(data);\n                index = isNaN(index) || index === null ? that.columnsDataSource.data().length : index;\n                column = that.columns().eq(index);\n                that.columnsDataSource.insert(index, model);\n\n                newColumn = new ui.taskboard.NewColumn(columnSettings, model);\n\n                if (isNaN(index) || !column.length) {\n                    that.columnsContainer.append(newColumn.element);\n                } else {\n                    column.before(newColumn.element);\n                }\n\n                newColumn.bind(ACTION, that.executeCommand.bind(that));\n            },\n\n            editColumn: function(columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that._getColumnByElement(columnElement).edit();\n            },\n\n            saveColumn: function() {\n                var that = this;\n\n                that.columnsDataSource.sync();\n            },\n\n            deleteColumn: function(columnElement) {\n                var that = this,\n                    column = that.columnDataItem(columnElement);\n\n                that.columnsDataSource.remove(column);\n                that.columnsDataSource.sync();\n            },\n\n            registerShortcut: function(selector, shortcut, options) {\n                var that = this;\n\n                that.keyboardManager.registerShortcut(selector, shortcut, options);\n            },\n\n            enable: function(cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                cardElement.toggleClass(TaskBoard.styles.disabled, toggle === false);\n                cardElement.attr(\"aria-disabled\", toggle === false);\n            },\n\n            enableByColumn: function(columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card) {\n                    that.enable(card, toggle);\n                });\n            },\n\n            readOnly: function(cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                toggle = toggle !== false;\n\n                cardElement.find(\"[\" + kendo.attr(\"command\") + \"]\").toggleClass(TaskBoard.styles.disabled, toggle);\n                cardElement.find(\"a,button\").toggleClass(TaskBoard.styles.disabled, toggle);\n\n                cardElement.toggleClass(TaskBoard.styles.ignoreDrag, toggle);\n                cardElement.attr(\"aria-readonly\", toggle);\n            },\n\n            readOnlyByColumn: function(columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card) {\n                    that.readOnly(card, toggle);\n                });\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n\n                if (that.options.autoBind) {\n                    that.dataSource.read();\n                }\n            },\n\n            setColumnsDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.columns = dataSource;\n                that._columnsDataSource();\n\n                if (that.options.autoBind) {\n                    that.columnsDataSource.fetch(function() {\n                        that._renderCards(that.dataSource.view());\n                    });\n                }\n            },\n\n            _getColumn: function(status) {\n                return this._columns[status];\n            },\n\n            _getColumnByElement: function(columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                for (var key in that._columns) {\n                    if (that._columns[key].element[0] === columnElement[0]) {\n                        return that._columns[key];\n                    }\n                }\n            },\n\n            _openPane: function(options) {\n                var that = this,\n                    pane = new ui.taskboard.panes[options.pane](that, extend({}, that.options, {\n                        states: that._buildStates()\n                    }), options.card, that.resources, options.column),\n                    focusableElement, keyboardManager;\n\n                if (that.pane) {\n                    that._closePane();\n                }\n\n                that.pane = pane;\n                that.content.after(that.pane.element);\n                that.content.css(\"margin-right\",\n                    that.pane.element.outerWidth() -\n                    parseInt(that.content.css(\"paddingRight\"), 10));\n\n                that.pane.bind(ACTION, that.executeCommand.bind(that));\n\n                that.pane.keyboardManager = keyboardManager = new ui.taskboard.KeyboardManager(that.pane.element);\n\n                keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ESC\n                }, { command: \"ClosePaneCommand\" });\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ENTER\n                }, { command: \"SaveChangesCommand\", options: {\n                    card: that.pane._dataItem\n                } });\n\n                focusableElement = that.pane.element.find(\"input\");\n\n                if (!focusableElement.length) {\n                    focusableElement = that.pane.element.find(\"button\");\n                }\n\n                setTimeout(function() {\n                    focusableElement.eq(0).trigger(\"focus\");\n                }, 0);\n            },\n\n            _closePane: function() {\n                var that = this;\n\n                if (that.pane) {\n                    that.pane.keyboardManager.destroy();\n                    that.pane.unbind(ACTION);\n                    that.pane.destroy();\n                    delete that.pane;\n\n                    that.content.css(\"margin-right\", \"\");\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoard.styles,\n                    headerElm = \"<div class='\" + styles.header + \"'></div>\",\n                    contentElm = \"<div class='\" + styles.content + \"'></div>\",\n                    colsContainer = \"<div class='\" + styles.columnsContainer + \"'></div>\";\n\n                that.element.addClass(styles.wrapper)\n                    .width(options.width)\n                    .height(options.height)\n                    .attr(\"role\", \"application\");\n                that.header = $(headerElm).appendTo(that.element);\n                that.content = $(contentElm).appendTo(that.element);\n                that.columnsContainer = $(colsContainer).appendTo(that.content);\n            },\n\n            _initToolbar: function() {\n                var that = this,\n                    styles = TaskBoard.styles,\n                    options = that.options,\n                    toolbarElm = $(\"<div class='\" + styles.toolbar + \"'></div>\"),\n                    toolbarOptions = isArray(options.toolbar) ? { items: options.toolbar } : options.toolbar,\n                    tools;\n\n                if (options.toolbar === false) {\n                    return;\n                } else if (toolbarOptions === true) {\n                    toolbarOptions = {};\n                }\n\n                tools = toolbarOptions.items ? toolbarOptions.items : Object.keys(that.defaultTools);\n                tools = that._processTools(tools);\n                toolbarOptions.tools = tools;\n                toolbarOptions.defaultTools = that.defaultTools;\n                toolbarOptions.parentMessages = that.options.messages;\n\n                that.header.append(toolbarElm);\n                that.toolbar = new kendo.ui.ToolBar(toolbarElm, toolbarOptions);\n                that.options.toolbar = that.toolbar.options;\n\n                that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n            },\n\n            _processTools: function(tools) {\n                var that = this,\n                    states = that._buildStates();\n\n                tools.forEach(t => {\n                    var rules = t.rules || that.defaultTools[t] ? that.defaultTools[t].rules : null;\n\n                    if (!rules) {\n                        return;\n                    }\n\n                    rules = rules.split(\";\");\n\n                    if (!rules.length) {\n                        return;\n                    }\n\n                    for (var i = 0; i < rules.length; i++) {\n                        if (!states[rules[i]]) {\n                            if (t.rules) {\n                                t.hidden = true;\n                            } else {\n                                that.defaultTools[t].hidden = true;\n                            }\n                        }\n                    }\n                });\n\n                return tools;\n            },\n\n            _toolbarClick: function(ev) {\n                var command = $(ev.target).data(\"command\"),\n                    options = $(ev.target).data(\"options\");\n\n                options = extend({}, options, { value: $(ev.target).val() });\n\n                if (!command) {\n                    return;\n                }\n\n                this.executeCommand({\n                    command: command,\n                    options: options\n                });\n            },\n\n            _isToolEnabled: function(toolName) {\n                var that = this,\n                    options = that.options.toolbar,\n                    items = options.items || that.defaultTools,\n                    found = false;\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                return items[toolName] || found;\n            },\n\n            _buildStates: function() {\n                var that = this;\n\n                return {\n                    isEditable: that._isEditable(),\n                    isReorderable: that._isReorderable(),\n                    isSelectable: that._isSelectable(),\n                    isReadOnly: !that._isReorderable() && !that._isEditable(),\n                    isDisabled: !that._isReorderable() && !that._isEditable() && !that._isSelectable(),\n                    isSearchable: that._isSearchable(),\n                    notLocalColumns: !(that.columnsDataSource.transport instanceof kendo.data.LocalTransport),\n                    isRtl: kendo.support.isRtl(that.wrapper)\n                };\n            },\n\n            _isSearchable: function() {\n                return !!this.options.search;\n            },\n\n            _isEditable: function() {\n                return !!this.options.editable;\n            },\n\n            _isReorderable: function() {\n                return !!this.options.reorderable;\n            },\n\n            _isSelectable: function() {\n                return !!this.options.selectable;\n            },\n\n            executeCommand: function(args) {\n                var that = this,\n                    commandName = args.command,\n                    commandOptions = extend({ taskboard: this }, isPlainObject(args.options) ? that._extendExecArgs(args.options) : { value: args.options }),\n                    command = ui.taskboard.commands[commandName] && new ui.taskboard.commands[commandName](commandOptions);\n\n\n                if (!that.trigger(EXECUTE, args)) {\n                    if (command) {\n                        command.exec();\n                    } else {\n                        window.console.warn(kendo.format(\"Trying to use {0} command, but such is not available in the kendo.ui.taskboard.commands namespace!\", commandName));\n                    }\n                }\n            },\n\n            _extendExecArgs: function(args) {\n                var that = this,\n                    target = args.draggableEvent ? args.item : args.target,\n                    columnElm, cardElm, columnDataItem, cardDataItem;\n\n                if (args.card) {\n                    target = that.items().filter(function(idx, elm) {\n                        return $(elm).attr(kendo.attr(\"uid\")) === args.card.get(\"uid\");\n                    });\n                }\n\n                if (!target || !(target && target.length)) {\n                    return args;\n                }\n\n                columnElm = args.columnElement || (target.is(DOT + TaskBoard.styles.column) ? target : target.parents(DOT + TaskBoard.styles.column));\n                columnDataItem = that.columnsDataSource.getByUid(columnElm.data(kendo.ns + \"uid\"));\n                cardElm = target.is(DOT + TaskBoard.styles.card) ? target : target.closest(DOT + TaskBoard.styles.card);\n                cardDataItem = that.dataSource.getByUid(cardElm.data(kendo.ns + \"uid\"));\n\n                return extend(args, {\n                    card: cardDataItem,\n                    cardElement: cardElm.length ? cardElm : undefined$1,\n                    column: columnDataItem,\n                    columnElement: columnElm.length ? columnElm : undefined$1\n                });\n            },\n\n\n            _select: function(card, toggle) {\n                var that = this;\n\n                if (toggle === null) {\n                    toggle = true;\n                }\n\n                if (!that.trigger(SELECT, { card: card })) {\n                    that.select(card, toggle);\n                    that.previewCard(card);\n                }\n            },\n\n            _columnsDataSource: function() {\n                var that = this,\n                    options = that.options,\n                    columnSettings = options.columnSettings,\n                    columnsDataSource = options.columns;\n\n                columnsDataSource = isArray(columnsDataSource) ? { data: columnsDataSource } : columnsDataSource;\n\n                if (columnSettings.dataOrderField && !columnsDataSource.sort) {\n                    columnsDataSource.sort = { field: columnSettings.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!columnsDataSource.schema) {\n                    var fields = {};\n\n                    fields[columnSettings.dataStatusField] = { type: \"string\", defaultValue: function() { return kendo.guid().split(\"-\")[0]; } };\n                    fields[columnSettings.dataTextField] = { type: \"string\" };\n\n                    if (columnSettings.dataOrderField) {\n                        fields[columnSettings.dataOrderField] = { type: \"number\" };\n                    }\n\n                    columnsDataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.columnsDataSource && that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                } else {\n                    that._columnsChangeHandler = that._columnsDataSourceChange.bind(that);\n                    that._columnsErrorHandler = that._error.bind(that);\n                }\n\n                that.columnsDataSource = DataSource.create(columnsDataSource)\n                                .bind(CHANGE, that._columnsChangeHandler)\n                                .bind(ERROR, that._columnsErrorHandler);\n            },\n\n            _columnsDataSourceChange: function(ev) {\n                var that = this,\n                    view = that.columnsDataSource.view(),\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                     }),\n                    statusField = columnSettings.dataStatusField;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(COLUMNSDATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._columns = {};\n                that.columnsContainer.html(\"\");\n\n                for (var i = 0; i < view.length; i++) {\n                    var data = view[i];\n                    var status = data[statusField] || GENERIC;\n                    var column;\n\n                    column = that._columns[status] = new ui.taskboard.Column(columnSettings, data);\n                    that.columnsContainer.append(column.element);\n                    column.bind(ACTION, that.executeCommand.bind(that));\n                    column.bind(MOVE, that._move.bind(that));\n                    column.bind(MOVE_END, that._moveEnd.bind(that));\n                    column.bind(MOVE_START, that._moveStart.bind(that));\n                    column.bind(CHANGE, that._changeOrder.bind(that));\n                    that._tabindex(column.element);\n                }\n\n                if (ev.action === \"sync\" || ev.action === undefined$1) {\n                    that._renderCards(that.dataSource.view());\n                }\n\n                that._progress(false);\n                that.trigger(COLUMNSDATABOUND, ev);\n            },\n\n            _move: function(ev) {\n                this.trigger(MOVE, this._extendExecArgs(ev));\n            },\n\n            _moveEnd: function(ev) {\n                this.trigger(MOVE_END, this._extendExecArgs(ev));\n            },\n\n            _moveStart: function(ev) {\n                this.trigger(MOVE_START, this._extendExecArgs(ev));\n            },\n\n            _changeOrder: function(ev) {\n                this.trigger(CHANGE, this._extendExecArgs(ev));\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                    dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (options.dataOrderField && !dataSource.sort) {\n                    dataSource.sort = { field: options.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!dataSource.schema) {\n                    var fields = {};\n\n                    fields[options.dataStatusField] = { type: \"string\" };\n                    fields[options.dataTitleField] = { type: \"string\" };\n                    fields[options.dataDescriptionField] = { type: \"string\" };\n                    fields[options.dataCategoryField] = { type: \"string\" };\n\n                    if (options.dataOrderField) {\n                        fields[options.dataOrderField] = { type: \"number\" };\n                    }\n\n                    dataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.dataSource && that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                } else {\n                    that._changeHandler = that._change.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = DataSource.create(dataSource)\n                                .bind(CHANGE, that._changeHandler);\n            },\n\n            _change: function(ev) {\n                var that = this;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(DATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._clearColumns();\n                that._renderCards(that.dataSource.view());\n                that._closePane();\n\n                that.trigger(DATABOUND, ev);\n                that._progress(false);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _renderCards: function(data) {\n                var that = this;\n\n                for (var i = 0; i < data.length; i++) {\n                    that._renderCard(data[i]);\n                }\n            },\n\n            _renderCard: function(card) {\n                var that = this,\n                    options = extend({}, that.options, { states: that._buildStates() }),\n                    statusField = options.dataStatusField,\n                    status = card[statusField] || GENERIC;\n\n                if (status && that._columns[status]) {\n                    card = new ui.taskboard.Card(options, card, that.resources);\n                    that._columns[status].addCard(card.element);\n                    that._tabindex(card.element);\n                }\n            },\n\n            _clearColumns: function() {\n                var that = this;\n\n                for (var key in that._columns) {\n                    that._columns[key].empty();\n                }\n            },\n\n            _initCardMenu: function() {\n                var that = this,\n                    options = that.options,\n                    cardMenuOptions = isArray(options.cardMenu) ? { items: options.cardMenu } : options.cardMenu;\n\n                cardMenuOptions = extend({}, {\n                    messages: options.messages,\n                    target: that.columnsContainer,\n                    filter: \".k-taskboard-card-menu-button\",\n                    action: that.executeCommand.bind(that),\n                    showOn: \"click\",\n                    alignToAnchor: true,\n                    states: that._buildStates()\n                }, cardMenuOptions);\n\n                if (options.cardMenu === false) {\n                    return;\n                }\n\n                that.cardMenu = new ui.taskboard.CardMenu(\"<ul></ul>\", cardMenuOptions);\n            },\n\n            _initResources: function() {\n                var that = this,\n                    resources = that.options.resources;\n\n                for (var i = 0; i < resources.length; i++) {\n                    that._addResource(resources[i]);\n                }\n            },\n\n            _addResource: function(resource) {\n                var that = this;\n\n                if (!that.resources) {\n                    that.resources = {};\n                }\n\n                that.resources[resource.field] = {\n                    field: resource.field,\n                    name: resource.name,\n                    title: resource.title || resource.field,\n                    dataTextField: resource.dataTextField || \"text\",\n                    dataValueField: resource.dataValueField || \"value\",\n                    dataColorField: resource.dataColorField || \"color\",\n                    valuePrimitive: resource.valuePrimitive === false ? false : true,\n                    multiple: resource.multiple || false,\n                    dataSource: that._resourceDataSource(resource.dataSource)\n                };\n            },\n\n            _resourceDataSource: function(resourceDS) {\n                var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS,\n                    dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n                return dataSourceInstance;\n            },\n\n            _progress: function(toggle) {\n                var that = this;\n\n                kendo.ui.progress(that.element, toggle);\n            },\n\n            _initKeyboard: function() {\n                var that = this;\n\n                that.keyboardManager = new ui.taskboard.KeyboardManager(that.element);\n\n                that.keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                that._registerShortcuts();\n            },\n\n            _registerShortcuts: function() {\n                var that = this,\n                    states = that._buildStates();\n\n                if (states.isEditable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditColumnCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"a\",\n                        ctrlKey: true\n                    }, { command: \"AddCardCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column + \" *\", {\n                        keyCode: kendo.keys.ESC\n                    }, { command: \"CancelEditColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteCardCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditCardCommand\", handler: preventDefault });\n                }\n\n                if (states.isSelectable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.ENTER\n                    }, { command: \"SelectCardCommand\", handler: preventDefault });\n                }\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.UP\n                }, { command: \"MoveFocusCommand\", options: { value: \"up\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                }\n\n                if (that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                }\n\n                for (var key in that._columns) {\n                    that._columns[key].destroy();\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                }\n\n                if (that.cardMenu) {\n                    that.cardMenu.destroy();\n                }\n\n                if (that.keyboardManager) {\n                    that.keyboardManager.destroy();\n                }\n\n                if (that.pane) {\n                    that.closePane();\n                }\n\n                Widget.fn.destroy.call(that);\n            }\n        });\n\n        kendo.ui.plugin(TaskBoard);\n\n        extend(true, TaskBoard, { styles: TaskBoardStyles });\n\n    })(window.kendo.jQuery);\n"]}