{"version":3,"file":"kendo.timedurationpicker.js","names":["__meta__","id","name","category","description","docsCategory","depends","$","undefined$1","kendo","window","ui","Widget","html","map","extend","OPEN","CLOSE","CHANGE","FOCUSED","ARIA_EXPANDED","HOVEREVENTS","NS","STATEDISABLED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","DISABLED","READONLY","STATEINVALID","MASKCHAR","caret","keys","defaultColumns","hours","format","divider","min","max","step","minutes","seconds","milliseconds","days","TimeDurationPicker","init","element","options","columns","that","this","fn","call","_columns","column","extended","selectorFormat","repeat","match","length","readonly","Boolean","attr","enable","is","parents","_wrapper","_button","_applyCssClasses","_input","_popupView","_buildMask","_validation","_editable","disable","_ariaLabel","_timeSelector","_listsContainer","value","_old","_maskedInput","val","_canUpdateLast","notify","separator","shortcuts","size","fillMode","rounded","messages","set","cancel","events","destroy","wrapper","off","_value","parseInt","_updateValueFromTimeSelector","_toggleHover","e","currentTarget","toggleClass","type","add","addClass","removeClass","on","removeAttr","_attachHandlers","TimeSelector","anchor","focus","trigger","_selectNearestSection","_lastCaret","close","preventDefault","open","change","_removeInvalidState","button","next","renderButton","icon","shape","insertAfter","role","part","toAdd","_emtpyMask","_maskParts","i","replace","end","mask","symbolsLength","start","indexOf","numberEnd","lastIndexOf","numberStart","push","autocomplete","insertBefore","hide","wrap","parent","_keydown","bind","_inputHandler","_focus","_focusout","_paste","_mouseDown","_mouseUp","_click","_mouseOnInput","selection","_triggerChange","_lastValue","_updateValueFromInput","setTimeout","index","_getPartValue","startSeparator","lastSeparator","substring","_getEmptyPart","_fillParts","clipNumber","symbols","parts","split","join","_clearParts","endBoundary","_updatePart","oldValue","entered","emrtyPart","current","search","_replacePart","newPart","toggle","_switchPart","future","past","key","keyCode","_backward","BACKSPACE","LEFT","RIGHT","popup","visible","_scrollerKeyDownHandler","UP","DOWN","altKey","ENTER","partValue","masksToAdd","valueParts","rest","Math","floor","getTimeParts","_validationIcon","_addInvalidState","colValue","values","valid","emptyPart","_isPasted","_pasted","clipboardData","originalEvent","getData","_replaceEntire","_activeElement","validEntry","updatedPart","endSubstring","startSubstring","deletedPart","canUpdate","restored","oldpartValue","nextSeparator","old","lengthDiff","test","cssProperties","registerPrefix","registerValues","prop","roundedValues","concat","plugin","jQuery"],"sources":["kendo.timedurationpicker.js"],"mappings":"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","sourcesContent":["import './kendo.timeselector.js';\n\nvar __meta__ = {\n    id: \"timedurationpicker\",\n    name: \"TimeDurationPicker\",\n    category: \"web\",\n    description: \"The TimeDurationPicker widget allows the end user to select a time range stored in milliseconds.\",\n    docsCategory: \"editors\",\n    depends: [ \"timeselector\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        html = kendo.html,\n        map = $.map,\n        extend = $.extend,\n        OPEN = \"open\",\n        FOCUS = \"focus\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        SPAN = \"<span></span>\",\n        KEYDOWN = \"keydown\",\n        FOCUSOUT = \"focusout\",\n        FOCUSED = \"k-focus\",\n        MOUSEUP = \"mouseup\",\n        MOUSEDOWN = \"mousedown\",\n        PASTE = \"paste\",\n        NS = \".kendoTimeDurationPicker\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        HOVEREVENTS = \"mouseenter\" + NS + \" mouseleave\" + NS,\n        STRING = \"string\",\n        INPUT = \"input\",\n        HOVER = \"k-hover\",\n        CLASS_ICON = \"k-icon\",\n        STATEDISABLED = \"k-disabled\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        ARIA_READONLY = \"aria-readonly\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        STATEINVALID = \"k-invalid\",\n        MASKCHAR = \"_\",\n        caret = kendo.caret,\n        keys = kendo.keys,\n        NS = \".kendoTimeDurationPicker\";\n        html = kendo.html;\n\n    var defaultColumns = {\n        \"hours\": {\n            name: \"hours\",\n            format: \"## hours\",\n            divider: 3600000,\n            min: 0,\n            max: 23,\n            step: 1\n        },\n        \"minutes\": {\n            name: \"minutes\",\n            format: \"## mins\",\n            divider: 60000,\n            min: 0,\n            max: 59,\n            step: 1\n        },\n        \"seconds\": {\n            name: \"seconds\",\n            format: \"## sec\",\n            divider: 1000,\n            min: 0,\n            max: 59,\n            step: 1\n        },\n        \"milliseconds\": {\n            name: \"milliseconds\",\n            format: \"### msec\",\n            min: 0,\n            max: 999,\n            step: 1\n        },\n        \"days\": {\n            format: \"## days\",\n            name: \"days\",\n            divider: 86400000,\n            min: 0,\n            max: 365,\n            step: 1\n        }\n    };\n\n    function convertToMsec(value) {\n        return ((value.days || 0) * 86400000) + ((value.hours || 0) * 3600000) + ((value.minutes || 0) * 60000) + ((value.seconds || 0) * 1000) + (value.milliseconds || 0);\n    }\n\n    function getTimeParts(value) {\n        var rest;\n        var days = Math.floor(value / 86400000);\n        rest = value % 86400000;\n        var hours = Math.floor(rest / 3600000);\n        rest = value % 3600000;\n        var minutes = Math.floor(rest / 60000);\n        rest = value % 60000;\n        var seconds = Math.floor(rest / 1000);\n        rest = value % 1000;\n\n        return {\n            days: days,\n            hours: hours,\n            minutes: minutes,\n            seconds: seconds,\n            milliseconds: rest\n        };\n    }\n\n    function normalizeColumns(columns) {\n        return map(columns, function(column) {\n            column = typeof column === STRING ? { name: column } : column;\n            var extended = extend(true, {}, defaultColumns[column.name], column);\n            extended.selectorFormat = \"{0:\" + \"0\".repeat(extended.format.match(/#/g).length) + \"}\";\n            return extended;\n        });\n    }\n\n    var TimeDurationPicker = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n\n            Widget.fn.init.call(that, element, options);\n\n            that._columns = normalizeColumns(options.columns);\n            that.options.columns = that._columns;\n            that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n            that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.is(\"[disabled]\") || $(element).parents(\"fieldset\").is(':disabled')));\n\n            that._wrapper();\n            that._button();\n            that._applyCssClasses();\n            that._input();\n            that._popupView();\n            that._buildMask();\n            that._validation();\n            that._editable({\n                readonly: that.options.readonly,\n                disable: !that.options.enable\n            });\n            that._ariaLabel(that._timeSelector._listsContainer);\n            if (that.options.value) {\n                that.value(options.value);\n                that._old = that._maskedInput.val();\n            }\n            that._canUpdateLast = true;\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"TimeDurationPicker\",\n            columns: [],\n            separator: \",\",\n            shortcuts: [],\n            value: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            messages: {\n                set: \"Set\",\n                cancel: \"Cancel\",\n                days: \"Days\",\n                hours: \"Hours\",\n                minutes: \"Minutes\",\n                milliseconds: \"Milliseconds\",\n                seconds: \"Seconds\"\n            }\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            CHANGE\n        ],\n\n        destroy: function() {\n            var that = this;\n\n            that.wrapper.off(NS);\n            that._maskedInput.off(NS);\n            if (that._timeSelector) {\n                that._timeSelector.destroy();\n                that._timeSelector = null;\n            }\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            if (typeof value === \"number\") {\n                value = parseInt(value);\n            } else {\n                value = null;\n            }\n\n            that._value = value;\n            that.element.val(that._value);\n            that._timeSelector._value = that._value;\n            that._updateValueFromTimeSelector();\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _editable: function(options) {\n            var that = this,\n                disable = options.disable,\n                readonly = options.readonly,\n                element = that._maskedInput.add(that.element).off(NS),\n                wrapper = that.wrapper.off(NS);\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                if (element && element.length) {\n                    element.removeAttr(DISABLED);\n                    element.removeAttr(READONLY);\n                }\n                element.attr(ARIA_DISABLED, false)\n                       .attr(ARIA_READONLY, false);\n\n                that._attachHandlers();\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable)\n                       .attr(ARIA_READONLY, readonly);\n            }\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n        },\n\n        _popupView: function() {\n            var that = this;\n            var options = that.options;\n\n            if (!that._timeSelector) {\n                that._timeSelector = new kendo.ui.TimeSelector(that._maskedInput, {\n                    id: that.element.attr(\"id\") + \"_timeSelector\",\n                    anchor: that.wrapper,\n                    columns: options.columns,\n                    shortcuts: options.shortcuts,\n                    value: options.value,\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    rounded: options.rounded,\n                    messages: options.messages,\n                    focus: function() {\n                        that._maskedInput.trigger(\"focus\");\n                        that._selectNearestSection(that._lastCaret || 0);\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            that._maskedInput.attr(ARIA_EXPANDED, false);\n                            that._timeSelector._listsContainer.attr(ARIA_HIDDEN, true);\n                        }\n                    },\n                    open: function(e) {\n                        if (that.trigger(OPEN)) {\n                            e.preventDefault();\n                        } else {\n                            that._maskedInput.attr(ARIA_EXPANDED, true);\n                            that._timeSelector._listsContainer.attr(ARIA_HIDDEN, false);\n                            that._lastCaret = caret(that._maskedInput)[0];\n                            if (that._lastCaret === that._maskedInput.val().length) {\n                                that._lastCaret = 0;\n                            }\n                        }\n                    },\n                    change: function(value) {\n                        that._value = value;\n                        that._updateValueFromTimeSelector();\n                        that._removeInvalidState();\n                        that.trigger(CHANGE);\n                    }\n                });\n            }\n        },\n\n        _button: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                button;\n\n            button = element.next(\"button.k-input-button\");\n\n            if (!button[0]) {\n                button = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"select\"></button>', {\n                    icon: \"clock-arrow-rotate\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(element);\n            }\n\n            that._button = button.attr({\n                \"role\": \"button\"\n            });\n        },\n\n        _buildMask: function() {\n            var columns = this.options.columns;\n            var format;\n            var toAdd = \"\";\n            var part;\n\n            this._emtpyMask = \"\";\n            this._maskParts = [];\n\n            for (var i = 0; i < columns.length; i++) {\n                part = {};\n                format = columns[i].format;\n\n                if (i) {\n                    toAdd = this.options.separator;\n                }\n\n                toAdd += format.replace(/#/g, '_');\n                this._emtpyMask += toAdd;\n                part.end = this._emtpyMask.length - 1;\n                part.mask = format.replace(/#/g, '_');\n                part.symbolsLength = part.mask.match(/_/g).length;\n                part.start = this._emtpyMask.indexOf(part.mask);\n                part.numberEnd = this._emtpyMask.lastIndexOf(MASKCHAR) + 1;\n                part.numberStart = this._emtpyMask.indexOf(MASKCHAR, part.start);\n\n                this._maskParts.push(part);\n            }\n\n            this._old = this._emtpyMask;\n            this._maskedInput.val(this._emtpyMask);\n        },\n\n        _input: function() {\n            var that = this;\n\n            that._maskedInput = $(\"<input />\")\n                        .attr(kendo.attr(\"validate\"), false)\n                        .attr({\n                            \"role\": \"combobox\",\n                            \"aria-expanded\": false,\n                            \"aria-controls\": that.element.attr(\"id\") + \"_timeSelector\",\n                            \"autocomplete\": \"off\"\n                        })\n                        .addClass(\"k-input-inner\")\n                        .insertBefore(that.element);\n\n            that.element.hide();\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper;\n\n            wrapper = element.parents(\".k-timedurationpicker\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap(SPAN).parent();\n            }\n\n            that.wrapper = wrapper.addClass(\"k-timedurationpicker k-input\");\n        },\n\n        _attachHandlers: function() {\n            var that = this;\n\n            that._maskedInput\n                    .on(KEYDOWN + NS, that._keydown.bind(that))\n                    .on(INPUT + NS, that._inputHandler.bind(that))\n                    .on(FOCUS + NS, that._focus.bind(that))\n                    .on(FOCUSOUT + NS, that._focusout.bind(that))\n                    .on(PASTE + NS, that._paste.bind(that))\n                    .on(MOUSEDOWN + NS, that._mouseDown.bind(that))\n                    .on(MOUSEUP + NS, that._mouseUp.bind(that));\n\n            that.wrapper.on(CLICK + NS, \".k-input-button\", that._click.bind(that));\n        },\n\n        _mouseDown: function() {\n            this._mouseOnInput = true;\n        },\n\n        _mouseUp: function() {\n            var selection = caret(this._maskedInput[0]);\n            var value = this._maskedInput[0].value;\n            if (selection[0] === selection[1]) {\n                this._selectNearestSection(selection[1] == value.length ? value.length - 1 : selection[1]);\n            }\n        },\n\n        _triggerChange: function() {\n            if ((this._lastValue == undefined$1 && this._value) || this._lastValue != this._value) {\n                this._lastValue = this._value;\n                this.trigger(CHANGE);\n            }\n        },\n\n        _focusout: function() {\n            this._updateValueFromInput();\n            this._triggerChange();\n\n            this._canUpdateLast = true;\n            this.wrapper.removeClass(FOCUSED);\n        },\n\n        _focus: function() {\n            var that = this;\n            if (!that._mouseOnInput) {\n                setTimeout(function() {\n                    that._selectNearestSection(0);\n                }, 10);\n            }\n            that._mouseOnInput = false;\n            that.wrapper.addClass(FOCUSED);\n        },\n\n        _selectNearestSection: function(index) {\n            var part;\n\n            for (var i = 0; i < this._maskParts.length; i++ ) {\n                part = this._maskParts[i];\n                if (index >= part.start && index <= part.end) {\n                    caret(this._maskedInput[0], part.numberStart, part.numberEnd);\n                }\n            }\n        },\n\n        _getPartValue: function(value, index) {\n            var that = this;\n            var separator = that.options.separator;\n            var startSeparator = value.indexOf(separator,index);\n            var lastSeparator = value.lastIndexOf(separator,index);\n            return value.substring(lastSeparator < 0 ? 0 : lastSeparator + 1 , startSeparator < 0 ? value.length : startSeparator );\n        },\n\n        _getEmptyPart: function(index) {\n            return this._getPartValue(this._emtpyMask, index);\n        },\n\n        _fillParts: function(clipNumber) {\n            var parts = this._emtpyMask.split(this.options.separator);\n            var symbols;\n            clipNumber = clipNumber + \"\";\n\n            for (var i = 0; i < parts.length; i++) {\n                symbols = parts[i].match(/_/g).length;\n                if (symbols > clipNumber.length) {\n                    parts[i] = parts[i].replace(MASKCHAR.repeat(symbols), \"0\".repeat(symbols - clipNumber.length) + clipNumber);\n                } else {\n                    parts[i] = parts[i].replace(MASKCHAR.repeat(symbols), clipNumber.substring(0, symbols));\n                    clipNumber = clipNumber.substring(symbols, symbols.length);\n                }\n            }\n            return parts.join(this.options.separator);\n        },\n\n        _clearParts: function(value, start, end) {\n            var parts = value.split(this.options.separator);\n            var index = 0;\n            var endBoundary;\n\n            for (var i = 0; i < parts.length; i++) {\n                endBoundary = index + parts[i].length;\n                if ((index <= start && endBoundary >= start) || (index <= end && endBoundary >= end)) {\n                    parts[i] = this._getEmptyPart(index);\n                }\n                index += (parts[i].length + 1);\n            }\n            return parts.join(this.options.separator);\n        },\n\n        _updatePart: function(oldValue, entered) {\n            var emrtyPart = this._getEmptyPart(this._old.indexOf(oldValue));\n            var current = oldValue.substring(emrtyPart.indexOf(MASKCHAR), emrtyPart.lastIndexOf(MASKCHAR) + 1);\n            var format = \"{0:\" + \"0\".repeat(current.length) + \"}\";\n\n            if (current.indexOf(MASKCHAR) >= 0 || !(oldValue[oldValue.search(/[0-9]/)] === \"0\") || entered.length > 1) {\n                return oldValue.replace(current, kendo.format(format, parseInt(entered)));\n            } else {\n                return oldValue.replace(current, kendo.format(format, parseInt(current + entered)));\n            }\n        },\n\n        _replacePart: function(oldValue, newPart, index) {\n            return oldValue.replace(this._getPartValue(oldValue, index), newPart);\n        },\n\n        _click: function() {\n            var that = this;\n\n            if (!that._timeSelector) {\n                return;\n            }\n\n            that._timeSelector.toggle();\n        },\n\n        _switchPart: function(options) {\n            var separator = this.options.separator;\n            var selection = options.caret != undefined$1 ? options.caret : caret(this._maskedInput[0])[0];\n            var value = this._maskedInput.val();\n            var index;\n\n            if (options.next) {\n                index = value.indexOf(separator, selection);\n                if (index < 0) {\n                    index = value.length - 1;\n                } else {\n                    index++;\n                }\n            } else {\n                index = value.lastIndexOf(separator, selection);\n                if (index < 0 ) {\n                    index = 0;\n                } else {\n                    index--;\n                }\n            }\n            this._selectNearestSection(index);\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode;\n            var separator = this.options.separator;\n            var selection;\n            var value;\n            var index;\n            var future;\n            var past;\n\n            this._backward = key === keys.BACKSPACE;\n            if (key == keys.LEFT || key == keys.RIGHT) {\n                e.preventDefault();\n                selection = caret(this._maskedInput[0])[0];\n                value = this._maskedInput.val();\n                future = value.indexOf(separator, selection);\n                past = value.lastIndexOf(separator, selection);\n\n                if ((future < 0 && key == keys.RIGHT) || (past < 0 && key == keys.LEFT)) {\n                    return;\n                }\n\n                index = (key == keys.LEFT) ? (past - 1) : (future + 1);\n                this._selectNearestSection(index);\n                if (key == keys.LEFT) {\n                    this._canUpdateLast = true;\n                }\n            } else if (this._timeSelector.popup.visible()) {\n                this._timeSelector._scrollerKeyDownHandler(e);\n            } else if (key == keys.UP || key == keys.DOWN) {\n                e.preventDefault();\n                if (e.altKey) {\n                    this._timeSelector.toggle();\n                }\n            } else if (key == keys.ENTER) {\n                this._updateValueFromInput();\n                this._triggerChange();\n            }\n        },\n\n        _updateValueFromTimeSelector: function() {\n            var that = this;\n            var valueParts = getTimeParts(that._value);\n            var value = \"\";\n            var column = this._columns[i];\n            var part;\n            var partValue;\n            var masksToAdd;\n\n            for (var i = 0; i < this._columns.length; i++) {\n                column = this._columns[i];\n                partValue = valueParts[column.name] + '';\n                part = this._maskParts[i];\n\n                if (i) {\n                    value += that.options.separator;\n                }\n\n                if (!valueParts[column.name]) {\n                    value += part.mask;\n                    continue;\n                }\n\n                masksToAdd = part.symbolsLength - partValue.length;\n                value += part.mask.replace(MASKCHAR.repeat(part.symbolsLength), \"0\".repeat(masksToAdd < 0 ? 0 : masksToAdd) + partValue);\n            }\n\n            that._maskedInput.val(value);\n            that._old = value;\n        },\n\n        _validation: function() {\n            var that = this;\n            var element = that.element;\n\n            that._validationIcon = $(\"<span class='k-input-validation-icon \" + CLASS_ICON + \" k-i-warning k-hidden'></span>\").insertAfter(element);\n        },\n\n        _addInvalidState: function() {\n            this.wrapper.addClass(STATEINVALID);\n            this._validationIcon.removeClass('k-hidden');\n        },\n\n        _removeInvalidState: function() {\n            this.wrapper.removeClass(STATEINVALID);\n            this._validationIcon.addClass('k-hidden');\n        },\n\n        _updateValueFromInput: function() {\n            var val = this._maskedInput.val();\n            var values = {};\n            var valid = true;\n            var column;\n            var part;\n            var colValue;\n\n            for (var i = 0; i < this._columns.length; i++) {\n                column = this._columns[i];\n                part = this._maskParts[i];\n                colValue = val.substring(part.numberStart, part.numberEnd).replace(/_/g, \"\");\n                colValue = kendo.parseInt(colValue || 0);\n\n                if (colValue >= column.min && colValue <= column.max) {\n                    values[column.name] = colValue;\n                } else {\n                    valid = false;\n                    break;\n                }\n            }\n\n            if (valid) {\n                this._value = convertToMsec(values);\n                this.element.val(this._value || \"\");\n                this._timeSelector._value = this._value;\n                this._removeInvalidState();\n            } else {\n                this._addInvalidState();\n            }\n        },\n\n        _paste: function(e) {\n            this._isPasted = true;\n            this._pasted = (e.clipboardData || e.originalEvent.clipboardData).getData('Text');\n            var emptyPart;\n\n            var selection = caret(this._maskedInput);\n\n            if (this._maskedInput.val().length == selection[1] && !selection[0]) {\n                this._replaceEntire = true;\n            } else {\n                emptyPart = this._getEmptyPart(selection[0]);\n                this._pasted = this._pasted.substring(0, emptyPart.match(/_/g).length);\n            }\n        },\n\n        _inputHandler: function() {\n            if (kendo._activeElement() !== this._maskedInput[0]) {\n                return;\n            }\n\n            var that = this;\n            var old = that._old;\n            var separator = that.options.separator;\n            var value = that._maskedInput[0].value;\n            var selection = caret(that._maskedInput)[0];\n            var lengthDiff = old.length - value.length;\n            var entered;\n            var validEntry;\n            var updatedPart;\n            var endSubstring;\n            var startSubstring;\n            var deletedPart;\n            var emptyPart;\n            var canUpdate;\n            var restored;\n            var oldpartValue;\n            var nextSeparator;\n\n            entered = that._isPasted ? that._pasted : value.substring(selection - 1, selection);\n            validEntry = /\\d/.test(entered);\n\n            if (that._isPasted && that._replaceEntire && validEntry) {\n                that._old = that._fillParts(parseInt(entered));\n                that._maskedInput.val(that._old);\n                that._selectNearestSection(0);\n                that._isPasted = that._replaceEntire = false;\n                return;\n            }\n\n            if (that._isPasted) {\n                lengthDiff = 0;\n            }\n\n            that._isPasted = false;\n\n            if ((entered === separator && !that._backward)) {\n                that._maskedInput.val(that._old);\n                that._switchPart({ caret: selection, next: true });\n                return;\n            }\n\n            if (!value && that._backward) {\n                that._old = that._emtpyMask;\n                that._maskedInput.val(that._old);\n                that._selectNearestSection(selection);\n                return;\n            }\n\n            if ((!validEntry && !that._backward)) {\n                that._maskedInput.val(that._old);\n                that._selectNearestSection(selection);\n                return;\n            }\n\n            if (!lengthDiff || lengthDiff > 0) {\n                endSubstring = value.substring(selection, value.length);\n                startSubstring = value.substring(0, selection);\n                deletedPart = that._emtpyMask.substring(startSubstring.length, old.indexOf(endSubstring));\n\n                restored = startSubstring + deletedPart + endSubstring;\n                oldpartValue = that._getPartValue(that._old, selection);\n                nextSeparator = that._old.indexOf(separator, that._old.indexOf(oldpartValue) + 1);\n\n                if (that._backward) {\n                    // if multiple parts\n                    if (deletedPart.split(separator).length > 1) {\n                        that._old = this._clearParts(restored, selection, selection + deletedPart.length);\n                    } else {\n                        emptyPart = this._getEmptyPart(selection);\n                        if (emptyPart == oldpartValue) {\n                            that._maskedInput.val(that._old);\n                            that._switchPart({ caret: selection });\n                            return;\n                        }\n                        that._old = that._replacePart(restored, emptyPart, selection);\n                    }\n                    that._maskedInput.val(that._old);\n                    that._selectNearestSection(selection);\n                    return;\n                }\n\n                if (nextSeparator < 0 && oldpartValue.indexOf(MASKCHAR) === -1 && !that._canUpdateLast) {\n                    that._maskedInput.val(that._old);\n                    that._selectNearestSection(selection);\n                    return;\n                }\n\n                if (validEntry) {\n                    updatedPart = that._updatePart(oldpartValue, entered);\n                    canUpdate = updatedPart[updatedPart.search(/[0-9]/)] === \"0\";\n                    restored = that._replacePart(restored, updatedPart, selection);\n                    that._maskedInput.val(restored);\n                    if (nextSeparator > 0 && !canUpdate) {\n                        that._selectNearestSection(nextSeparator + 1, true);\n                    } else {\n                        that._selectNearestSection(selection);\n                    }\n\n                    that._canUpdateLast = !(nextSeparator < 0 && !canUpdate);\n                }\n                that._old = restored;\n            } else if (lengthDiff < 0) {\n                that._maskedInput.val(that._old);\n                that._selectNearestSection(that._old.length - 1);\n            }\n        },\n\n    });\n\n    kendo.cssProperties.registerPrefix(\"TimeDurationPicker\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"TimeDurationPicker\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(TimeDurationPicker);\n\n})(window.kendo.jQuery);\n"]}