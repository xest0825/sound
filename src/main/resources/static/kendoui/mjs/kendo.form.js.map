{"version":3,"file":"kendo.form.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","NS","Widget","extend","VALIDATE","VALIDATEFIELD","CHANGE","SUBMIT","CLEAR","EQUAL_SET","GROUP","ARIA_DESCRIBEDBY","DATA_STOP","DATA_ROLE","DOT","formStyles","form","horizontal","vertical","field","fieldsContainer","fieldWrap","fieldError","fieldHint","fieldset","layout","legend","label","emptyLabel","optional","buttonsContainer","buttonsEnd","submit","clear","invalid","hidden","formOrientation","Form","init","element","options","that","this","fn","call","deepExtend","formData","_wrapper","_setFields","_setModel","_renderContainers","_renderButtons","_editable","_renderBoolLabels","_renderFieldsHints","_setEvents","events","orientation","validatable","validateOnBlur","validationSummary","errorTemplate","buttonsTemplate","messages","grid","items","formatLabel","focusFirst","_noLabelfieldTemplate","_fieldTemplate","_boolLabelTemplate","_groupTemplate","_buttonsTemplate","_errorTemplate","_hintTemplate","styles","width","height","wrapper","addClass","css","layoutWrapper","_setupLayoutContainer","_flattenFields","fields","concat","item","shift","result","push","apply","_defaultLabel","fieldName","customFormat","length","isFunction","split","join","trim","_formatLabel","isPlainObject","text","_defaultFields","formDataFields","Object","keys","itemFields","defaultFormDataFields","i","fieldInfo","fieldValue","type","editor","attributes","defaultFields","_fields","parseDate","toString","Editable","editors","_isHidden","optionalText","isHidden","_isAntiForgeryToken","data","ObservableObject","_model","MyModel","Model","define","validatorOptions","_addEditableMvvmAttributes","editable","kendoEditable","model","clearContainer","skipFocus","target","getKendoEditable","validator","_removeEditableMvvmAttributes","attr","_getItemTemplate","antiForgeryTokenName","_renderField","fieldTemplate","isHorizontal","fieldType","isBoolField","template","colSpan","_toggleFieldErrorState","state","closest","toggleClass","fieldElement","find","after","fieldWidgetInstance","nextLabelElement","hint","message","_associateHintContainer","widgetInstance","next","_errorsByName","removeAttribute","insertAfter","input","hintId","nextFocusable","getWidgetFocusableElement","toggleAttribute","_toggleHint","_renderGroup","child","renderedGroup","append","container","targetContainer","appendTarget","layoutContainer","layoutClassNames","appendTo","cols","gutter","bind","_validateField","_validate","on","_submit","_clear","_changeHandler","_change","ev","toJSON","valid","error","trigger","preventDefault","errors","value","jsonModel","validate","reset","unbind","isHiddenInput","is","val","hasClass","Upload","clearAllFiles","set","removeClass","_validateProxy","setOptions","newOptions","destroy","removeAttr","empty","off","plugin","jQuery"],"sources":["kendo.form.js"],"mappings":"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","sourcesContent":["import './kendo.editable.js';\n\nvar __meta__ = {\n        id: \"form\",\n        name: \"Form\",\n        category: \"web\",\n        description: \"The Form widget.\",\n        depends: [ \"editable\" ],\n        features: [{\n            id: \"form-dropdowns\",\n            name: \"DropDowns\",\n            description: \"Support for DropDown editors\",\n            depends: [ \"autocomplete\", \"combobox\", \"multiselect\", \"dropdowntree\", \"multicolumncombobox\" ]\n        }, {\n            id: \"form-datepickers\",\n            name: \"DatePickers\",\n            description: \"Support for DatePicker editors\",\n            depends: [ \"dateinput\", \"datepicker\", \"datetimepicker\", \"timepicker\" ]\n        }, {\n            id: \"form-inputs\",\n            name: \"Inputs\",\n            description: \"Support for Input editors\",\n            depends: [ \"numerictextbox\", \"maskedtextbox\", \"switch\", \"rating\", \"slider\", \"colorpicker\", \"radiogroup\", \"checkboxgroup\", \"textbox\", \"textarea\", \"checkbox\" ]\n        }, {\n            id: \"form-editor\",\n            name: \"Editor\",\n            description: \"Support for Editor editor\",\n            depends: [ \"editor\" ]\n        }]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            NS = \".kendoForm\",\n            Widget = ui.Widget,\n            extend = $.extend,\n            VALIDATE = \"validate\",\n            VALIDATEFIELD = \"validateField\",\n            VALIDATEINPUT = \"validateInput\",\n            CHANGE = \"change\",\n            CLICK = \"click\" + NS,\n            SUBMIT = \"submit\",\n            CLEAR = \"clear\",\n            MAX_WIDTH = \"max-width\",\n            SET = \"set\",\n            EQUAL_SET = \"equalSet\",\n            GROUP = \"group\",\n            ARIA_DESCRIBEDBY = \"aria-describedby\",\n            DATA_STOP = \"data-stop\",\n            DATA_ROLE = \"data-role\",\n            EDITABLE = \"editable\",\n            FORM = \"form\",\n            DOT = \".\",\n            DATA_ROLE_RADIO_GROUP = \"[data-role='radiogroup']\",\n            DATA_ROLE_CHECKBOX_GROUP = \"[data-role='checkboxgroup']\";\n\n        var formStyles = {\n            form: \"k-widget k-form\",\n            horizontal: \"k-form-horizontal\",\n            vertical: \"\",\n            field: \"k-form-field\",\n            fieldsContainer: \"k-form-fields-container\",\n            fieldWrap: \"k-form-field-wrap\",\n            fieldError: \"k-form-field-error\",\n            fieldHint: \"k-form-hint\",\n            fieldset: \"k-form-fieldset\",\n            layout: \"k-form-layout\",\n            legend: \"k-form-legend\",\n            label: \"k-label k-form-label\",\n            emptyLabel: \"k-form-label k-label-empty\",\n            optional: \"k-label-optional\",\n            buttonsContainer: \"k-form-buttons\",\n            buttonsEnd: \"k-buttons-end\",\n            submit: \"k-form-submit\",\n            clear: \"k-form-clear\",\n            invalid: \"k-invalid\",\n            hidden: \"k-hidden\"\n        };\n\n        var formOrientation = {\n            horizontal: \"horizontal\",\n            vertical: \"vertical\"\n        };\n\n        var Form = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.options = kendo.deepExtend({}, that.options, options);\n\n                if (options && options.formData) {\n                    that.options.formData = options.formData;\n                }\n\n                that._wrapper();\n\n                that._setFields();\n\n                that._setModel();\n\n                that._renderContainers();\n\n                that._renderButtons();\n\n                that._editable();\n\n                that._renderBoolLabels();\n\n                that._renderFieldsHints();\n\n                that._setEvents();\n            },\n\n            events: [\n                VALIDATEFIELD,\n                VALIDATE,\n                CHANGE,\n                SUBMIT,\n                CLEAR\n            ],\n\n            options: {\n                name: \"Form\",\n                orientation: formOrientation.vertical,\n                validatable: {\n                    validateOnBlur: true,\n                    validationSummary: false,\n                    errorTemplate: null\n                },\n                buttonsTemplate: null,\n                messages: {\n                    submit: \"Submit\",\n                    clear: \"Clear\",\n                    optional: \"(Optional)\"\n                },\n                layout: \"\",\n                grid: {},\n                formData: {},\n                items: [],\n                formatLabel: null,\n                focusFirst: false\n            },\n\n            _noLabelfieldTemplate: \"<div class='#:styles.field# #if (colSpan) { # k-colspan-#:colSpan# # } # #if (hidden) { ##:styles.hidden## } #'>\" +\n                                        \"<span class='#:styles.emptyLabel#'></span>\" +\n                                        \"<div class='k-form-field-wrap' data-container-for='#:field#'></div>\" +\n                                    \"</div>\",\n\n            _fieldTemplate: \"<div class='#:styles.field# #if (colSpan) { # k-colspan-#:colSpan# # } # #if (hidden) { ##:styles.hidden## } #'>\" +\n                                \"# if (label && !hidden) { # \" +\n                                    \"<label class='#:styles.label#' for='#:id#' id='#:id#-form-label'>\" +\n                                        \"# if (typeof label.encoded != 'undefined' && label.encoded === false) {#\" +\n                                            \"#= label.text || label #\" +\n                                        \"# } else { #\" +\n                                            \"#: label.text || label #\" +\n                                        \"# } #\" +\n                                        \"# if (label.optional) { # <span class='#:styles.optional#'>#:optional#</span>  #}#\" +\n                                    \"</label>\" +\n                                \"# } #\" +\n                                \"<div class='k-form-field-wrap' data-container-for='#:field#'></div>\" +\n                            \"</div>\",\n\n            _boolLabelTemplate: \"<label class='k-checkbox-label' for='#:id#' id='#:id#-form-label'>\" +\n                                    \"# if (typeof label.encoded != 'undefined' && label.encoded === false) {#\" +\n                                        \"#= label.text || label #\" +\n                                    \"# } else { #\" +\n                                        \"#: label.text || label #\" +\n                                    \"# } #\" +\n                                    \"# if (label.optional) { # <span class='#:styles.optional#'>#:optional#</span>  #}#\" +\n                                \"</label>\",\n\n            _groupTemplate: \"<fieldset class='#:styles.fieldset# #if (colSpan) { #  k-colspan-#:colSpan# # }#'>\" +\n                                \"<legend class='#:styles.legend#'>#:label.text || label #</legend>\" +\n                            \"</fieldset>\",\n\n            _buttonsTemplate: \"<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary #:styles.submit#' type='submit'><span class='k-button-text'>#:messages.submit#</span></button>\" +\n                              \"<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base #:styles.clear#'><span class='k-button-text'>#:messages.clear#</span></button>\",\n\n            _errorTemplate: \"<span class='k-form-error' id='#=field#-form-error'><div>#=message#</div></span>\",\n\n            _hintTemplate: \"<div class='k-form-hint' id='#=id#-form-hint'><span>#=message#</span></div>\",\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    formStyles = Form.styles,\n                    width = options.width,\n                    height = options.height;\n\n                that.wrapper = that.element\n                    .addClass(formStyles.form)\n                    .addClass(formStyles[options.orientation]);\n\n                if (height) {\n                    that.wrapper.height(height);\n                }\n\n                if (width) {\n                    that.wrapper.css(MAX_WIDTH, width);\n                }\n\n                that.layoutWrapper = that._setupLayoutContainer(that.wrapper, {\n                    grid: options.grid,\n                    layout: options.layout\n                });\n            },\n\n            _flattenFields: function(fields) {\n                var items = [].concat(fields),\n                    item = items.shift(),\n                    result = [],\n                    push = [].push;\n\n                while (item) {\n                    if (item.items) {\n                        push.apply(items, item.items);\n                    } else {\n                        push.call(result, item);\n                    }\n\n                    item = items.shift();\n                }\n\n                return result;\n            },\n\n            _defaultLabel: function(fieldName) {\n                var that = this,\n                    customFormat = that.options.formatLabel;\n\n                if (!fieldName.length) {\n                    return;\n                }\n\n                if (kendo.isFunction(customFormat)) {\n                    return customFormat(fieldName);\n                }\n\n                return fieldName.split(/(.*[a-z])(?=[A-Z])/).join(\" \").trim() + \":\";\n            },\n\n            _formatLabel: function(field, label) {\n                var that = this,\n                    text = $.isPlainObject(label) ? label.text : label;\n\n                if (text !== undefined$1) {\n                    return label;\n                }\n\n                return that._defaultLabel(field);\n            },\n\n            _defaultFields: function() {\n                var that = this,\n                    options = that.options,\n                    formDataFields = Object.keys(options.formData || {}),\n                    itemFields = options.items || {},\n                    defaultFormDataFields = [],\n                    field;\n\n                if (itemFields.length) {\n                    return itemFields;\n                }\n\n                for (var i = 0; i < formDataFields.length; i += 1) {\n                    field = formDataFields[i];\n\n                    defaultFormDataFields.push({\n                        field: field,\n                        id: field\n                    });\n                }\n\n                return defaultFormDataFields;\n            },\n\n            _setFields: function() {\n                var that = this,\n                    defaultFields = that._flattenFields(that._defaultFields()),\n                    formData = that.options.formData || {},\n                    fieldInfo, fieldValue, type, editor, attributes;\n\n                that._fields = [];\n\n                for (var field in defaultFields) {\n                    fieldInfo = defaultFields[field];\n                    fieldValue = formData[fieldInfo.field];\n\n                    type = typeof fieldInfo.editor === \"string\" ? fieldInfo.editor :\n                        kendo.type(fieldValue ? kendo.parseDate(fieldValue.toString()) || fieldValue : fieldValue);\n\n                    editor = kendo.isFunction(fieldInfo.editor) ? fieldInfo.editor :\n                         ui.Editable.fn.options.editors[type] ? \"\" : fieldInfo.editor;\n\n                    if (!that._isHidden(fieldInfo.editor)) {\n                        if (fieldInfo.label) {\n                            attributes = {\n                                \"aria-labelledby\": fieldInfo.id || fieldInfo.field + \"-form-label\"\n                            };\n                        } else if (!fieldInfo.attributes || !fieldInfo.attributes[\"aria-label\"]) {\n                            attributes = {\n                                \"aria-label\": fieldInfo.name || fieldInfo.field\n                            };\n                        }\n                    }\n\n                    fieldInfo = extend(true, {\n                        label: fieldInfo.label || fieldInfo.name || fieldInfo.field,\n                        optionalText: that.options.messages.optional\n                    }, fieldInfo, {\n                        id: fieldInfo.id || fieldInfo.field,\n                        name: fieldInfo.name || fieldInfo.field,\n                        type: type,\n                        editor: editor,\n                        attributes: attributes,\n                        isHidden: that._isHidden(fieldInfo.editor) || that._isAntiForgeryToken(fieldInfo.name || fieldInfo.field)\n                    });\n\n                    that._fields[field] = fieldInfo;\n                }\n            },\n\n            _setModel: function() {\n                var that = this,\n                    options = that.options,\n                    formData = options.formData || {};\n\n                if (options.formData instanceof kendo.data.ObservableObject) {\n                    that._model = formData;\n                    return;\n                }\n\n                var MyModel = kendo.data.Model.define({ fields: that._fields });\n\n                that._model = new MyModel(formData);\n            },\n\n            _editable: function() {\n                var that = this,\n                    options = that.options,\n                    validatorOptions = that.options.validatable;\n\n                that._addEditableMvvmAttributes();\n\n                that.editable = that.wrapper.kendoEditable({\n                    model: that._model,\n                    fields: that._fields || [],\n                    validateOnBlur: validatorOptions.validateOnBlur,\n                    validationSummary: validatorOptions.validationSummary,\n                    errorTemplate: validatorOptions.errorTemplate || that._errorTemplate,\n                    clearContainer: false,\n                    skipFocus: !options.focusFirst,\n                    target: that\n                }).getKendoEditable();\n\n                that.validator = that.editable.validatable;\n\n                that._removeEditableMvvmAttributes();\n            },\n\n            _addEditableMvvmAttributes: function() {\n                // required for two mvvm bindable widgets on one element\n                this.wrapper.attr(DATA_ROLE, EDITABLE);\n            },\n\n            _removeEditableMvvmAttributes: function() {\n                // required for two mvvm bindable widgets on one element\n                this.wrapper\n                    .attr(DATA_STOP, true)\n                    .attr(DATA_ROLE, FORM);\n            },\n\n            _getItemTemplate: function(type) {\n                var that = this,\n                    template;\n\n                if (type === GROUP) {\n                    template = that._groupTemplate;\n                } else {\n                    template = that._fieldTemplate;\n                }\n\n                return template;\n            },\n\n            _isHidden: function(editor) {\n                return typeof editor === \"string\" && editor === \"hidden\";\n            },\n\n            _isAntiForgeryToken: function(field) {\n                return field === ui.Editable.antiForgeryTokenName;\n\n            },\n\n            _renderField: function(item) {\n                var that = this,\n                    formStyles = Form.styles,\n                    isHorizontal = that.options.orientation === formOrientation.horizontal,\n                    fieldType = that._model.fields && that._model.fields[item.field] && that._model.fields[item.field].type,\n                    isBoolField = fieldType && fieldType === \"boolean\",\n                    fieldTemplate, renderedField;\n\n                if (isBoolField && isHorizontal) {\n                    fieldTemplate = that._noLabelfieldTemplate;\n                } else {\n                    fieldTemplate = that._fieldTemplate;\n                }\n\n                renderedField = (kendo.template(fieldTemplate)({\n                    styles: formStyles,\n                    id: item.id || item.field || \"\",\n                    field: item.field || \"\",\n                    label: isBoolField ? null : that._formatLabel(item.field, item.label),\n                    colSpan: item.colSpan || \"\",\n                    optional: that.options.messages.optional,\n                    hidden: that._isHidden(item.editor) || that._isAntiForgeryToken(item.field)\n                }));\n\n                return renderedField;\n            },\n\n            _toggleFieldErrorState: function(element, state) {\n                var field = element.closest(DOT + formStyles.field);\n\n                if (field.length) {\n                    field.toggleClass(formStyles.fieldError, state);\n                }\n            },\n\n            _renderBoolLabels: function() {\n                var that = this,\n                    formStyles = Form.styles,\n                    fields = that._fields,\n                    field, fieldElement;\n\n                for (var i = 0; i < fields.length; i += 1) {\n                    field = fields[i];\n                    fieldElement = that.wrapper.find(\"[name='\" + field.name + \"']:not([type='hidden'])\");\n\n                    if (!fieldElement || !field.label || field.isHidden || field.type !== \"boolean\") {\n                        continue;\n                    }\n\n                    fieldElement.after(kendo.template(that._boolLabelTemplate)({\n                        styles: formStyles,\n                        id: field.id || field.field || \"\",\n                        optional: that.options.messages.optional,\n                        label: that._formatLabel(field.field, field.label)\n                    }));\n                }\n            },\n\n            _renderFieldsHints: function() {\n                var that = this,\n                    fields = that._fields,\n                    field, fieldWidgetInstance, fieldElement, nextLabelElement, hint;\n\n                for (var i = 0; i < fields.length; i += 1) {\n                    field = fields[i];\n                    fieldElement = that.wrapper.find(\"[name='\" + field.name + \"']\");\n\n                    if (!fieldElement || !field.hint || field.isHidden) {\n                        continue;\n                    }\n\n                    hint = $(kendo.template(that._hintTemplate)({ message: field.hint || \"\", id: field.id }));\n\n                    that._associateHintContainer(fieldElement, hint.attr(\"id\"));\n\n                    fieldWidgetInstance = kendo.widgetInstance(fieldElement);\n\n                    if (fieldWidgetInstance) {\n                        nextLabelElement = fieldWidgetInstance.element.next(\"label[for='\" + fieldWidgetInstance.element.attr(\"id\") + \"']\");\n                        fieldElement = nextLabelElement.length ? nextLabelElement : fieldWidgetInstance.wrapper;\n                    }\n\n                    if (that.validator._errorsByName(field.name).length) {\n                        hint.toggleClass(formStyles.hidden);\n                        kendo.removeAttribute(fieldElement, ARIA_DESCRIBEDBY, hint.attr(\"id\"));\n                    }\n\n                    hint.insertAfter(fieldElement);\n                }\n            },\n\n            _associateHintContainer: function(input, hintId) {\n                var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n                if (!nextFocusable || !hintId) {\n                    return;\n                }\n\n                kendo.toggleAttribute(nextFocusable, ARIA_DESCRIBEDBY, hintId);\n            },\n\n            _toggleHint: function(element, state) {\n                var that = this,\n                    field = element.closest(DOT + formStyles.field),\n                    hint;\n\n                if (field.length) {\n                    hint = field.find(DOT + formStyles.fieldHint);\n\n                    if (hint.length) {\n                        hint.toggleClass(formStyles.hidden, state);\n                        that._associateHintContainer(element, hint.attr(\"id\"));\n                    }\n                }\n            },\n\n            _renderGroup: function(item) {\n                var that = this,\n                    type = item.type,\n                    child, renderedGroup, fieldsContainer;\n\n                fieldsContainer = renderedGroup = $(kendo.template(that._getItemTemplate(type))({\n                    styles: formStyles,\n                    label: item.label || \"\",\n                    colSpan: item.colSpan\n                }));\n\n                fieldsContainer = that._setupLayoutContainer(renderedGroup, {\n                    grid: item.grid,\n                    layout: item.layout\n                }) || renderedGroup;\n\n                for (var i = 0; i < item.items.length; i += 1) {\n                    child = item.items[i];\n                    fieldsContainer.append(that._renderField(child));\n                }\n\n                return renderedGroup;\n            },\n\n            _renderContainers: function() {\n                var that = this,\n                    defaultFields = that._defaultFields(),\n                    columnsLayout = that.options.layout === \"grid\",\n                    targetContainer = columnsLayout ? that.layoutWrapper : that.wrapper,\n                    item, type, container;\n\n                for (var i = 0; i < defaultFields.length; i += 1) {\n                    item = defaultFields[i];\n                    type = item.type;\n\n                    if (type === GROUP) {\n                        container = that._renderGroup(item);\n                    } else {\n                        container = that._renderField(item);\n                    }\n\n                    targetContainer.append(container);\n                }\n            },\n\n            _renderButtons: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    messages = options.messages,\n                    formStyles = Form.styles,\n                    isHorizontal = options.orientation === formOrientation.horizontal,\n                    buttonsContainer = wrapper.find(DOT + formStyles.buttonsContainer),\n                    buttonsTemplate;\n\n                if (!buttonsContainer.length) {\n                    buttonsContainer = $(\"<div />\")\n                        .addClass(formStyles.buttonsContainer)\n                        .addClass(isHorizontal ? formStyles.buttonsEnd : \"\");\n                }\n\n                buttonsTemplate = options.buttonsTemplate !== null ? options.buttonsTemplate : that._buttonsTemplate;\n\n                buttonsContainer.append(kendo.template(buttonsTemplate)({\n                    styles: formStyles,\n                    messages: messages\n                }));\n\n                that.element.append(buttonsContainer);\n            },\n\n            _setupLayoutContainer: function(appendTarget, options) {\n                var layout = options.layout,\n                    grid = options.grid,\n                    layoutClassNames = [],\n                    layoutContainer;\n\n                if (typeof layout === \"string\" && layout !== \"\") {\n                    layoutContainer = $(\"<div></div>\")\n                        .appendTo(appendTarget)\n                        .addClass(formStyles.layout);\n\n                    layoutClassNames.push(\"k-d-\" + layout);\n                }\n\n                if (layout === \"grid\" && typeof grid === \"object\") {\n                    if (typeof grid.cols === \"number\") {\n                        layoutClassNames.push(\"k-grid-cols-\" + grid.cols);\n                    } else if (typeof grid.cols === \"string\") {\n                        layoutContainer.css(\"grid-template-columns\", grid.cols);\n                    }\n\n                    if (typeof grid.gutter === \"number\" || typeof grid.gutter === \"string\") {\n                        layoutContainer.css(\"grid-gap\", grid.gutter);\n                    }\n                }\n\n                if (layoutContainer) {\n                    layoutContainer.addClass(layoutClassNames.join(\" \"));\n                }\n\n                return layoutContainer;\n            },\n\n            _setEvents: function() {\n                var that = this,\n                    validator = that.validator;\n\n                validator\n                    .bind(VALIDATEINPUT, that._validateField.bind(that))\n                    .bind(VALIDATE, that._validate.bind(that));\n\n                that.wrapper\n                    .on(SUBMIT + NS, that._submit.bind(that))\n                    .on(CLEAR + NS, that._clear.bind(that))\n                    .on(CLICK + NS, DOT + formStyles.clear, that._clear.bind(that));\n\n                if (!that._changeHandler) {\n                    that._changeHandler = that._change.bind(that);\n                }\n\n                that._model.bind(CHANGE, that._changeHandler);\n            },\n\n            _validateField: function(ev) {\n                var that = this,\n                    data = {\n                        model: that._model.toJSON(),\n                        valid: ev.valid,\n                        field: ev.field,\n                        error: ev.error,\n                        input: ev.input\n                    };\n\n                that._toggleFieldErrorState(data.input, !data.valid);\n\n                that._toggleHint(data.input, !data.valid);\n\n                if (that.trigger(VALIDATEFIELD, data)) {\n                    ev.preventDefault();\n                }\n            },\n\n            _validate: function(ev) {\n                var that = this,\n                    data = {\n                        model: that._model.toJSON(),\n                        valid: ev.valid,\n                        errors: ev.errors\n                    };\n\n                that.trigger(VALIDATE, data);\n            },\n\n            _change: function(ev) {\n                var that = this,\n                    field = ev.field,\n                    data = {\n                        field: field,\n                        value: that._model[field]\n                    };\n\n                that.trigger(CHANGE, data);\n            },\n\n            _submit: function(ev) {\n                var that = this,\n                    jsonModel = that._model.toJSON();\n\n                if (that.trigger(SUBMIT, { model: jsonModel })) {\n                    ev.preventDefault();\n                }\n            },\n\n            _clear: function(ev) {\n                var that = this;\n\n                ev.preventDefault();\n\n                that.clear();\n\n                that.trigger(CLEAR);\n            },\n\n            validate: function() {\n                var that = this,\n                    validator = that.validator;\n\n                if (!validator) {\n                    return;\n                }\n\n                return validator.validate();\n            },\n\n            clear: function() {\n                var that = this,\n                    fields = that._fields,\n                    model = that._model,\n                    editable = that.editable,\n                    validateOnBlur = that.validator.options.validateOnBlur;\n\n                that.validator.reset();\n\n                if (validateOnBlur) {\n                    model\n                        .unbind(SET)\n                        .unbind(EQUAL_SET);\n                }\n\n                for (var i = 0; i < fields.length; i += 1) {\n                    var field = fields[i].field;\n                    var element = that.wrapper.find(\"[name='\" + field + \"']\");\n                    var widgetInstance = kendo.widgetInstance(element);\n                    var isHiddenInput = element.is(\"input[type=hidden]\");\n\n                    if (!element.is(DATA_ROLE_CHECKBOX_GROUP) && !element.is(DATA_ROLE_RADIO_GROUP) && !isHiddenInput) {\n                        element.val(\"\");\n                    }\n\n                    if (!widgetInstance && element.hasClass(\"k-hidden\")) {\n                        widgetInstance = kendo.widgetInstance(element.closest(\".k-signature\"));\n                    }\n\n                    if (widgetInstance) {\n                        if (widgetInstance instanceof kendo.ui.Upload) {\n                            widgetInstance.clearAllFiles();\n                        } else {\n                            widgetInstance.value(null);\n                        }\n                    }\n\n                    that._toggleHint(element, false);\n\n                    if (typeof model[field] === \"boolean\") {\n                        element.val(\"false\");\n                        model.set(field, false);\n                    } else if (!isHiddenInput) {\n                        model.set(field, null);\n                    }\n                }\n\n                that.wrapper.find(DOT + formStyles.fieldError)\n                    .removeClass(formStyles.fieldError);\n\n                if (validateOnBlur) {\n                    model\n                        .bind(SET, editable._validateProxy)\n                        .bind(EQUAL_SET, editable._validateProxy);\n                }\n            },\n\n            setOptions: function(newOptions) {\n                var that = this;\n\n                that.destroy();\n\n                that.wrapper\n                    .removeClass(formStyles.horizontal)\n                    .removeAttr(DATA_STOP)\n                    .empty();\n\n                that.init(that.element, newOptions);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n\n                if (that._model) {\n                    that._model.unbind(CHANGE, that._changeHandler);\n                    that._changeHandler = null;\n                }\n\n                Widget.fn.destroy.call(that.editable);\n\n                Widget.fn.destroy.call(that);\n\n                if (that.editable) {\n                    that.editable.destroy();\n                    that.editable = null;\n                }\n            }\n        });\n\n        ui.plugin(Form);\n\n        extend(true, Form, { styles: formStyles });\n\n  })(window.kendo.jQuery);\n"]}