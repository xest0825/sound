{"version":3,"file":"kendo.form.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","NS","Widget","extend","encode","htmlEncode","VALIDATE","VALIDATEFIELD","CHANGE","SUBMIT","CLEAR","EQUAL_SET","GROUP","ARIA_DESCRIBEDBY","DATA_STOP","DATA_ROLE","DOT","formStyles","form","horizontal","vertical","field","fieldsContainer","fieldWrap","fieldError","fieldHint","fieldset","layout","legend","label","emptyLabel","optional","buttonsContainer","buttonsEnd","submit","clear","invalid","hidden","formOrientation","Form","init","element","options","that","this","fn","call","deepExtend","formData","_wrapper","_setFields","_setModel","_renderContainers","_renderButtons","_editable","_renderBoolLabels","_renderFieldsHints","_setEvents","events","orientation","validatable","validateOnBlur","validationSummary","errorTemplate","buttonsTemplate","messages","grid","items","formatLabel","focusFirst","_noLabelfieldTemplate","styles","colSpan","_fieldTemplate","encoded","text","_boolLabelTemplate","_groupTemplate","_buttonsTemplate","_errorTemplate","message","_hintTemplate","width","height","wrapper","addClass","css","layoutWrapper","_setupLayoutContainer","_flattenFields","fields","concat","item","shift","result","push","apply","_defaultLabel","fieldName","customFormat","length","isFunction","split","join","trim","_formatLabel","isPlainObject","_defaultFields","formDataFields","Object","keys","itemFields","defaultFormDataFields","i","fieldInfo","fieldValue","type","editor","attributes","defaultFields","_fields","parseDate","toString","Editable","editors","_isHidden","optionalText","isHidden","_isAntiForgeryToken","data","ObservableObject","_model","MyModel","Model","define","validatorOptions","_addEditableMvvmAttributes","editable","kendoEditable","model","clearContainer","skipFocus","target","getKendoEditable","validator","_removeEditableMvvmAttributes","attr","_getItemTemplate","antiForgeryTokenName","_renderField","fieldTemplate","isHorizontal","fieldType","isBoolField","template","_toggleFieldErrorState","state","closest","toggleClass","fieldElement","find","after","fieldWidgetInstance","nextLabelElement","hint","_associateHintContainer","widgetInstance","next","_errorsByName","removeAttribute","insertAfter","input","hintId","nextFocusable","getWidgetFocusableElement","toggleAttribute","_toggleHint","_renderGroup","child","renderedGroup","append","container","targetContainer","appendTarget","layoutContainer","layoutClassNames","appendTo","cols","gutter","bind","_validateField","_validate","on","_submit","_clear","_changeHandler","_change","ev","toJSON","valid","error","trigger","preventDefault","errors","value","jsonModel","validate","reset","unbind","isHiddenInput","is","val","hasClass","Upload","clearAllFiles","set","removeClass","_validateProxy","setOptions","newOptions","destroy","removeAttr","empty","off","plugin","jQuery"],"sources":["kendo.form.js"],"mappings":"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","sourcesContent":["import './kendo.editable.js';\n\nvar __meta__ = {\n        id: \"form\",\n        name: \"Form\",\n        category: \"web\",\n        description: \"The Form widget.\",\n        depends: [ \"editable\" ],\n        features: [{\n            id: \"form-dropdowns\",\n            name: \"DropDowns\",\n            description: \"Support for DropDown editors\",\n            depends: [ \"autocomplete\", \"combobox\", \"multiselect\", \"dropdowntree\", \"multicolumncombobox\" ]\n        }, {\n            id: \"form-datepickers\",\n            name: \"DatePickers\",\n            description: \"Support for DatePicker editors\",\n            depends: [ \"dateinput\", \"datepicker\", \"datetimepicker\", \"timepicker\" ]\n        }, {\n            id: \"form-inputs\",\n            name: \"Inputs\",\n            description: \"Support for Input editors\",\n            depends: [ \"numerictextbox\", \"maskedtextbox\", \"switch\", \"rating\", \"slider\", \"colorpicker\", \"radiogroup\", \"checkboxgroup\", \"textbox\", \"textarea\", \"checkbox\" ]\n        }, {\n            id: \"form-editor\",\n            name: \"Editor\",\n            description: \"Support for Editor editor\",\n            depends: [ \"editor\" ]\n        }]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            NS = \".kendoForm\",\n            Widget = ui.Widget,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            VALIDATE = \"validate\",\n            VALIDATEFIELD = \"validateField\",\n            VALIDATEINPUT = \"validateInput\",\n            CHANGE = \"change\",\n            CLICK = \"click\" + NS,\n            SUBMIT = \"submit\",\n            CLEAR = \"clear\",\n            MAX_WIDTH = \"max-width\",\n            SET = \"set\",\n            EQUAL_SET = \"equalSet\",\n            GROUP = \"group\",\n            ARIA_DESCRIBEDBY = \"aria-describedby\",\n            DATA_STOP = \"data-stop\",\n            DATA_ROLE = \"data-role\",\n            EDITABLE = \"editable\",\n            FORM = \"form\",\n            DOT = \".\",\n            DATA_ROLE_RADIO_GROUP = \"[data-role='radiogroup']\",\n            DATA_ROLE_CHECKBOX_GROUP = \"[data-role='checkboxgroup']\";\n\n        var formStyles = {\n            form: \"k-widget k-form\",\n            horizontal: \"k-form-horizontal\",\n            vertical: \"\",\n            field: \"k-form-field\",\n            fieldsContainer: \"k-form-fields-container\",\n            fieldWrap: \"k-form-field-wrap\",\n            fieldError: \"k-form-field-error\",\n            fieldHint: \"k-form-hint\",\n            fieldset: \"k-form-fieldset\",\n            layout: \"k-form-layout\",\n            legend: \"k-form-legend\",\n            label: \"k-label k-form-label\",\n            emptyLabel: \"k-form-label k-label-empty\",\n            optional: \"k-label-optional\",\n            buttonsContainer: \"k-form-buttons\",\n            buttonsEnd: \"k-buttons-end\",\n            submit: \"k-form-submit\",\n            clear: \"k-form-clear\",\n            invalid: \"k-invalid\",\n            hidden: \"k-hidden\"\n        };\n\n        var formOrientation = {\n            horizontal: \"horizontal\",\n            vertical: \"vertical\"\n        };\n\n        var Form = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.options = kendo.deepExtend({}, that.options, options);\n\n                if (options && options.formData) {\n                    that.options.formData = options.formData;\n                }\n\n                that._wrapper();\n\n                that._setFields();\n\n                that._setModel();\n\n                that._renderContainers();\n\n                that._renderButtons();\n\n                that._editable();\n\n                that._renderBoolLabels();\n\n                that._renderFieldsHints();\n\n                that._setEvents();\n            },\n\n            events: [\n                VALIDATEFIELD,\n                VALIDATE,\n                CHANGE,\n                SUBMIT,\n                CLEAR\n            ],\n\n            options: {\n                name: \"Form\",\n                orientation: formOrientation.vertical,\n                validatable: {\n                    validateOnBlur: true,\n                    validationSummary: false,\n                    errorTemplate: null\n                },\n                buttonsTemplate: null,\n                messages: {\n                    submit: \"Submit\",\n                    clear: \"Clear\",\n                    optional: \"(Optional)\"\n                },\n                layout: \"\",\n                grid: {},\n                formData: {},\n                items: [],\n                formatLabel: null,\n                focusFirst: false\n            },\n\n            _noLabelfieldTemplate: ({ styles, colSpan, hidden, field })=>\n                                    `<div class='${encode(styles.field)} ${colSpan ? `k-colspan-${encode(colSpan)}` : '' } ${hidden ? encode(styles.hidden) : '' }'>` +\n                                        `<span class='${encode(styles.emptyLabel)}'></span>` +\n                                        `<div class='k-form-field-wrap' data-container-for='${encode(field)}'></div>` +\n                                    \"</div>\",\n\n            _fieldTemplate: ({ styles, colSpan, hidden, field, label, id, optional }) =>\n                            `<div class='${encode(styles.field)} ${colSpan ? `k-colspan-${encode(colSpan)}` : ''} ${hidden ? `${encode(styles.hidden)}` : ''}'>` +\n                                ((label && !hidden) ?\n                                `<label class='${encode(styles.label)}' for='${encode(id)}' id='${encode(id)}-form-label'>` +\n                                    ((typeof label.encoded != 'undefined' && label.encoded === false) ?\n                                    label.text || label\n                                    : encode(label.text || label)) +\n                                    (label.optional ? `<span class='${encode(styles.optional)}'>${encode(optional)}</span>` : '') +\n                                \"</label>\"\n                                : '' ) +\n                                `<div class='k-form-field-wrap' data-container-for='${encode(field)}'></div>` +\n                            \"</div>\",\n\n            _boolLabelTemplate: ({ styles, colSpan, hidden, field, label, id, optional }) =>\n                            `<label class='k-checkbox-label' for='${encode(id)}' id='${encode(id)}-form-label'>` +\n                                ((typeof label.encoded != 'undefined' && label.encoded === false) ?\n                                label.text || label\n                                : encode(label.text || label)) +\n                                (label.optional ? `<span class='${encode(styles.optional)}'>${encode(optional)}</span>` : '') +\n                            \"</label>\",\n\n            _groupTemplate: ({ styles, colSpan, label }) =>\n                            `<fieldset class='${encode(styles.fieldset)} ${colSpan ? `k-colspan-${encode(colSpan)}` : ''}'>` +\n                                `<legend class='${encode(styles.legend)}'>${encode(label.text || label)}</legend>` +\n                            \"</fieldset>\",\n\n            _buttonsTemplate: ({ styles, messages }) =>\n                            `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary ${encode(styles.submit)}' type='submit'><span class='k-button-text'>${encode(messages.submit)}</span></button>` +\n                            `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base ${encode(styles.clear)}'><span class='k-button-text'>${encode(messages.clear)}</span></button>`,\n\n            _errorTemplate: ({ field, message }) => `<span class='k-form-error' id='${field}-form-error'><div>${message}</div></span>`,\n\n            _hintTemplate: ({ id, message }) => `<div class='k-form-hint' id='${id}-form-hint'><span>${message}</span></div>`,\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    formStyles = Form.styles,\n                    width = options.width,\n                    height = options.height;\n\n                that.wrapper = that.element\n                    .addClass(formStyles.form)\n                    .addClass(formStyles[options.orientation]);\n\n                if (height) {\n                    that.wrapper.height(height);\n                }\n\n                if (width) {\n                    that.wrapper.css(MAX_WIDTH, width);\n                }\n\n                that.layoutWrapper = that._setupLayoutContainer(that.wrapper, {\n                    grid: options.grid,\n                    layout: options.layout\n                });\n            },\n\n            _flattenFields: function(fields) {\n                var items = [].concat(fields),\n                    item = items.shift(),\n                    result = [],\n                    push = [].push;\n\n                while (item) {\n                    if (item.items) {\n                        push.apply(items, item.items);\n                    } else {\n                        push.call(result, item);\n                    }\n\n                    item = items.shift();\n                }\n\n                return result;\n            },\n\n            _defaultLabel: function(fieldName) {\n                var that = this,\n                    customFormat = that.options.formatLabel;\n\n                if (!fieldName.length) {\n                    return;\n                }\n\n                if (kendo.isFunction(customFormat)) {\n                    return customFormat(fieldName);\n                }\n\n                return fieldName.split(/(.*[a-z])(?=[A-Z])/).join(\" \").trim() + \":\";\n            },\n\n            _formatLabel: function(field, label) {\n                var that = this,\n                    text = $.isPlainObject(label) ? label.text : label;\n\n                if (text !== undefined$1) {\n                    return label;\n                }\n\n                return that._defaultLabel(field);\n            },\n\n            _defaultFields: function() {\n                var that = this,\n                    options = that.options,\n                    formDataFields = Object.keys(options.formData || {}),\n                    itemFields = options.items || {},\n                    defaultFormDataFields = [],\n                    field;\n\n                if (itemFields.length) {\n                    return itemFields;\n                }\n\n                for (var i = 0; i < formDataFields.length; i += 1) {\n                    field = formDataFields[i];\n\n                    defaultFormDataFields.push({\n                        field: field,\n                        id: field\n                    });\n                }\n\n                return defaultFormDataFields;\n            },\n\n            _setFields: function() {\n                var that = this,\n                    defaultFields = that._flattenFields(that._defaultFields()),\n                    formData = that.options.formData || {},\n                    fieldInfo, fieldValue, type, editor, attributes;\n\n                that._fields = [];\n\n                for (var field in defaultFields) {\n                    fieldInfo = defaultFields[field];\n                    fieldValue = formData[fieldInfo.field];\n\n                    type = typeof fieldInfo.editor === \"string\" ? fieldInfo.editor :\n                        kendo.type(fieldValue ? kendo.parseDate(fieldValue.toString()) || fieldValue : fieldValue);\n\n                    editor = kendo.isFunction(fieldInfo.editor) ? fieldInfo.editor :\n                         ui.Editable.fn.options.editors[type] ? \"\" : fieldInfo.editor;\n\n                    if (!that._isHidden(fieldInfo.editor)) {\n                        if (fieldInfo.label) {\n                            attributes = {\n                                \"aria-labelledby\": fieldInfo.id || fieldInfo.field + \"-form-label\"\n                            };\n                        } else if (!fieldInfo.attributes || !fieldInfo.attributes[\"aria-label\"]) {\n                            attributes = {\n                                \"aria-label\": fieldInfo.name || fieldInfo.field\n                            };\n                        }\n                    }\n\n                    fieldInfo = extend(true, {\n                        label: fieldInfo.label || fieldInfo.name || fieldInfo.field,\n                        optionalText: that.options.messages.optional\n                    }, fieldInfo, {\n                        id: fieldInfo.id || fieldInfo.field,\n                        name: fieldInfo.name || fieldInfo.field,\n                        type: type,\n                        editor: editor,\n                        attributes: attributes,\n                        isHidden: that._isHidden(fieldInfo.editor) || that._isAntiForgeryToken(fieldInfo.name || fieldInfo.field)\n                    });\n\n                    that._fields[field] = fieldInfo;\n                }\n            },\n\n            _setModel: function() {\n                var that = this,\n                    options = that.options,\n                    formData = options.formData || {};\n\n                if (options.formData instanceof kendo.data.ObservableObject) {\n                    that._model = formData;\n                    return;\n                }\n\n                var MyModel = kendo.data.Model.define({ fields: that._fields });\n\n                that._model = new MyModel(formData);\n            },\n\n            _editable: function() {\n                var that = this,\n                    options = that.options,\n                    validatorOptions = that.options.validatable;\n\n                that._addEditableMvvmAttributes();\n\n                that.editable = that.wrapper.kendoEditable({\n                    model: that._model,\n                    fields: that._fields || [],\n                    validateOnBlur: validatorOptions.validateOnBlur,\n                    validationSummary: validatorOptions.validationSummary,\n                    errorTemplate: validatorOptions.errorTemplate || that._errorTemplate,\n                    clearContainer: false,\n                    skipFocus: !options.focusFirst,\n                    target: that\n                }).getKendoEditable();\n\n                that.validator = that.editable.validatable;\n\n                that._removeEditableMvvmAttributes();\n            },\n\n            _addEditableMvvmAttributes: function() {\n                // required for two mvvm bindable widgets on one element\n                this.wrapper.attr(DATA_ROLE, EDITABLE);\n            },\n\n            _removeEditableMvvmAttributes: function() {\n                // required for two mvvm bindable widgets on one element\n                this.wrapper\n                    .attr(DATA_STOP, true)\n                    .attr(DATA_ROLE, FORM);\n            },\n\n            _getItemTemplate: function(type) {\n                var that = this,\n                    template;\n\n                if (type === GROUP) {\n                    template = that._groupTemplate;\n                } else {\n                    template = that._fieldTemplate;\n                }\n\n                return template;\n            },\n\n            _isHidden: function(editor) {\n                return typeof editor === \"string\" && editor === \"hidden\";\n            },\n\n            _isAntiForgeryToken: function(field) {\n                return field === ui.Editable.antiForgeryTokenName;\n\n            },\n\n            _renderField: function(item) {\n                var that = this,\n                    formStyles = Form.styles,\n                    isHorizontal = that.options.orientation === formOrientation.horizontal,\n                    fieldType = that._model.fields && that._model.fields[item.field] && that._model.fields[item.field].type,\n                    isBoolField = fieldType && fieldType === \"boolean\",\n                    fieldTemplate, renderedField;\n\n                if (isBoolField && isHorizontal) {\n                    fieldTemplate = that._noLabelfieldTemplate;\n                } else {\n                    fieldTemplate = that._fieldTemplate;\n                }\n\n                renderedField = (kendo.template(fieldTemplate)({\n                    styles: formStyles,\n                    id: item.id || item.field || \"\",\n                    field: item.field || \"\",\n                    label: isBoolField ? null : that._formatLabel(item.field, item.label),\n                    colSpan: item.colSpan || \"\",\n                    optional: that.options.messages.optional,\n                    hidden: that._isHidden(item.editor) || that._isAntiForgeryToken(item.field)\n                }));\n\n                return renderedField;\n            },\n\n            _toggleFieldErrorState: function(element, state) {\n                var field = element.closest(DOT + formStyles.field);\n\n                if (field.length) {\n                    field.toggleClass(formStyles.fieldError, state);\n                }\n            },\n\n            _renderBoolLabels: function() {\n                var that = this,\n                    formStyles = Form.styles,\n                    fields = that._fields,\n                    field, fieldElement;\n\n                for (var i = 0; i < fields.length; i += 1) {\n                    field = fields[i];\n                    fieldElement = that.wrapper.find(\"[name='\" + field.name + \"']:not([type='hidden'])\");\n\n                    if (!fieldElement || !field.label || field.isHidden || field.type !== \"boolean\") {\n                        continue;\n                    }\n\n                    fieldElement.after(kendo.template(that._boolLabelTemplate)({\n                        styles: formStyles,\n                        id: field.id || field.field || \"\",\n                        optional: that.options.messages.optional,\n                        label: that._formatLabel(field.field, field.label)\n                    }));\n                }\n            },\n\n            _renderFieldsHints: function() {\n                var that = this,\n                    fields = that._fields,\n                    field, fieldWidgetInstance, fieldElement, nextLabelElement, hint;\n\n                for (var i = 0; i < fields.length; i += 1) {\n                    field = fields[i];\n                    fieldElement = that.wrapper.find(\"[name='\" + field.name + \"']\");\n\n                    if (!fieldElement || !field.hint || field.isHidden) {\n                        continue;\n                    }\n\n                    hint = $(kendo.template(that._hintTemplate)({ message: field.hint || \"\", id: field.id }));\n\n                    that._associateHintContainer(fieldElement, hint.attr(\"id\"));\n\n                    fieldWidgetInstance = kendo.widgetInstance(fieldElement);\n\n                    if (fieldWidgetInstance) {\n                        nextLabelElement = fieldWidgetInstance.element.next(\"label[for='\" + fieldWidgetInstance.element.attr(\"id\") + \"']\");\n                        fieldElement = nextLabelElement.length ? nextLabelElement : fieldWidgetInstance.wrapper;\n                    }\n\n                    if (that.validator._errorsByName(field.name).length) {\n                        hint.toggleClass(formStyles.hidden);\n                        kendo.removeAttribute(fieldElement, ARIA_DESCRIBEDBY, hint.attr(\"id\"));\n                    }\n\n                    hint.insertAfter(fieldElement);\n                }\n            },\n\n            _associateHintContainer: function(input, hintId) {\n                var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n                if (!nextFocusable || !hintId) {\n                    return;\n                }\n\n                kendo.toggleAttribute(nextFocusable, ARIA_DESCRIBEDBY, hintId);\n            },\n\n            _toggleHint: function(element, state) {\n                var that = this,\n                    field = element.closest(DOT + formStyles.field),\n                    hint;\n\n                if (field.length) {\n                    hint = field.find(DOT + formStyles.fieldHint);\n\n                    if (hint.length) {\n                        hint.toggleClass(formStyles.hidden, state);\n                        that._associateHintContainer(element, hint.attr(\"id\"));\n                    }\n                }\n            },\n\n            _renderGroup: function(item) {\n                var that = this,\n                    type = item.type,\n                    child, renderedGroup, fieldsContainer;\n\n                fieldsContainer = renderedGroup = $(kendo.template(that._getItemTemplate(type))({\n                    styles: formStyles,\n                    label: item.label || \"\",\n                    colSpan: item.colSpan\n                }));\n\n                fieldsContainer = that._setupLayoutContainer(renderedGroup, {\n                    grid: item.grid,\n                    layout: item.layout\n                }) || renderedGroup;\n\n                for (var i = 0; i < item.items.length; i += 1) {\n                    child = item.items[i];\n                    fieldsContainer.append(that._renderField(child));\n                }\n\n                return renderedGroup;\n            },\n\n            _renderContainers: function() {\n                var that = this,\n                    defaultFields = that._defaultFields(),\n                    columnsLayout = that.options.layout === \"grid\",\n                    targetContainer = columnsLayout ? that.layoutWrapper : that.wrapper,\n                    item, type, container;\n\n                for (var i = 0; i < defaultFields.length; i += 1) {\n                    item = defaultFields[i];\n                    type = item.type;\n\n                    if (type === GROUP) {\n                        container = that._renderGroup(item);\n                    } else {\n                        container = that._renderField(item);\n                    }\n\n                    targetContainer.append(container);\n                }\n            },\n\n            _renderButtons: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    messages = options.messages,\n                    formStyles = Form.styles,\n                    isHorizontal = options.orientation === formOrientation.horizontal,\n                    buttonsContainer = wrapper.find(DOT + formStyles.buttonsContainer),\n                    buttonsTemplate;\n\n                if (!buttonsContainer.length) {\n                    buttonsContainer = $(\"<div />\")\n                        .addClass(formStyles.buttonsContainer)\n                        .addClass(isHorizontal ? formStyles.buttonsEnd : \"\");\n                }\n\n                buttonsTemplate = options.buttonsTemplate !== null ? options.buttonsTemplate : that._buttonsTemplate;\n\n                buttonsContainer.append(kendo.template(buttonsTemplate)({\n                    styles: formStyles,\n                    messages: messages\n                }));\n\n                that.element.append(buttonsContainer);\n            },\n\n            _setupLayoutContainer: function(appendTarget, options) {\n                var layout = options.layout,\n                    grid = options.grid,\n                    layoutClassNames = [],\n                    layoutContainer;\n\n                if (typeof layout === \"string\" && layout !== \"\") {\n                    layoutContainer = $(\"<div></div>\")\n                        .appendTo(appendTarget)\n                        .addClass(formStyles.layout);\n\n                    layoutClassNames.push(\"k-d-\" + layout);\n                }\n\n                if (layout === \"grid\" && typeof grid === \"object\") {\n                    if (typeof grid.cols === \"number\") {\n                        layoutClassNames.push(\"k-grid-cols-\" + grid.cols);\n                    } else if (typeof grid.cols === \"string\") {\n                        layoutContainer.css(\"grid-template-columns\", grid.cols);\n                    }\n\n                    if (typeof grid.gutter === \"number\" || typeof grid.gutter === \"string\") {\n                        layoutContainer.css(\"grid-gap\", grid.gutter);\n                    }\n                }\n\n                if (layoutContainer) {\n                    layoutContainer.addClass(layoutClassNames.join(\" \"));\n                }\n\n                return layoutContainer;\n            },\n\n            _setEvents: function() {\n                var that = this,\n                    validator = that.validator;\n\n                validator\n                    .bind(VALIDATEINPUT, that._validateField.bind(that))\n                    .bind(VALIDATE, that._validate.bind(that));\n\n                that.wrapper\n                    .on(SUBMIT + NS, that._submit.bind(that))\n                    .on(CLEAR + NS, that._clear.bind(that))\n                    .on(CLICK + NS, DOT + formStyles.clear, that._clear.bind(that));\n\n                if (!that._changeHandler) {\n                    that._changeHandler = that._change.bind(that);\n                }\n\n                that._model.bind(CHANGE, that._changeHandler);\n            },\n\n            _validateField: function(ev) {\n                var that = this,\n                    data = {\n                        model: that._model.toJSON(),\n                        valid: ev.valid,\n                        field: ev.field,\n                        error: ev.error,\n                        input: ev.input\n                    };\n\n                that._toggleFieldErrorState(data.input, !data.valid);\n\n                that._toggleHint(data.input, !data.valid);\n\n                if (that.trigger(VALIDATEFIELD, data)) {\n                    ev.preventDefault();\n                }\n            },\n\n            _validate: function(ev) {\n                var that = this,\n                    data = {\n                        model: that._model.toJSON(),\n                        valid: ev.valid,\n                        errors: ev.errors\n                    };\n\n                that.trigger(VALIDATE, data);\n            },\n\n            _change: function(ev) {\n                var that = this,\n                    field = ev.field,\n                    data = {\n                        field: field,\n                        value: that._model[field]\n                    };\n\n                that.trigger(CHANGE, data);\n            },\n\n            _submit: function(ev) {\n                var that = this,\n                    jsonModel = that._model.toJSON();\n\n                if (that.trigger(SUBMIT, { model: jsonModel })) {\n                    ev.preventDefault();\n                }\n            },\n\n            _clear: function(ev) {\n                var that = this;\n\n                ev.preventDefault();\n\n                that.clear();\n\n                that.trigger(CLEAR);\n            },\n\n            validate: function() {\n                var that = this,\n                    validator = that.validator;\n\n                if (!validator) {\n                    return;\n                }\n\n                return validator.validate();\n            },\n\n            clear: function() {\n                var that = this,\n                    fields = that._fields,\n                    model = that._model,\n                    editable = that.editable,\n                    validateOnBlur = that.validator.options.validateOnBlur;\n\n                that.validator.reset();\n\n                if (validateOnBlur) {\n                    model\n                        .unbind(SET)\n                        .unbind(EQUAL_SET);\n                }\n\n                for (var i = 0; i < fields.length; i += 1) {\n                    var field = fields[i].field;\n                    var element = that.wrapper.find(\"[name='\" + field + \"']\");\n                    var widgetInstance = kendo.widgetInstance(element);\n                    var isHiddenInput = element.is(\"input[type=hidden]\");\n\n                    if (!element.is(DATA_ROLE_CHECKBOX_GROUP) && !element.is(DATA_ROLE_RADIO_GROUP) && !isHiddenInput) {\n                        element.val(\"\");\n                    }\n\n                    if (!widgetInstance && element.hasClass(\"k-hidden\")) {\n                        widgetInstance = kendo.widgetInstance(element.closest(\".k-signature\"));\n                    }\n\n                    if (widgetInstance) {\n                        if (widgetInstance instanceof kendo.ui.Upload) {\n                            widgetInstance.clearAllFiles();\n                        } else {\n                            widgetInstance.value(null);\n                        }\n                    }\n\n                    that._toggleHint(element, false);\n\n                    if (typeof model[field] === \"boolean\") {\n                        element.val(\"false\");\n                        model.set(field, false);\n                    } else if (!isHiddenInput) {\n                        model.set(field, null);\n                    }\n                }\n\n                that.wrapper.find(DOT + formStyles.fieldError)\n                    .removeClass(formStyles.fieldError);\n\n                if (validateOnBlur) {\n                    model\n                        .bind(SET, editable._validateProxy)\n                        .bind(EQUAL_SET, editable._validateProxy);\n                }\n            },\n\n            setOptions: function(newOptions) {\n                var that = this;\n\n                that.destroy();\n\n                that.wrapper\n                    .removeClass(formStyles.horizontal)\n                    .removeAttr(DATA_STOP)\n                    .empty();\n\n                that.init(that.element, newOptions);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n\n                if (that._model) {\n                    that._model.unbind(CHANGE, that._changeHandler);\n                    that._changeHandler = null;\n                }\n\n                Widget.fn.destroy.call(that.editable);\n\n                Widget.fn.destroy.call(that);\n\n                if (that.editable) {\n                    that.editable.destroy();\n                    that.editable = null;\n                }\n            }\n        });\n\n        ui.plugin(Form);\n\n        extend(true, Form, { styles: formStyles });\n\n  })(window.kendo.jQuery);\n"]}